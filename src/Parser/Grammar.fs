// Implementation file for parser generated by fsyacc
module MobileOwnership.PolicyText.Grammar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Grammar.fsy"

// Copyright (c) Mobile Ownership, mobileownership.org.  All Rights Reserved.  See LICENSE.txt in the project root for license information.

open System
open MobileOwnership.PolicyText
open MobileOwnership.PolicyText.Actions


# 15 "Grammar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | SEMI
  | BAR_SEMI
  | COMMA
  | BAR_COMMA
  | RARROW
  | BAR
  | BANG
  | EQUAL
  | COLON_EQUAL
  | SEND
  | RECEIVE
  | ON
  | REF
  | AS
  | DOT
  | FUN
  | IF
  | THEN
  | ELSE
  | ELIF
  | BEGIN
  | END
  | LET
  | REC
  | IN
  | MATCH
  | WITH
  | WHEN
  | POLICY
  | TRY
  | FINALLY
  | NULL
  | COLON
  | LBRACKET
  | RBRACKET
  | LBRACE
  | RBRACE
  | LPAREN
  | RPAREN
  | OP_MULTIPLICATION of (string)
  | OP_ADDITION of (string)
  | OP_COMPARE of (string)
  | OP_BOOLEAN of (string)
  | BOOLEAN of (bool)
  | DOUBLE of (double)
  | INTEGER of (int64)
  | STRING of (string)
  | IDENT of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_SEMI
    | TOKEN_BAR_SEMI
    | TOKEN_COMMA
    | TOKEN_BAR_COMMA
    | TOKEN_RARROW
    | TOKEN_BAR
    | TOKEN_BANG
    | TOKEN_EQUAL
    | TOKEN_COLON_EQUAL
    | TOKEN_SEND
    | TOKEN_RECEIVE
    | TOKEN_ON
    | TOKEN_REF
    | TOKEN_AS
    | TOKEN_DOT
    | TOKEN_FUN
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_BEGIN
    | TOKEN_END
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_WHEN
    | TOKEN_POLICY
    | TOKEN_TRY
    | TOKEN_FINALLY
    | TOKEN_NULL
    | TOKEN_COLON
    | TOKEN_LBRACKET
    | TOKEN_RBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_OP_MULTIPLICATION
    | TOKEN_OP_ADDITION
    | TOKEN_OP_COMPARE
    | TOKEN_OP_BOOLEAN
    | TOKEN_BOOLEAN
    | TOKEN_DOUBLE
    | TOKEN_INTEGER
    | TOKEN_STRING
    | TOKEN_IDENT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startpolicyText
    | NONTERM_policyText
    | NONTERM_term
    | NONTERM_infix
    | NONTERM_function
    | NONTERM_application
    | NONTERM_infixAssignment
    | NONTERM_infixBoolean
    | NONTERM_infixCompare
    | NONTERM_infixAddition
    | NONTERM_infixMultiplication
    | NONTERM_asPattern
    | NONTERM_annotation
    | NONTERM_if
    | NONTERM_ifElse
    | NONTERM_match
    | NONTERM_policy
    | NONTERM_receive
    | NONTERM_send
    | NONTERM_tryWith
    | NONTERM_tryFinally
    | NONTERM_ref
    | NONTERM_dereference
    | NONTERM_rules
    | NONTERM_rule
    | NONTERM_atomic
    | NONTERM_let
    | NONTERM_map
    | NONTERM_keyValuePairs
    | NONTERM_keyValuePair
    | NONTERM_list
    | NONTERM_commaSepTerms
    | NONTERM_semiSepTerms
    | NONTERM_lookup
    | NONTERM_constant

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | SEMI  -> 1 
  | BAR_SEMI  -> 2 
  | COMMA  -> 3 
  | BAR_COMMA  -> 4 
  | RARROW  -> 5 
  | BAR  -> 6 
  | BANG  -> 7 
  | EQUAL  -> 8 
  | COLON_EQUAL  -> 9 
  | SEND  -> 10 
  | RECEIVE  -> 11 
  | ON  -> 12 
  | REF  -> 13 
  | AS  -> 14 
  | DOT  -> 15 
  | FUN  -> 16 
  | IF  -> 17 
  | THEN  -> 18 
  | ELSE  -> 19 
  | ELIF  -> 20 
  | BEGIN  -> 21 
  | END  -> 22 
  | LET  -> 23 
  | REC  -> 24 
  | IN  -> 25 
  | MATCH  -> 26 
  | WITH  -> 27 
  | WHEN  -> 28 
  | POLICY  -> 29 
  | TRY  -> 30 
  | FINALLY  -> 31 
  | NULL  -> 32 
  | COLON  -> 33 
  | LBRACKET  -> 34 
  | RBRACKET  -> 35 
  | LBRACE  -> 36 
  | RBRACE  -> 37 
  | LPAREN  -> 38 
  | RPAREN  -> 39 
  | OP_MULTIPLICATION _ -> 40 
  | OP_ADDITION _ -> 41 
  | OP_COMPARE _ -> 42 
  | OP_BOOLEAN _ -> 43 
  | BOOLEAN _ -> 44 
  | DOUBLE _ -> 45 
  | INTEGER _ -> 46 
  | STRING _ -> 47 
  | IDENT _ -> 48 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_SEMI 
  | 2 -> TOKEN_BAR_SEMI 
  | 3 -> TOKEN_COMMA 
  | 4 -> TOKEN_BAR_COMMA 
  | 5 -> TOKEN_RARROW 
  | 6 -> TOKEN_BAR 
  | 7 -> TOKEN_BANG 
  | 8 -> TOKEN_EQUAL 
  | 9 -> TOKEN_COLON_EQUAL 
  | 10 -> TOKEN_SEND 
  | 11 -> TOKEN_RECEIVE 
  | 12 -> TOKEN_ON 
  | 13 -> TOKEN_REF 
  | 14 -> TOKEN_AS 
  | 15 -> TOKEN_DOT 
  | 16 -> TOKEN_FUN 
  | 17 -> TOKEN_IF 
  | 18 -> TOKEN_THEN 
  | 19 -> TOKEN_ELSE 
  | 20 -> TOKEN_ELIF 
  | 21 -> TOKEN_BEGIN 
  | 22 -> TOKEN_END 
  | 23 -> TOKEN_LET 
  | 24 -> TOKEN_REC 
  | 25 -> TOKEN_IN 
  | 26 -> TOKEN_MATCH 
  | 27 -> TOKEN_WITH 
  | 28 -> TOKEN_WHEN 
  | 29 -> TOKEN_POLICY 
  | 30 -> TOKEN_TRY 
  | 31 -> TOKEN_FINALLY 
  | 32 -> TOKEN_NULL 
  | 33 -> TOKEN_COLON 
  | 34 -> TOKEN_LBRACKET 
  | 35 -> TOKEN_RBRACKET 
  | 36 -> TOKEN_LBRACE 
  | 37 -> TOKEN_RBRACE 
  | 38 -> TOKEN_LPAREN 
  | 39 -> TOKEN_RPAREN 
  | 40 -> TOKEN_OP_MULTIPLICATION 
  | 41 -> TOKEN_OP_ADDITION 
  | 42 -> TOKEN_OP_COMPARE 
  | 43 -> TOKEN_OP_BOOLEAN 
  | 44 -> TOKEN_BOOLEAN 
  | 45 -> TOKEN_DOUBLE 
  | 46 -> TOKEN_INTEGER 
  | 47 -> TOKEN_STRING 
  | 48 -> TOKEN_IDENT 
  | 51 -> TOKEN_end_of_input
  | 49 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startpolicyText 
    | 1 -> NONTERM_policyText 
    | 2 -> NONTERM_term 
    | 3 -> NONTERM_term 
    | 4 -> NONTERM_term 
    | 5 -> NONTERM_term 
    | 6 -> NONTERM_term 
    | 7 -> NONTERM_term 
    | 8 -> NONTERM_term 
    | 9 -> NONTERM_term 
    | 10 -> NONTERM_term 
    | 11 -> NONTERM_term 
    | 12 -> NONTERM_term 
    | 13 -> NONTERM_infix 
    | 14 -> NONTERM_infix 
    | 15 -> NONTERM_function 
    | 16 -> NONTERM_function 
    | 17 -> NONTERM_application 
    | 18 -> NONTERM_application 
    | 19 -> NONTERM_infixAssignment 
    | 20 -> NONTERM_infixAssignment 
    | 21 -> NONTERM_infixBoolean 
    | 22 -> NONTERM_infixBoolean 
    | 23 -> NONTERM_infixCompare 
    | 24 -> NONTERM_infixCompare 
    | 25 -> NONTERM_infixCompare 
    | 26 -> NONTERM_infixAddition 
    | 27 -> NONTERM_infixAddition 
    | 28 -> NONTERM_infixMultiplication 
    | 29 -> NONTERM_infixMultiplication 
    | 30 -> NONTERM_asPattern 
    | 31 -> NONTERM_annotation 
    | 32 -> NONTERM_if 
    | 33 -> NONTERM_if 
    | 34 -> NONTERM_ifElse 
    | 35 -> NONTERM_ifElse 
    | 36 -> NONTERM_ifElse 
    | 37 -> NONTERM_match 
    | 38 -> NONTERM_match 
    | 39 -> NONTERM_policy 
    | 40 -> NONTERM_policy 
    | 41 -> NONTERM_receive 
    | 42 -> NONTERM_receive 
    | 43 -> NONTERM_send 
    | 44 -> NONTERM_tryWith 
    | 45 -> NONTERM_tryFinally 
    | 46 -> NONTERM_ref 
    | 47 -> NONTERM_dereference 
    | 48 -> NONTERM_rules 
    | 49 -> NONTERM_rules 
    | 50 -> NONTERM_rule 
    | 51 -> NONTERM_rule 
    | 52 -> NONTERM_atomic 
    | 53 -> NONTERM_atomic 
    | 54 -> NONTERM_atomic 
    | 55 -> NONTERM_atomic 
    | 56 -> NONTERM_atomic 
    | 57 -> NONTERM_atomic 
    | 58 -> NONTERM_atomic 
    | 59 -> NONTERM_let 
    | 60 -> NONTERM_let 
    | 61 -> NONTERM_map 
    | 62 -> NONTERM_map 
    | 63 -> NONTERM_keyValuePairs 
    | 64 -> NONTERM_keyValuePairs 
    | 65 -> NONTERM_keyValuePairs 
    | 66 -> NONTERM_keyValuePair 
    | 67 -> NONTERM_keyValuePair 
    | 68 -> NONTERM_list 
    | 69 -> NONTERM_list 
    | 70 -> NONTERM_commaSepTerms 
    | 71 -> NONTERM_commaSepTerms 
    | 72 -> NONTERM_commaSepTerms 
    | 73 -> NONTERM_semiSepTerms 
    | 74 -> NONTERM_semiSepTerms 
    | 75 -> NONTERM_semiSepTerms 
    | 76 -> NONTERM_lookup 
    | 77 -> NONTERM_lookup 
    | 78 -> NONTERM_constant 
    | 79 -> NONTERM_constant 
    | 80 -> NONTERM_constant 
    | 81 -> NONTERM_constant 
    | 82 -> NONTERM_constant 
    | 83 -> NONTERM_constant 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 51 
let _fsyacc_tagOfErrorTerminal = 49

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | SEMI  -> "SEMI" 
  | BAR_SEMI  -> "BAR_SEMI" 
  | COMMA  -> "COMMA" 
  | BAR_COMMA  -> "BAR_COMMA" 
  | RARROW  -> "RARROW" 
  | BAR  -> "BAR" 
  | BANG  -> "BANG" 
  | EQUAL  -> "EQUAL" 
  | COLON_EQUAL  -> "COLON_EQUAL" 
  | SEND  -> "SEND" 
  | RECEIVE  -> "RECEIVE" 
  | ON  -> "ON" 
  | REF  -> "REF" 
  | AS  -> "AS" 
  | DOT  -> "DOT" 
  | FUN  -> "FUN" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | BEGIN  -> "BEGIN" 
  | END  -> "END" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | WHEN  -> "WHEN" 
  | POLICY  -> "POLICY" 
  | TRY  -> "TRY" 
  | FINALLY  -> "FINALLY" 
  | NULL  -> "NULL" 
  | COLON  -> "COLON" 
  | LBRACKET  -> "LBRACKET" 
  | RBRACKET  -> "RBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | OP_MULTIPLICATION _ -> "OP_MULTIPLICATION" 
  | OP_ADDITION _ -> "OP_ADDITION" 
  | OP_COMPARE _ -> "OP_COMPARE" 
  | OP_BOOLEAN _ -> "OP_BOOLEAN" 
  | BOOLEAN _ -> "BOOLEAN" 
  | DOUBLE _ -> "DOUBLE" 
  | INTEGER _ -> "INTEGER" 
  | STRING _ -> "STRING" 
  | IDENT _ -> "IDENT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | BAR_SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | BAR_COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | BANG  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | COLON_EQUAL  -> (null : System.Object) 
  | SEND  -> (null : System.Object) 
  | RECEIVE  -> (null : System.Object) 
  | ON  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | POLICY  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | OP_MULTIPLICATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OP_ADDITION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OP_COMPARE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OP_BOOLEAN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BOOLEAN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOUBLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;34us;65535us;0us;2us;17us;18us;67us;43us;68us;44us;70us;45us;71us;46us;73us;47us;74us;48us;75us;53us;77us;53us;79us;49us;80us;53us;82us;53us;85us;50us;86us;53us;88us;53us;90us;51us;93us;52us;94us;53us;103us;53us;107us;54us;112us;59us;115us;62us;123us;55us;124us;62us;129us;56us;130us;62us;143us;57us;145us;58us;146us;59us;150us;60us;151us;61us;152us;63us;153us;64us;40us;65535us;0us;4us;17us;4us;30us;24us;32us;25us;34us;26us;35us;27us;37us;28us;39us;29us;67us;4us;68us;4us;70us;4us;71us;4us;73us;4us;74us;4us;75us;4us;77us;4us;79us;4us;80us;4us;82us;4us;85us;4us;86us;4us;88us;4us;90us;4us;93us;4us;94us;4us;103us;4us;107us;4us;112us;4us;115us;4us;123us;4us;124us;4us;129us;4us;130us;4us;143us;4us;145us;4us;146us;4us;150us;4us;151us;4us;152us;4us;153us;4us;41us;65535us;0us;16us;17us;16us;19us;20us;30us;16us;32us;16us;34us;16us;35us;16us;37us;16us;39us;16us;67us;16us;68us;16us;70us;16us;71us;16us;73us;16us;74us;16us;75us;16us;77us;16us;79us;16us;80us;16us;82us;16us;85us;16us;86us;16us;88us;16us;90us;16us;93us;16us;94us;16us;103us;16us;107us;16us;112us;16us;115us;16us;123us;16us;124us;16us;129us;16us;130us;16us;143us;16us;145us;16us;146us;16us;150us;16us;151us;16us;152us;16us;153us;16us;41us;65535us;0us;21us;17us;21us;19us;21us;30us;21us;32us;21us;34us;21us;35us;21us;37us;21us;39us;21us;67us;21us;68us;21us;70us;21us;71us;21us;73us;21us;74us;21us;75us;21us;77us;21us;79us;21us;80us;21us;82us;21us;85us;21us;86us;21us;88us;21us;90us;21us;93us;21us;94us;21us;103us;21us;107us;21us;112us;21us;115us;21us;123us;21us;124us;21us;129us;21us;130us;21us;143us;21us;145us;21us;146us;21us;150us;21us;151us;21us;152us;21us;153us;21us;40us;65535us;0us;15us;17us;15us;30us;15us;32us;15us;34us;15us;35us;15us;37us;15us;39us;15us;67us;15us;68us;15us;70us;15us;71us;15us;73us;15us;74us;15us;75us;15us;77us;15us;79us;15us;80us;15us;82us;15us;85us;15us;86us;15us;88us;15us;90us;15us;93us;15us;94us;15us;103us;15us;107us;15us;112us;15us;115us;15us;123us;15us;124us;15us;129us;15us;130us;15us;143us;15us;145us;15us;146us;15us;150us;15us;151us;15us;152us;15us;153us;15us;40us;65535us;0us;31us;17us;31us;30us;31us;32us;31us;34us;31us;35us;31us;37us;31us;39us;31us;67us;31us;68us;31us;70us;31us;71us;31us;73us;31us;74us;31us;75us;31us;77us;31us;79us;31us;80us;31us;82us;31us;85us;31us;86us;31us;88us;31us;90us;31us;93us;31us;94us;31us;103us;31us;107us;31us;112us;31us;115us;31us;123us;31us;124us;31us;129us;31us;130us;31us;143us;31us;145us;31us;146us;31us;150us;31us;151us;31us;152us;31us;153us;31us;40us;65535us;0us;33us;17us;33us;30us;33us;32us;33us;34us;33us;35us;33us;37us;33us;39us;33us;67us;33us;68us;33us;70us;33us;71us;33us;73us;33us;74us;33us;75us;33us;77us;33us;79us;33us;80us;33us;82us;33us;85us;33us;86us;33us;88us;33us;90us;33us;93us;33us;94us;33us;103us;33us;107us;33us;112us;33us;115us;33us;123us;33us;124us;33us;129us;33us;130us;33us;143us;33us;145us;33us;146us;33us;150us;33us;151us;33us;152us;33us;153us;33us;40us;65535us;0us;36us;17us;36us;30us;36us;32us;36us;34us;36us;35us;36us;37us;36us;39us;36us;67us;36us;68us;36us;70us;36us;71us;36us;73us;36us;74us;36us;75us;36us;77us;36us;79us;36us;80us;36us;82us;36us;85us;36us;86us;36us;88us;36us;90us;36us;93us;36us;94us;36us;103us;36us;107us;36us;112us;36us;115us;36us;123us;36us;124us;36us;129us;36us;130us;36us;143us;36us;145us;36us;146us;36us;150us;36us;151us;36us;152us;36us;153us;36us;40us;65535us;0us;38us;17us;38us;30us;38us;32us;38us;34us;38us;35us;38us;37us;38us;39us;38us;67us;38us;68us;38us;70us;38us;71us;38us;73us;38us;74us;38us;75us;38us;77us;38us;79us;38us;80us;38us;82us;38us;85us;38us;86us;38us;88us;38us;90us;38us;93us;38us;94us;38us;103us;38us;107us;38us;112us;38us;115us;38us;123us;38us;124us;38us;129us;38us;130us;38us;143us;38us;145us;38us;146us;38us;150us;38us;151us;38us;152us;38us;153us;38us;40us;65535us;0us;40us;17us;40us;30us;40us;32us;40us;34us;40us;35us;40us;37us;40us;39us;40us;67us;40us;68us;40us;70us;40us;71us;40us;73us;40us;74us;40us;75us;40us;77us;40us;79us;40us;80us;40us;82us;40us;85us;40us;86us;40us;88us;40us;90us;40us;93us;40us;94us;40us;103us;40us;107us;40us;112us;40us;115us;40us;123us;40us;124us;40us;129us;40us;130us;40us;143us;40us;145us;40us;146us;40us;150us;40us;151us;40us;152us;40us;153us;40us;34us;65535us;0us;5us;17us;5us;67us;5us;68us;5us;70us;5us;71us;5us;73us;5us;74us;5us;75us;5us;77us;5us;79us;5us;80us;5us;82us;5us;85us;5us;86us;5us;88us;5us;90us;5us;93us;5us;94us;5us;103us;5us;107us;5us;112us;5us;115us;5us;123us;5us;124us;5us;129us;5us;130us;5us;143us;5us;145us;5us;146us;5us;150us;5us;151us;5us;152us;5us;153us;5us;34us;65535us;0us;6us;17us;6us;67us;6us;68us;6us;70us;6us;71us;6us;73us;6us;74us;6us;75us;6us;77us;6us;79us;6us;80us;6us;82us;6us;85us;6us;86us;6us;88us;6us;90us;6us;93us;6us;94us;6us;103us;6us;107us;6us;112us;6us;115us;6us;123us;6us;124us;6us;129us;6us;130us;6us;143us;6us;145us;6us;146us;6us;150us;6us;151us;6us;152us;6us;153us;6us;2us;65535us;44us;69us;46us;72us;34us;65535us;0us;7us;17us;7us;67us;7us;68us;7us;70us;7us;71us;7us;73us;7us;74us;7us;75us;7us;77us;7us;79us;7us;80us;7us;82us;7us;85us;7us;86us;7us;88us;7us;90us;7us;93us;7us;94us;7us;103us;7us;107us;7us;112us;7us;115us;7us;123us;7us;124us;7us;129us;7us;130us;7us;143us;7us;145us;7us;146us;7us;150us;7us;151us;7us;152us;7us;153us;7us;34us;65535us;0us;8us;17us;8us;67us;8us;68us;8us;70us;8us;71us;8us;73us;8us;74us;8us;75us;8us;77us;8us;79us;8us;80us;8us;82us;8us;85us;8us;86us;8us;88us;8us;90us;8us;93us;8us;94us;8us;103us;8us;107us;8us;112us;8us;115us;8us;123us;8us;124us;8us;129us;8us;130us;8us;143us;8us;145us;8us;146us;8us;150us;8us;151us;8us;152us;8us;153us;8us;34us;65535us;0us;9us;17us;9us;67us;9us;68us;9us;70us;9us;71us;9us;73us;9us;74us;9us;75us;9us;77us;9us;79us;9us;80us;9us;82us;9us;85us;9us;86us;9us;88us;9us;90us;9us;93us;9us;94us;9us;103us;9us;107us;9us;112us;9us;115us;9us;123us;9us;124us;9us;129us;9us;130us;9us;143us;9us;145us;9us;146us;9us;150us;9us;151us;9us;152us;9us;153us;9us;34us;65535us;0us;10us;17us;10us;67us;10us;68us;10us;70us;10us;71us;10us;73us;10us;74us;10us;75us;10us;77us;10us;79us;10us;80us;10us;82us;10us;85us;10us;86us;10us;88us;10us;90us;10us;93us;10us;94us;10us;103us;10us;107us;10us;112us;10us;115us;10us;123us;10us;124us;10us;129us;10us;130us;10us;143us;10us;145us;10us;146us;10us;150us;10us;151us;10us;152us;10us;153us;10us;34us;65535us;0us;11us;17us;11us;67us;11us;68us;11us;70us;11us;71us;11us;73us;11us;74us;11us;75us;11us;77us;11us;79us;11us;80us;11us;82us;11us;85us;11us;86us;11us;88us;11us;90us;11us;93us;11us;94us;11us;103us;11us;107us;11us;112us;11us;115us;11us;123us;11us;124us;11us;129us;11us;130us;11us;143us;11us;145us;11us;146us;11us;150us;11us;151us;11us;152us;11us;153us;11us;34us;65535us;0us;12us;17us;12us;67us;12us;68us;12us;70us;12us;71us;12us;73us;12us;74us;12us;75us;12us;77us;12us;79us;12us;80us;12us;82us;12us;85us;12us;86us;12us;88us;12us;90us;12us;93us;12us;94us;12us;103us;12us;107us;12us;112us;12us;115us;12us;123us;12us;124us;12us;129us;12us;130us;12us;143us;12us;145us;12us;146us;12us;150us;12us;151us;12us;152us;12us;153us;12us;34us;65535us;0us;13us;17us;13us;67us;13us;68us;13us;70us;13us;71us;13us;73us;13us;74us;13us;75us;13us;77us;13us;79us;13us;80us;13us;82us;13us;85us;13us;86us;13us;88us;13us;90us;13us;93us;13us;94us;13us;103us;13us;107us;13us;112us;13us;115us;13us;123us;13us;124us;13us;129us;13us;130us;13us;143us;13us;145us;13us;146us;13us;150us;13us;151us;13us;152us;13us;153us;13us;34us;65535us;0us;14us;17us;14us;67us;14us;68us;14us;70us;14us;71us;14us;73us;14us;74us;14us;75us;14us;77us;14us;79us;14us;80us;14us;82us;14us;85us;14us;86us;14us;88us;14us;90us;14us;93us;14us;94us;14us;103us;14us;107us;14us;112us;14us;115us;14us;123us;14us;124us;14us;129us;14us;130us;14us;143us;14us;145us;14us;146us;14us;150us;14us;151us;14us;152us;14us;153us;14us;7us;65535us;75us;76us;77us;78us;80us;81us;82us;83us;86us;87us;88us;89us;94us;95us;8us;65535us;75us;102us;77us;102us;80us;102us;82us;102us;86us;102us;88us;102us;94us;102us;103us;104us;50us;65535us;0us;22us;17us;22us;19us;22us;21us;23us;30us;22us;32us;22us;34us;22us;35us;22us;37us;22us;39us;22us;67us;22us;68us;22us;70us;22us;71us;22us;73us;22us;74us;22us;75us;22us;77us;22us;79us;22us;80us;22us;82us;22us;85us;22us;86us;22us;88us;22us;90us;22us;91us;92us;93us;22us;94us;22us;96us;97us;98us;99us;100us;101us;103us;22us;105us;106us;107us;22us;108us;109us;112us;22us;115us;22us;121us;122us;123us;22us;124us;22us;127us;128us;129us;22us;130us;22us;143us;22us;145us;22us;146us;22us;150us;22us;151us;22us;152us;22us;153us;22us;50us;65535us;0us;118us;17us;118us;19us;118us;21us;118us;30us;118us;32us;118us;34us;118us;35us;118us;37us;118us;39us;118us;67us;118us;68us;118us;70us;118us;71us;118us;73us;118us;74us;118us;75us;118us;77us;118us;79us;118us;80us;118us;82us;118us;85us;118us;86us;118us;88us;118us;90us;118us;91us;118us;93us;118us;94us;118us;96us;118us;98us;118us;100us;118us;103us;118us;105us;118us;107us;118us;108us;118us;112us;118us;115us;118us;121us;118us;123us;118us;124us;118us;127us;118us;129us;118us;130us;118us;143us;118us;145us;118us;146us;118us;150us;118us;151us;118us;152us;118us;153us;118us;50us;65535us;0us;119us;17us;119us;19us;119us;21us;119us;30us;119us;32us;119us;34us;119us;35us;119us;37us;119us;39us;119us;67us;119us;68us;119us;70us;119us;71us;119us;73us;119us;74us;119us;75us;119us;77us;119us;79us;119us;80us;119us;82us;119us;85us;119us;86us;119us;88us;119us;90us;119us;91us;119us;93us;119us;94us;119us;96us;119us;98us;119us;100us;119us;103us;119us;105us;119us;107us;119us;108us;119us;112us;119us;115us;119us;121us;119us;123us;119us;124us;119us;127us;119us;129us;119us;130us;119us;143us;119us;145us;119us;146us;119us;150us;119us;151us;119us;152us;119us;153us;119us;1us;65535us;133us;135us;3us;65535us;133us;137us;138us;139us;140us;141us;50us;65535us;0us;120us;17us;120us;19us;120us;21us;120us;30us;120us;32us;120us;34us;120us;35us;120us;37us;120us;39us;120us;67us;120us;68us;120us;70us;120us;71us;120us;73us;120us;74us;120us;75us;120us;77us;120us;79us;120us;80us;120us;82us;120us;85us;120us;86us;120us;88us;120us;90us;120us;91us;120us;93us;120us;94us;120us;96us;120us;98us;120us;100us;120us;103us;120us;105us;120us;107us;120us;108us;120us;112us;120us;115us;120us;121us;120us;123us;120us;124us;120us;127us;120us;129us;120us;130us;120us;143us;120us;145us;120us;146us;120us;150us;120us;151us;120us;152us;120us;153us;120us;2us;65535us;112us;113us;146us;148us;3us;65535us;115us;116us;124us;125us;130us;131us;50us;65535us;0us;111us;17us;111us;19us;111us;21us;111us;30us;111us;32us;111us;34us;111us;35us;111us;37us;111us;39us;111us;67us;111us;68us;111us;70us;111us;71us;111us;73us;111us;74us;111us;75us;111us;77us;111us;79us;111us;80us;111us;82us;111us;85us;111us;86us;111us;88us;111us;90us;111us;91us;111us;93us;111us;94us;111us;96us;111us;98us;111us;100us;111us;103us;111us;105us;111us;107us;111us;108us;111us;112us;111us;115us;111us;121us;111us;123us;111us;124us;111us;127us;111us;129us;111us;130us;111us;143us;111us;145us;111us;146us;111us;150us;111us;151us;111us;152us;111us;153us;111us;50us;65535us;0us;110us;17us;110us;19us;110us;21us;110us;30us;110us;32us;110us;34us;110us;35us;110us;37us;110us;39us;110us;67us;110us;68us;110us;70us;110us;71us;110us;73us;110us;74us;110us;75us;110us;77us;110us;79us;110us;80us;110us;82us;110us;85us;110us;86us;110us;88us;110us;90us;110us;91us;110us;93us;110us;94us;110us;96us;110us;98us;110us;100us;110us;103us;110us;105us;110us;107us;110us;108us;110us;112us;110us;115us;110us;121us;110us;123us;110us;124us;110us;127us;110us;129us;110us;130us;110us;143us;110us;145us;110us;146us;110us;150us;110us;151us;110us;152us;110us;153us;110us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;38us;79us;121us;163us;204us;245us;286us;327us;368us;409us;444us;479us;482us;517us;552us;587us;622us;657us;692us;727us;762us;770us;779us;830us;881us;932us;934us;938us;989us;992us;996us;1047us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;2us;1us;31us;1us;1us;8us;2us;19us;21us;23us;24us;26us;28us;30us;1us;3us;1us;4us;1us;5us;1us;6us;1us;7us;1us;8us;1us;9us;1us;10us;1us;11us;1us;12us;1us;13us;1us;14us;1us;15us;2us;15us;31us;1us;15us;1us;15us;2us;16us;18us;2us;17us;77us;2us;18us;77us;8us;19us;19us;21us;23us;24us;26us;28us;30us;8us;19us;21us;21us;23us;24us;26us;28us;30us;8us;19us;21us;23us;23us;24us;26us;28us;30us;8us;19us;21us;23us;24us;24us;26us;28us;30us;8us;19us;21us;23us;24us;26us;26us;28us;30us;8us;19us;21us;23us;24us;26us;28us;28us;30us;1us;19us;1us;20us;1us;21us;1us;22us;1us;23us;1us;24us;1us;25us;1us;26us;1us;27us;1us;28us;1us;29us;1us;30us;1us;30us;3us;31us;32us;33us;3us;31us;32us;33us;3us;31us;34us;35us;3us;31us;34us;35us;2us;31us;36us;3us;31us;37us;38us;3us;31us;39us;40us;3us;31us;41us;42us;2us;31us;43us;3us;31us;44us;45us;3us;31us;50us;51us;2us;31us;51us;2us;31us;59us;2us;31us;60us;2us;31us;66us;2us;31us;67us;2us;31us;70us;2us;31us;71us;2us;31us;72us;2us;31us;73us;2us;31us;74us;2us;31us;75us;1us;31us;1us;31us;2us;32us;33us;2us;32us;33us;1us;33us;2us;34us;35us;2us;34us;35us;1us;35us;1us;36us;2us;37us;38us;2us;37us;38us;2us;37us;49us;1us;38us;2us;38us;49us;2us;39us;40us;2us;39us;40us;2us;39us;49us;1us;40us;2us;40us;49us;2us;41us;42us;2us;41us;42us;2us;41us;42us;2us;41us;49us;1us;42us;2us;42us;49us;1us;43us;1us;43us;2us;43us;77us;2us;44us;45us;1us;44us;2us;44us;49us;1us;45us;2us;45us;77us;1us;46us;2us;46us;77us;1us;47us;2us;47us;77us;1us;48us;1us;49us;1us;49us;1us;50us;2us;50us;77us;1us;51us;1us;51us;2us;51us;77us;1us;52us;1us;53us;2us;54us;83us;3us;54us;71us;72us;1us;54us;1us;55us;3us;55us;74us;75us;1us;55us;1us;56us;1us;57us;1us;58us;2us;59us;60us;2us;59us;77us;1us;59us;1us;59us;3us;59us;74us;75us;1us;59us;1us;60us;2us;60us;77us;1us;60us;1us;60us;3us;60us;74us;75us;1us;60us;2us;61us;62us;1us;61us;3us;62us;64us;65us;1us;62us;1us;63us;1us;64us;1us;64us;1us;65us;1us;65us;1us;66us;1us;66us;1us;67us;1us;67us;2us;68us;69us;1us;68us;3us;69us;71us;72us;1us;69us;1us;71us;1us;72us;1us;74us;1us;75us;1us;76us;1us;77us;1us;77us;1us;78us;1us;79us;1us;80us;1us;81us;1us;82us;1us;83us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;7us;9us;18us;20us;22us;24us;26us;28us;30us;32us;34us;36us;38us;40us;42us;44us;47us;49us;51us;54us;57us;60us;69us;78us;87us;96us;105us;114us;116us;118us;120us;122us;124us;126us;128us;130us;132us;134us;136us;138us;140us;144us;148us;152us;156us;159us;163us;167us;171us;174us;178us;182us;185us;188us;191us;194us;197us;200us;203us;206us;209us;212us;215us;217us;219us;222us;225us;227us;230us;233us;235us;237us;240us;243us;246us;248us;251us;254us;257us;260us;262us;265us;268us;271us;274us;277us;279us;282us;284us;286us;289us;292us;294us;297us;299us;302us;304us;307us;309us;312us;314us;316us;318us;320us;323us;325us;327us;330us;332us;334us;337us;341us;343us;345us;349us;351us;353us;355us;357us;360us;363us;365us;367us;371us;373us;375us;378us;380us;382us;386us;388us;391us;393us;397us;399us;401us;403us;405us;407us;409us;411us;413us;415us;417us;420us;422us;426us;428us;430us;432us;434us;436us;438us;440us;442us;444us;446us;448us;450us;452us;|]
let _fsyacc_action_rows = 163
let _fsyacc_actionTableElements = [|20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;49152us;2us;32768us;0us;3us;33us;65us;0us;16385us;7us;16386us;8us;34us;9us;30us;14us;41us;40us;39us;41us;37us;42us;35us;43us;32us;0us;16387us;0us;16388us;0us;16389us;0us;16390us;0us;16391us;0us;16392us;0us;16393us;0us;16394us;0us;16395us;0us;16396us;0us;16397us;0us;16398us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;2us;32768us;5us;19us;33us;65us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16399us;11us;16400us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16401us;15us;155us;1us;16402us;15us;155us;5us;16403us;8us;34us;40us;39us;41us;37us;42us;35us;43us;32us;4us;16405us;8us;34us;40us;39us;41us;37us;42us;35us;2us;16407us;40us;39us;41us;37us;2us;16408us;40us;39us;41us;37us;1us;16410us;40us;39us;0us;16412us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16404us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16406us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16409us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16411us;12us;32768us;16us;17us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16413us;1us;32768us;48us;42us;0us;16414us;2us;32768us;18us;68us;33us;65us;2us;16416us;19us;73us;20us;70us;2us;32768us;18us;71us;33us;65us;2us;16418us;19us;73us;20us;70us;0us;16420us;2us;32768us;27us;75us;33us;65us;2us;32768us;27us;80us;33us;65us;2us;32768us;27us;86us;33us;65us;2us;32768us;12us;91us;33us;65us;3us;32768us;27us;94us;31us;96us;33us;65us;3us;32768us;5us;105us;28us;107us;33us;65us;2us;32768us;5us;108us;33us;65us;2us;32768us;25us;124us;33us;65us;2us;32768us;25us;130us;33us;65us;1us;16450us;33us;65us;1us;16451us;33us;65us;1us;16454us;33us;65us;1us;16455us;33us;65us;1us;16456us;33us;65us;1us;16457us;33us;65us;1us;16458us;33us;65us;1us;16459us;33us;65us;1us;32768us;48us;66us;0us;16415us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16417us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16419us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;21us;32768us;6us;77us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16421us;6us;103us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16422us;6us;103us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;21us;32768us;6us;82us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16423us;6us;103us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16424us;6us;103us;1us;32768us;12us;85us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;21us;32768us;6us;88us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16425us;6us;103us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16426us;6us;103us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16427us;15us;155us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16428us;6us;103us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16429us;15us;155us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16430us;15us;155us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16431us;15us;155us;0us;16432us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16433us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16434us;15us;155us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;16435us;15us;155us;0us;16436us;0us;16437us;21us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;39us;162us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;3us;32768us;3us;150us;4us;151us;39us;114us;0us;16438us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;3us;32768us;1us;152us;2us;153us;22us;117us;0us;16439us;0us;16440us;0us;16441us;0us;16442us;12us;32768us;21us;115us;23us;121us;24us;127us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;2us;32768us;8us;123us;15us;155us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;3us;32768us;1us;152us;2us;153us;22us;126us;0us;16443us;11us;32768us;21us;115us;23us;121us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;2us;32768us;8us;129us;15us;155us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;3us;32768us;1us;152us;2us;153us;22us;132us;0us;16444us;3us;32768us;37us;134us;47us;142us;48us;144us;0us;16445us;3us;32768us;3us;138us;4us;140us;37us;136us;0us;16446us;0us;16447us;2us;32768us;47us;142us;48us;144us;0us;16448us;2us;32768us;47us;142us;48us;144us;0us;16449us;1us;32768us;33us;143us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;1us;32768us;33us;145us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;21us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;35us;147us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16452us;3us;32768us;3us;150us;4us;151us;35us;149us;0us;16453us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;20us;32768us;7us;100us;10us;90us;11us;84us;13us;98us;16us;17us;17us;67us;21us;115us;23us;121us;26us;74us;29us;79us;30us;93us;32us;161us;34us;146us;36us;133us;38us;112us;44us;160us;45us;159us;46us;158us;47us;157us;48us;154us;0us;16460us;1us;32768us;48us;156us;0us;16461us;0us;16462us;0us;16463us;0us;16464us;0us;16465us;0us;16466us;0us;16467us;|]
let _fsyacc_actionTableRowOffsets = [|0us;21us;22us;25us;26us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;67us;70us;83us;84us;96us;98us;100us;106us;111us;114us;117us;119us;120us;133us;134us;147us;148us;161us;174us;175us;188us;189us;202us;203us;205us;206us;209us;212us;215us;218us;219us;222us;225us;228us;231us;235us;239us;242us;245us;248us;250us;252us;254us;256us;258us;260us;262us;264us;266us;267us;288us;309us;310us;331us;352us;353us;374us;395us;417us;419us;440us;442us;463us;485us;487us;508us;510us;512us;533us;555us;557us;578us;580us;601us;613us;615us;636us;657us;659us;671us;673us;685us;687us;699us;701us;702us;723us;724us;736us;738us;759us;771us;773us;774us;775us;797us;801us;802us;823us;827us;828us;829us;830us;831us;844us;847us;868us;889us;893us;894us;906us;909us;930us;951us;955us;956us;960us;961us;965us;966us;967us;970us;971us;974us;975us;977us;998us;1000us;1021us;1043us;1044us;1048us;1049us;1070us;1091us;1112us;1133us;1134us;1136us;1137us;1138us;1139us;1140us;1141us;1142us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;4us;1us;1us;2us;3us;1us;3us;1us;3us;3us;1us;3us;1us;3us;1us;3us;3us;4us;5us;4us;5us;2us;4us;5us;4us;5us;5us;6us;4us;4us;4us;2us;2us;1us;3us;3us;5us;1us;1us;3us;3us;1us;1us;1us;7us;8us;2us;3us;1us;3us;3us;3us;3us;2us;3us;1us;3us;3us;1us;3us;3us;1us;3us;1us;1us;1us;1us;1us;2us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;3us;3us;4us;4us;5us;5us;6us;6us;7us;7us;8us;8us;8us;9us;9us;10us;10us;11us;12us;13us;13us;14us;14us;14us;15us;15us;16us;16us;17us;17us;18us;19us;20us;21us;22us;23us;23us;24us;24us;25us;25us;25us;25us;25us;25us;25us;26us;26us;27us;27us;28us;28us;28us;29us;29us;30us;30us;31us;31us;31us;32us;32us;32us;33us;33us;34us;34us;34us;34us;34us;34us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;16388us;16389us;16390us;16391us;16392us;16393us;16394us;16395us;16396us;16397us;16398us;65535us;65535us;65535us;16399us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16404us;65535us;16406us;65535us;65535us;16409us;65535us;16411us;65535us;16413us;65535us;16414us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16415us;65535us;65535us;16417us;65535us;65535us;16419us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16432us;65535us;16433us;65535us;65535us;65535us;65535us;65535us;16436us;16437us;65535us;65535us;16438us;65535us;65535us;16439us;16440us;16441us;16442us;65535us;65535us;65535us;65535us;65535us;16443us;65535us;65535us;65535us;65535us;65535us;16444us;65535us;16445us;65535us;16446us;16447us;65535us;16448us;65535us;16449us;65535us;65535us;65535us;65535us;65535us;16452us;65535us;16453us;65535us;65535us;65535us;65535us;16460us;65535us;16461us;16462us;16463us;16464us;16465us;16466us;16467us;|]
let _fsyacc_reductions = lazy [|
# 475 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Value in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startpolicyText));
# 484 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Grammar.fsy"
                                                                   _1 
                   )
# 42 "Grammar.fsy"
                 : Value));
# 495 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Grammar.fsy"
                                                                   _1 
                   )
# 45 "Grammar.fsy"
                 : 'gentype_term));
# 506 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_annotation in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Grammar.fsy"
                                                                   _1 
                   )
# 46 "Grammar.fsy"
                 : 'gentype_term));
# 517 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Grammar.fsy"
                                                                   _1 
                   )
# 47 "Grammar.fsy"
                 : 'gentype_term));
# 528 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Grammar.fsy"
                                                                   _1 
                   )
# 48 "Grammar.fsy"
                 : 'gentype_term));
# 539 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_policy in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Grammar.fsy"
                                                                   _1 
                   )
# 49 "Grammar.fsy"
                 : 'gentype_term));
# 550 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_receive in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Grammar.fsy"
                                                                   _1 
                   )
# 50 "Grammar.fsy"
                 : 'gentype_term));
# 561 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_send in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Grammar.fsy"
                                                                   _1 
                   )
# 51 "Grammar.fsy"
                 : 'gentype_term));
# 572 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tryWith in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Grammar.fsy"
                                                                   _1 
                   )
# 52 "Grammar.fsy"
                 : 'gentype_term));
# 583 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tryFinally in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Grammar.fsy"
                                                                   _1 
                   )
# 53 "Grammar.fsy"
                 : 'gentype_term));
# 594 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ref in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Grammar.fsy"
                                                                   _1 
                   )
# 54 "Grammar.fsy"
                 : 'gentype_term));
# 605 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dereference in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Grammar.fsy"
                                                                   _1 
                   )
# 55 "Grammar.fsy"
                 : 'gentype_term));
# 616 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infixAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Grammar.fsy"
                                                                   _1 
                   )
# 58 "Grammar.fsy"
                 : 'gentype_infix));
# 627 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Grammar.fsy"
                                                                   _1 
                   )
# 59 "Grammar.fsy"
                 : 'gentype_infix));
# 638 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Grammar.fsy"
                                                                   termFunction parseState 
                   )
# 62 "Grammar.fsy"
                 : 'gentype_function));
# 650 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_application in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Grammar.fsy"
                                                                   _1 
                   )
# 63 "Grammar.fsy"
                 : 'gentype_function));
# 661 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Grammar.fsy"
                                                                   _1 
                   )
# 66 "Grammar.fsy"
                 : 'gentype_application));
# 672 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_application in
            let _2 = parseState.GetInput(2) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Grammar.fsy"
                                                                   termApplication parseState 
                   )
# 67 "Grammar.fsy"
                 : 'gentype_application));
# 684 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Grammar.fsy"
                                                                   termAssignment parseState 
                   )
# 70 "Grammar.fsy"
                 : 'gentype_infixAssignment));
# 696 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infixBoolean in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Grammar.fsy"
                                                                   _1 
                   )
# 71 "Grammar.fsy"
                 : 'gentype_infixAssignment));
# 707 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Grammar.fsy"
                                                                   termInfix parseState 
                   )
# 74 "Grammar.fsy"
                 : 'gentype_infixBoolean));
# 720 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infixCompare in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Grammar.fsy"
                                                                   _1 
                   )
# 75 "Grammar.fsy"
                 : 'gentype_infixBoolean));
# 731 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Grammar.fsy"
                                                                   termEqual parseState 
                   )
# 78 "Grammar.fsy"
                 : 'gentype_infixCompare));
# 743 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Grammar.fsy"
                                                                   termInfix parseState 
                   )
# 79 "Grammar.fsy"
                 : 'gentype_infixCompare));
# 756 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infixAddition in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Grammar.fsy"
                                                                   _1 
                   )
# 80 "Grammar.fsy"
                 : 'gentype_infixCompare));
# 767 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Grammar.fsy"
                                                                   termInfix parseState 
                   )
# 83 "Grammar.fsy"
                 : 'gentype_infixAddition));
# 780 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infixMultiplication in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Grammar.fsy"
                                                                   _1 
                   )
# 84 "Grammar.fsy"
                 : 'gentype_infixAddition));
# 791 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_infix in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Grammar.fsy"
                                                                   termInfix parseState 
                   )
# 87 "Grammar.fsy"
                 : 'gentype_infixMultiplication));
# 804 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_asPattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Grammar.fsy"
                                                                   _1 
                   )
# 88 "Grammar.fsy"
                 : 'gentype_infixMultiplication));
# 815 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_infix in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Grammar.fsy"
                                                                   termAsPattern parseState 
                   )
# 91 "Grammar.fsy"
                 : 'gentype_asPattern));
# 827 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Grammar.fsy"
                                                                   termAnnotation parseState 
                   )
# 94 "Grammar.fsy"
                 : 'gentype_annotation));
# 839 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "Grammar.fsy"
                                                                   termIf 1 parseState 
                   )
# 97 "Grammar.fsy"
                 : 'gentype_if));
# 851 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_ifElse in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Grammar.fsy"
                                                                   termIf 2 parseState 
                   )
# 98 "Grammar.fsy"
                 : 'gentype_if));
# 864 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Grammar.fsy"
                                                                   termIf 3 parseState 
                   )
# 101 "Grammar.fsy"
                 : 'gentype_ifElse));
# 876 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_ifElse in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Grammar.fsy"
                                                                   termIf 4 parseState 
                   )
# 102 "Grammar.fsy"
                 : 'gentype_ifElse));
# 889 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Grammar.fsy"
                                                                   _2 
                   )
# 103 "Grammar.fsy"
                 : 'gentype_ifElse));
# 900 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Grammar.fsy"
                                                                   termMatch 1 parseState 
                   )
# 106 "Grammar.fsy"
                 : 'gentype_match));
# 912 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Grammar.fsy"
                                                                   termMatch 2 parseState 
                   )
# 107 "Grammar.fsy"
                 : 'gentype_match));
# 924 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Grammar.fsy"
                                                                   termPolicy 1 parseState 
                   )
# 110 "Grammar.fsy"
                 : 'gentype_policy));
# 936 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Grammar.fsy"
                                                                   termPolicy 2 parseState 
                   )
# 111 "Grammar.fsy"
                 : 'gentype_policy));
# 948 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Grammar.fsy"
                                                                   termReceive 1 parseState 
                   )
# 114 "Grammar.fsy"
                 : 'gentype_receive));
# 960 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            let _6 = parseState.GetInput(6) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Grammar.fsy"
                                                                   termReceive 2 parseState 
                   )
# 115 "Grammar.fsy"
                 : 'gentype_receive));
# 972 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Grammar.fsy"
                                                                   termSend parseState 
                   )
# 118 "Grammar.fsy"
                 : 'gentype_send));
# 984 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_rules in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Grammar.fsy"
                                                                   termTryWith parseState 
                   )
# 121 "Grammar.fsy"
                 : 'gentype_tryWith));
# 996 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            let _4 = parseState.GetInput(4) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Grammar.fsy"
                                                                   termTryFinally parseState 
                   )
# 124 "Grammar.fsy"
                 : 'gentype_tryFinally));
# 1008 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Grammar.fsy"
                                                                   termRef parseState 
                   )
# 127 "Grammar.fsy"
                 : 'gentype_ref));
# 1019 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Grammar.fsy"
                                                                   termDereference parseState 
                   )
# 130 "Grammar.fsy"
                 : 'gentype_dereference));
# 1030 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Grammar.fsy"
                                                                   [ _1 ] 
                   )
# 133 "Grammar.fsy"
                 : 'gentype_rules));
# 1041 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rules in
            let _3 = parseState.GetInput(3) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Grammar.fsy"
                                                                   _3 :: _1 
                   )
# 134 "Grammar.fsy"
                 : 'gentype_rules));
# 1053 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            let _3 = parseState.GetInput(3) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Grammar.fsy"
                                                                   termRule 1 parseState 
                   )
# 137 "Grammar.fsy"
                 : 'gentype_rule));
# 1065 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            let _5 = parseState.GetInput(5) :?> 'gentype_atomic in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Grammar.fsy"
                                                                   termRule 2 parseState 
                   )
# 138 "Grammar.fsy"
                 : 'gentype_rule));
# 1078 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Grammar.fsy"
                                                                   _1 
                   )
# 141 "Grammar.fsy"
                 : 'gentype_atomic));
# 1089 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lookup in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Grammar.fsy"
                                                                   _1 
                   )
# 142 "Grammar.fsy"
                 : 'gentype_atomic));
# 1100 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_commaSepTerms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "Grammar.fsy"
                                                                   termTuple parseState 
                   )
# 143 "Grammar.fsy"
                 : 'gentype_atomic));
# 1111 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_semiSepTerms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Grammar.fsy"
                                                                   termSequence parseState 
                   )
# 144 "Grammar.fsy"
                 : 'gentype_atomic));
# 1122 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_let in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Grammar.fsy"
                                                                   _1 
                   )
# 145 "Grammar.fsy"
                 : 'gentype_atomic));
# 1133 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_map in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Grammar.fsy"
                                                                   _1 
                   )
# 146 "Grammar.fsy"
                 : 'gentype_atomic));
# 1144 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "Grammar.fsy"
                                                                   _1 
                   )
# 147 "Grammar.fsy"
                 : 'gentype_atomic));
# 1155 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_atomic in
            let _4 = parseState.GetInput(4) :?> 'gentype_term in
            let _6 = parseState.GetInput(6) :?> 'gentype_semiSepTerms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Grammar.fsy"
                                                                   termLet 1 parseState 
                   )
# 151 "Grammar.fsy"
                 : 'gentype_let));
# 1168 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_atomic in
            let _5 = parseState.GetInput(5) :?> 'gentype_term in
            let _7 = parseState.GetInput(7) :?> 'gentype_semiSepTerms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "Grammar.fsy"
                                                                   termLet 2 parseState 
                   )
# 153 "Grammar.fsy"
                 : 'gentype_let));
# 1181 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Grammar.fsy"
                                                                   termMap 1 parseState 
                   )
# 156 "Grammar.fsy"
                 : 'gentype_map));
# 1191 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_keyValuePairs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Grammar.fsy"
                                                                   termMap 2 parseState 
                   )
# 157 "Grammar.fsy"
                 : 'gentype_map));
# 1202 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyValuePair in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Grammar.fsy"
                                                                   [ _1 ] 
                   )
# 160 "Grammar.fsy"
                 : 'gentype_keyValuePairs));
# 1213 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyValuePairs in
            let _3 = parseState.GetInput(3) :?> 'gentype_keyValuePair in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Grammar.fsy"
                                                                   _3 :: _1 
                   )
# 161 "Grammar.fsy"
                 : 'gentype_keyValuePairs));
# 1225 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyValuePairs in
            let _3 = parseState.GetInput(3) :?> 'gentype_keyValuePair in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "Grammar.fsy"
                                                                   ( keyValueParallel 3 parseState ) :: _1 
                   )
# 162 "Grammar.fsy"
                 : 'gentype_keyValuePairs));
# 1237 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Grammar.fsy"
                                                                   (_1, _3) 
                   )
# 165 "Grammar.fsy"
                 : 'gentype_keyValuePair));
# 1249 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Grammar.fsy"
                                                                   (_1, _3) 
                   )
# 166 "Grammar.fsy"
                 : 'gentype_keyValuePair));
# 1261 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Grammar.fsy"
                                                                   termList 1 parseState 
                   )
# 169 "Grammar.fsy"
                 : 'gentype_list));
# 1271 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_commaSepTerms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Grammar.fsy"
                                                                   termList 2 parseState 
                   )
# 170 "Grammar.fsy"
                 : 'gentype_list));
# 1282 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "Grammar.fsy"
                                                                   [ _1 ] 
                   )
# 173 "Grammar.fsy"
                 : 'gentype_commaSepTerms));
# 1293 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_commaSepTerms in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Grammar.fsy"
                                                                   _3 :: _1 
                   )
# 174 "Grammar.fsy"
                 : 'gentype_commaSepTerms));
# 1305 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_commaSepTerms in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Grammar.fsy"
                                                                   ( termParallel 3 parseState ) :: _1 
                   )
# 175 "Grammar.fsy"
                 : 'gentype_commaSepTerms));
# 1317 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "Grammar.fsy"
                                                                   [ _1 ] 
                   )
# 178 "Grammar.fsy"
                 : 'gentype_semiSepTerms));
# 1328 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_semiSepTerms in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "Grammar.fsy"
                                                                   _3 :: _1 
                   )
# 179 "Grammar.fsy"
                 : 'gentype_semiSepTerms));
# 1340 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_semiSepTerms in
            let _3 = parseState.GetInput(3) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "Grammar.fsy"
                                                                   ( termParallel 3 parseState ) :: _1 
                   )
# 180 "Grammar.fsy"
                 : 'gentype_semiSepTerms));
# 1352 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "Grammar.fsy"
                                                                   termLookup parseState 
                   )
# 183 "Grammar.fsy"
                 : 'gentype_lookup));
# 1363 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atomic in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "Grammar.fsy"
                                                                   termLookupMember parseState 
                   )
# 184 "Grammar.fsy"
                 : 'gentype_lookup));
# 1375 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.String(_1)) 
                   )
# 187 "Grammar.fsy"
                 : 'gentype_constant));
# 1386 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int64 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.Integer(_1)) 
                   )
# 188 "Grammar.fsy"
                 : 'gentype_constant));
# 1397 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.Double(_1)) 
                   )
# 189 "Grammar.fsy"
                 : 'gentype_constant));
# 1408 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.Boolean(_1)) 
                   )
# 190 "Grammar.fsy"
                 : 'gentype_constant));
# 1419 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.Null) 
                   )
# 191 "Grammar.fsy"
                 : 'gentype_constant));
# 1429 "Grammar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "Grammar.fsy"
                                                                   valueOrHashed parseState (Value.Null) 
                   )
# 192 "Grammar.fsy"
                 : 'gentype_constant));
|]
# 1440 "Grammar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 52;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let policyText lexer lexbuf : Value =
    engine lexer lexbuf 0 :?> _
