------------------------
states = 
state 0:  items:    _startpolicyText ->  . policyText
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto policyText: 1
    goto term: 2
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 1:  items:    _startpolicyText -> policyText . 
  actions:    action 'EOF' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'BAR_SEMI' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'BAR_COMMA' (noprec):   accept
    action 'RARROW' (noprec):   accept
    action 'EQUAL' (noprec):   accept
    action 'BAR' (noprec):   accept
    action 'COLON_EQUAL' (noprec):   accept
    action 'BANG' (noprec):   accept
    action 'SEND' (noprec):   accept
    action 'RECEIVE' (noprec):   accept
    action 'ON' (noprec):   accept
    action 'REF' (noprec):   accept
    action 'FUN' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'THEN' (noprec):   accept
    action 'ELSE' (noprec):   accept
    action 'ELIF' (noprec):   accept
    action 'BEGIN' (noprec):   accept
    action 'END' (noprec):   accept
    action 'LET' (noprec):   accept
    action 'REC' (noprec):   accept
    action 'IN' (noprec):   accept
    action 'MATCH' (noprec):   accept
    action 'WITH' (noprec):   accept
    action 'WHEN' (noprec):   accept
    action 'POLICY' (noprec):   accept
    action 'TRY' (noprec):   accept
    action 'FINALLY' (noprec):   accept
    action 'NULL' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'LBRACE' (noprec):   accept
    action 'RBRACE' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'BOOLEAN' (noprec):   accept
    action 'DOUBLE' (noprec):   accept
    action 'INTEGER' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'IDENT' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 2:  items:    policyText -> term . 'EOF'
  actions:    action 'EOF' (noprec):   shift 3
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 3:  items:    policyText -> term 'EOF' . 
  actions:    action 'EOF' (noprec):   reduce policyText --> term 'EOF'
    action 'SEMI' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR_SEMI' (noprec):   reduce policyText --> term 'EOF'
    action 'COMMA' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR_COMMA' (noprec):   reduce policyText --> term 'EOF'
    action 'RARROW' (noprec):   reduce policyText --> term 'EOF'
    action 'EQUAL' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR' (noprec):   reduce policyText --> term 'EOF'
    action 'COLON_EQUAL' (noprec):   reduce policyText --> term 'EOF'
    action 'BANG' (noprec):   reduce policyText --> term 'EOF'
    action 'SEND' (noprec):   reduce policyText --> term 'EOF'
    action 'RECEIVE' (noprec):   reduce policyText --> term 'EOF'
    action 'ON' (noprec):   reduce policyText --> term 'EOF'
    action 'REF' (noprec):   reduce policyText --> term 'EOF'
    action 'FUN' (noprec):   reduce policyText --> term 'EOF'
    action 'IF' (noprec):   reduce policyText --> term 'EOF'
    action 'THEN' (noprec):   reduce policyText --> term 'EOF'
    action 'ELSE' (noprec):   reduce policyText --> term 'EOF'
    action 'ELIF' (noprec):   reduce policyText --> term 'EOF'
    action 'BEGIN' (noprec):   reduce policyText --> term 'EOF'
    action 'END' (noprec):   reduce policyText --> term 'EOF'
    action 'LET' (noprec):   reduce policyText --> term 'EOF'
    action 'REC' (noprec):   reduce policyText --> term 'EOF'
    action 'IN' (noprec):   reduce policyText --> term 'EOF'
    action 'MATCH' (noprec):   reduce policyText --> term 'EOF'
    action 'WITH' (noprec):   reduce policyText --> term 'EOF'
    action 'WHEN' (noprec):   reduce policyText --> term 'EOF'
    action 'POLICY' (noprec):   reduce policyText --> term 'EOF'
    action 'TRY' (noprec):   reduce policyText --> term 'EOF'
    action 'FINALLY' (noprec):   reduce policyText --> term 'EOF'
    action 'NULL' (noprec):   reduce policyText --> term 'EOF'
    action 'COLON' (noprec):   reduce policyText --> term 'EOF'
    action 'LBRACKET' (noprec):   reduce policyText --> term 'EOF'
    action 'RBRACKET' (noprec):   reduce policyText --> term 'EOF'
    action 'LBRACE' (noprec):   reduce policyText --> term 'EOF'
    action 'RBRACE' (noprec):   reduce policyText --> term 'EOF'
    action 'LPAREN' (noprec):   reduce policyText --> term 'EOF'
    action 'RPAREN' (noprec):   reduce policyText --> term 'EOF'
    action 'BOOLEAN' (noprec):   reduce policyText --> term 'EOF'
    action 'DOUBLE' (noprec):   reduce policyText --> term 'EOF'
    action 'INTEGER' (noprec):   reduce policyText --> term 'EOF'
    action 'STRING' (noprec):   reduce policyText --> term 'EOF'
    action 'IDENT' (noprec):   reduce policyText --> term 'EOF'
    action 'error' (noprec):   reduce policyText --> term 'EOF'
    action '#' (noprec):   reduce policyText --> term 'EOF'
    action '$$' (noprec):   reduce policyText --> term 'EOF'
  immediate action:   reduce policyText --> term 'EOF'  gotos:state 4:  items:    term -> sequence . 
  actions:    action 'EOF' (noprec):   reduce term --> sequence
    action 'SEMI' (noprec):   reduce term --> sequence
    action 'BAR_SEMI' (noprec):   reduce term --> sequence
    action 'COMMA' (noprec):   reduce term --> sequence
    action 'BAR_COMMA' (noprec):   reduce term --> sequence
    action 'RARROW' (noprec):   reduce term --> sequence
    action 'EQUAL' (noprec):   reduce term --> sequence
    action 'BAR' (noprec):   reduce term --> sequence
    action 'COLON_EQUAL' (noprec):   reduce term --> sequence
    action 'BANG' (noprec):   reduce term --> sequence
    action 'SEND' (noprec):   reduce term --> sequence
    action 'RECEIVE' (noprec):   reduce term --> sequence
    action 'ON' (noprec):   reduce term --> sequence
    action 'REF' (noprec):   reduce term --> sequence
    action 'FUN' (noprec):   reduce term --> sequence
    action 'IF' (noprec):   reduce term --> sequence
    action 'THEN' (noprec):   reduce term --> sequence
    action 'ELSE' (noprec):   reduce term --> sequence
    action 'ELIF' (noprec):   reduce term --> sequence
    action 'BEGIN' (noprec):   reduce term --> sequence
    action 'END' (noprec):   reduce term --> sequence
    action 'LET' (noprec):   reduce term --> sequence
    action 'REC' (noprec):   reduce term --> sequence
    action 'IN' (noprec):   reduce term --> sequence
    action 'MATCH' (noprec):   reduce term --> sequence
    action 'WITH' (noprec):   reduce term --> sequence
    action 'WHEN' (noprec):   reduce term --> sequence
    action 'POLICY' (noprec):   reduce term --> sequence
    action 'TRY' (noprec):   reduce term --> sequence
    action 'FINALLY' (noprec):   reduce term --> sequence
    action 'NULL' (noprec):   reduce term --> sequence
    action 'COLON' (noprec):   reduce term --> sequence
    action 'LBRACKET' (noprec):   reduce term --> sequence
    action 'RBRACKET' (noprec):   reduce term --> sequence
    action 'LBRACE' (noprec):   reduce term --> sequence
    action 'RBRACE' (noprec):   reduce term --> sequence
    action 'LPAREN' (noprec):   reduce term --> sequence
    action 'RPAREN' (noprec):   reduce term --> sequence
    action 'BOOLEAN' (noprec):   reduce term --> sequence
    action 'DOUBLE' (noprec):   reduce term --> sequence
    action 'INTEGER' (noprec):   reduce term --> sequence
    action 'STRING' (noprec):   reduce term --> sequence
    action 'IDENT' (noprec):   reduce term --> sequence
    action 'error' (noprec):   reduce term --> sequence
    action '#' (noprec):   reduce term --> sequence
    action '$$' (noprec):   reduce term --> sequence
  immediate action:   reduce term --> sequence  gotos:state 5:  items:    term -> function . 
  actions:    action 'EOF' (noprec):   reduce term --> function
    action 'SEMI' (noprec):   reduce term --> function
    action 'BAR_SEMI' (noprec):   reduce term --> function
    action 'COMMA' (noprec):   reduce term --> function
    action 'BAR_COMMA' (noprec):   reduce term --> function
    action 'RARROW' (noprec):   reduce term --> function
    action 'EQUAL' (noprec):   reduce term --> function
    action 'BAR' (noprec):   reduce term --> function
    action 'COLON_EQUAL' (noprec):   reduce term --> function
    action 'BANG' (noprec):   reduce term --> function
    action 'SEND' (noprec):   reduce term --> function
    action 'RECEIVE' (noprec):   reduce term --> function
    action 'ON' (noprec):   reduce term --> function
    action 'REF' (noprec):   reduce term --> function
    action 'FUN' (noprec):   reduce term --> function
    action 'IF' (noprec):   reduce term --> function
    action 'THEN' (noprec):   reduce term --> function
    action 'ELSE' (noprec):   reduce term --> function
    action 'ELIF' (noprec):   reduce term --> function
    action 'BEGIN' (noprec):   reduce term --> function
    action 'END' (noprec):   reduce term --> function
    action 'LET' (noprec):   reduce term --> function
    action 'REC' (noprec):   reduce term --> function
    action 'IN' (noprec):   reduce term --> function
    action 'MATCH' (noprec):   reduce term --> function
    action 'WITH' (noprec):   reduce term --> function
    action 'WHEN' (noprec):   reduce term --> function
    action 'POLICY' (noprec):   reduce term --> function
    action 'TRY' (noprec):   reduce term --> function
    action 'FINALLY' (noprec):   reduce term --> function
    action 'NULL' (noprec):   reduce term --> function
    action 'COLON' (noprec):   reduce term --> function
    action 'LBRACKET' (noprec):   reduce term --> function
    action 'RBRACKET' (noprec):   reduce term --> function
    action 'LBRACE' (noprec):   reduce term --> function
    action 'RBRACE' (noprec):   reduce term --> function
    action 'LPAREN' (noprec):   reduce term --> function
    action 'RPAREN' (noprec):   reduce term --> function
    action 'BOOLEAN' (noprec):   reduce term --> function
    action 'DOUBLE' (noprec):   reduce term --> function
    action 'INTEGER' (noprec):   reduce term --> function
    action 'STRING' (noprec):   reduce term --> function
    action 'IDENT' (noprec):   reduce term --> function
    action 'error' (noprec):   reduce term --> function
    action '#' (noprec):   reduce term --> function
    action '$$' (noprec):   reduce term --> function
  immediate action:   reduce term --> function  gotos:state 6:  items:    term -> if . 
  actions:    action 'EOF' (noprec):   reduce term --> if
    action 'SEMI' (noprec):   reduce term --> if
    action 'BAR_SEMI' (noprec):   reduce term --> if
    action 'COMMA' (noprec):   reduce term --> if
    action 'BAR_COMMA' (noprec):   reduce term --> if
    action 'RARROW' (noprec):   reduce term --> if
    action 'EQUAL' (noprec):   reduce term --> if
    action 'BAR' (noprec):   reduce term --> if
    action 'COLON_EQUAL' (noprec):   reduce term --> if
    action 'BANG' (noprec):   reduce term --> if
    action 'SEND' (noprec):   reduce term --> if
    action 'RECEIVE' (noprec):   reduce term --> if
    action 'ON' (noprec):   reduce term --> if
    action 'REF' (noprec):   reduce term --> if
    action 'FUN' (noprec):   reduce term --> if
    action 'IF' (noprec):   reduce term --> if
    action 'THEN' (noprec):   reduce term --> if
    action 'ELSE' (noprec):   reduce term --> if
    action 'ELIF' (noprec):   reduce term --> if
    action 'BEGIN' (noprec):   reduce term --> if
    action 'END' (noprec):   reduce term --> if
    action 'LET' (noprec):   reduce term --> if
    action 'REC' (noprec):   reduce term --> if
    action 'IN' (noprec):   reduce term --> if
    action 'MATCH' (noprec):   reduce term --> if
    action 'WITH' (noprec):   reduce term --> if
    action 'WHEN' (noprec):   reduce term --> if
    action 'POLICY' (noprec):   reduce term --> if
    action 'TRY' (noprec):   reduce term --> if
    action 'FINALLY' (noprec):   reduce term --> if
    action 'NULL' (noprec):   reduce term --> if
    action 'COLON' (noprec):   reduce term --> if
    action 'LBRACKET' (noprec):   reduce term --> if
    action 'RBRACKET' (noprec):   reduce term --> if
    action 'LBRACE' (noprec):   reduce term --> if
    action 'RBRACE' (noprec):   reduce term --> if
    action 'LPAREN' (noprec):   reduce term --> if
    action 'RPAREN' (noprec):   reduce term --> if
    action 'BOOLEAN' (noprec):   reduce term --> if
    action 'DOUBLE' (noprec):   reduce term --> if
    action 'INTEGER' (noprec):   reduce term --> if
    action 'STRING' (noprec):   reduce term --> if
    action 'IDENT' (noprec):   reduce term --> if
    action 'error' (noprec):   reduce term --> if
    action '#' (noprec):   reduce term --> if
    action '$$' (noprec):   reduce term --> if
  immediate action:   reduce term --> if  gotos:state 7:  items:    term -> let . 
  actions:    action 'EOF' (noprec):   reduce term --> let
    action 'SEMI' (noprec):   reduce term --> let
    action 'BAR_SEMI' (noprec):   reduce term --> let
    action 'COMMA' (noprec):   reduce term --> let
    action 'BAR_COMMA' (noprec):   reduce term --> let
    action 'RARROW' (noprec):   reduce term --> let
    action 'EQUAL' (noprec):   reduce term --> let
    action 'BAR' (noprec):   reduce term --> let
    action 'COLON_EQUAL' (noprec):   reduce term --> let
    action 'BANG' (noprec):   reduce term --> let
    action 'SEND' (noprec):   reduce term --> let
    action 'RECEIVE' (noprec):   reduce term --> let
    action 'ON' (noprec):   reduce term --> let
    action 'REF' (noprec):   reduce term --> let
    action 'FUN' (noprec):   reduce term --> let
    action 'IF' (noprec):   reduce term --> let
    action 'THEN' (noprec):   reduce term --> let
    action 'ELSE' (noprec):   reduce term --> let
    action 'ELIF' (noprec):   reduce term --> let
    action 'BEGIN' (noprec):   reduce term --> let
    action 'END' (noprec):   reduce term --> let
    action 'LET' (noprec):   reduce term --> let
    action 'REC' (noprec):   reduce term --> let
    action 'IN' (noprec):   reduce term --> let
    action 'MATCH' (noprec):   reduce term --> let
    action 'WITH' (noprec):   reduce term --> let
    action 'WHEN' (noprec):   reduce term --> let
    action 'POLICY' (noprec):   reduce term --> let
    action 'TRY' (noprec):   reduce term --> let
    action 'FINALLY' (noprec):   reduce term --> let
    action 'NULL' (noprec):   reduce term --> let
    action 'COLON' (noprec):   reduce term --> let
    action 'LBRACKET' (noprec):   reduce term --> let
    action 'RBRACKET' (noprec):   reduce term --> let
    action 'LBRACE' (noprec):   reduce term --> let
    action 'RBRACE' (noprec):   reduce term --> let
    action 'LPAREN' (noprec):   reduce term --> let
    action 'RPAREN' (noprec):   reduce term --> let
    action 'BOOLEAN' (noprec):   reduce term --> let
    action 'DOUBLE' (noprec):   reduce term --> let
    action 'INTEGER' (noprec):   reduce term --> let
    action 'STRING' (noprec):   reduce term --> let
    action 'IDENT' (noprec):   reduce term --> let
    action 'error' (noprec):   reduce term --> let
    action '#' (noprec):   reduce term --> let
    action '$$' (noprec):   reduce term --> let
  immediate action:   reduce term --> let  gotos:state 8:  items:    term -> match . 
  actions:    action 'EOF' (noprec):   reduce term --> match
    action 'SEMI' (noprec):   reduce term --> match
    action 'BAR_SEMI' (noprec):   reduce term --> match
    action 'COMMA' (noprec):   reduce term --> match
    action 'BAR_COMMA' (noprec):   reduce term --> match
    action 'RARROW' (noprec):   reduce term --> match
    action 'EQUAL' (noprec):   reduce term --> match
    action 'BAR' (noprec):   reduce term --> match
    action 'COLON_EQUAL' (noprec):   reduce term --> match
    action 'BANG' (noprec):   reduce term --> match
    action 'SEND' (noprec):   reduce term --> match
    action 'RECEIVE' (noprec):   reduce term --> match
    action 'ON' (noprec):   reduce term --> match
    action 'REF' (noprec):   reduce term --> match
    action 'FUN' (noprec):   reduce term --> match
    action 'IF' (noprec):   reduce term --> match
    action 'THEN' (noprec):   reduce term --> match
    action 'ELSE' (noprec):   reduce term --> match
    action 'ELIF' (noprec):   reduce term --> match
    action 'BEGIN' (noprec):   reduce term --> match
    action 'END' (noprec):   reduce term --> match
    action 'LET' (noprec):   reduce term --> match
    action 'REC' (noprec):   reduce term --> match
    action 'IN' (noprec):   reduce term --> match
    action 'MATCH' (noprec):   reduce term --> match
    action 'WITH' (noprec):   reduce term --> match
    action 'WHEN' (noprec):   reduce term --> match
    action 'POLICY' (noprec):   reduce term --> match
    action 'TRY' (noprec):   reduce term --> match
    action 'FINALLY' (noprec):   reduce term --> match
    action 'NULL' (noprec):   reduce term --> match
    action 'COLON' (noprec):   reduce term --> match
    action 'LBRACKET' (noprec):   reduce term --> match
    action 'RBRACKET' (noprec):   reduce term --> match
    action 'LBRACE' (noprec):   reduce term --> match
    action 'RBRACE' (noprec):   reduce term --> match
    action 'LPAREN' (noprec):   reduce term --> match
    action 'RPAREN' (noprec):   reduce term --> match
    action 'BOOLEAN' (noprec):   reduce term --> match
    action 'DOUBLE' (noprec):   reduce term --> match
    action 'INTEGER' (noprec):   reduce term --> match
    action 'STRING' (noprec):   reduce term --> match
    action 'IDENT' (noprec):   reduce term --> match
    action 'error' (noprec):   reduce term --> match
    action '#' (noprec):   reduce term --> match
    action '$$' (noprec):   reduce term --> match
  immediate action:   reduce term --> match  gotos:state 9:  items:    term -> policy . 
  actions:    action 'EOF' (noprec):   reduce term --> policy
    action 'SEMI' (noprec):   reduce term --> policy
    action 'BAR_SEMI' (noprec):   reduce term --> policy
    action 'COMMA' (noprec):   reduce term --> policy
    action 'BAR_COMMA' (noprec):   reduce term --> policy
    action 'RARROW' (noprec):   reduce term --> policy
    action 'EQUAL' (noprec):   reduce term --> policy
    action 'BAR' (noprec):   reduce term --> policy
    action 'COLON_EQUAL' (noprec):   reduce term --> policy
    action 'BANG' (noprec):   reduce term --> policy
    action 'SEND' (noprec):   reduce term --> policy
    action 'RECEIVE' (noprec):   reduce term --> policy
    action 'ON' (noprec):   reduce term --> policy
    action 'REF' (noprec):   reduce term --> policy
    action 'FUN' (noprec):   reduce term --> policy
    action 'IF' (noprec):   reduce term --> policy
    action 'THEN' (noprec):   reduce term --> policy
    action 'ELSE' (noprec):   reduce term --> policy
    action 'ELIF' (noprec):   reduce term --> policy
    action 'BEGIN' (noprec):   reduce term --> policy
    action 'END' (noprec):   reduce term --> policy
    action 'LET' (noprec):   reduce term --> policy
    action 'REC' (noprec):   reduce term --> policy
    action 'IN' (noprec):   reduce term --> policy
    action 'MATCH' (noprec):   reduce term --> policy
    action 'WITH' (noprec):   reduce term --> policy
    action 'WHEN' (noprec):   reduce term --> policy
    action 'POLICY' (noprec):   reduce term --> policy
    action 'TRY' (noprec):   reduce term --> policy
    action 'FINALLY' (noprec):   reduce term --> policy
    action 'NULL' (noprec):   reduce term --> policy
    action 'COLON' (noprec):   reduce term --> policy
    action 'LBRACKET' (noprec):   reduce term --> policy
    action 'RBRACKET' (noprec):   reduce term --> policy
    action 'LBRACE' (noprec):   reduce term --> policy
    action 'RBRACE' (noprec):   reduce term --> policy
    action 'LPAREN' (noprec):   reduce term --> policy
    action 'RPAREN' (noprec):   reduce term --> policy
    action 'BOOLEAN' (noprec):   reduce term --> policy
    action 'DOUBLE' (noprec):   reduce term --> policy
    action 'INTEGER' (noprec):   reduce term --> policy
    action 'STRING' (noprec):   reduce term --> policy
    action 'IDENT' (noprec):   reduce term --> policy
    action 'error' (noprec):   reduce term --> policy
    action '#' (noprec):   reduce term --> policy
    action '$$' (noprec):   reduce term --> policy
  immediate action:   reduce term --> policy  gotos:state 10:  items:    term -> tryWith . 
  actions:    action 'EOF' (noprec):   reduce term --> tryWith
    action 'SEMI' (noprec):   reduce term --> tryWith
    action 'BAR_SEMI' (noprec):   reduce term --> tryWith
    action 'COMMA' (noprec):   reduce term --> tryWith
    action 'BAR_COMMA' (noprec):   reduce term --> tryWith
    action 'RARROW' (noprec):   reduce term --> tryWith
    action 'EQUAL' (noprec):   reduce term --> tryWith
    action 'BAR' (noprec):   reduce term --> tryWith
    action 'COLON_EQUAL' (noprec):   reduce term --> tryWith
    action 'BANG' (noprec):   reduce term --> tryWith
    action 'SEND' (noprec):   reduce term --> tryWith
    action 'RECEIVE' (noprec):   reduce term --> tryWith
    action 'ON' (noprec):   reduce term --> tryWith
    action 'REF' (noprec):   reduce term --> tryWith
    action 'FUN' (noprec):   reduce term --> tryWith
    action 'IF' (noprec):   reduce term --> tryWith
    action 'THEN' (noprec):   reduce term --> tryWith
    action 'ELSE' (noprec):   reduce term --> tryWith
    action 'ELIF' (noprec):   reduce term --> tryWith
    action 'BEGIN' (noprec):   reduce term --> tryWith
    action 'END' (noprec):   reduce term --> tryWith
    action 'LET' (noprec):   reduce term --> tryWith
    action 'REC' (noprec):   reduce term --> tryWith
    action 'IN' (noprec):   reduce term --> tryWith
    action 'MATCH' (noprec):   reduce term --> tryWith
    action 'WITH' (noprec):   reduce term --> tryWith
    action 'WHEN' (noprec):   reduce term --> tryWith
    action 'POLICY' (noprec):   reduce term --> tryWith
    action 'TRY' (noprec):   reduce term --> tryWith
    action 'FINALLY' (noprec):   reduce term --> tryWith
    action 'NULL' (noprec):   reduce term --> tryWith
    action 'COLON' (noprec):   reduce term --> tryWith
    action 'LBRACKET' (noprec):   reduce term --> tryWith
    action 'RBRACKET' (noprec):   reduce term --> tryWith
    action 'LBRACE' (noprec):   reduce term --> tryWith
    action 'RBRACE' (noprec):   reduce term --> tryWith
    action 'LPAREN' (noprec):   reduce term --> tryWith
    action 'RPAREN' (noprec):   reduce term --> tryWith
    action 'BOOLEAN' (noprec):   reduce term --> tryWith
    action 'DOUBLE' (noprec):   reduce term --> tryWith
    action 'INTEGER' (noprec):   reduce term --> tryWith
    action 'STRING' (noprec):   reduce term --> tryWith
    action 'IDENT' (noprec):   reduce term --> tryWith
    action 'error' (noprec):   reduce term --> tryWith
    action '#' (noprec):   reduce term --> tryWith
    action '$$' (noprec):   reduce term --> tryWith
  immediate action:   reduce term --> tryWith  gotos:state 11:  items:    term -> tryFinally . 
  actions:    action 'EOF' (noprec):   reduce term --> tryFinally
    action 'SEMI' (noprec):   reduce term --> tryFinally
    action 'BAR_SEMI' (noprec):   reduce term --> tryFinally
    action 'COMMA' (noprec):   reduce term --> tryFinally
    action 'BAR_COMMA' (noprec):   reduce term --> tryFinally
    action 'RARROW' (noprec):   reduce term --> tryFinally
    action 'EQUAL' (noprec):   reduce term --> tryFinally
    action 'BAR' (noprec):   reduce term --> tryFinally
    action 'COLON_EQUAL' (noprec):   reduce term --> tryFinally
    action 'BANG' (noprec):   reduce term --> tryFinally
    action 'SEND' (noprec):   reduce term --> tryFinally
    action 'RECEIVE' (noprec):   reduce term --> tryFinally
    action 'ON' (noprec):   reduce term --> tryFinally
    action 'REF' (noprec):   reduce term --> tryFinally
    action 'FUN' (noprec):   reduce term --> tryFinally
    action 'IF' (noprec):   reduce term --> tryFinally
    action 'THEN' (noprec):   reduce term --> tryFinally
    action 'ELSE' (noprec):   reduce term --> tryFinally
    action 'ELIF' (noprec):   reduce term --> tryFinally
    action 'BEGIN' (noprec):   reduce term --> tryFinally
    action 'END' (noprec):   reduce term --> tryFinally
    action 'LET' (noprec):   reduce term --> tryFinally
    action 'REC' (noprec):   reduce term --> tryFinally
    action 'IN' (noprec):   reduce term --> tryFinally
    action 'MATCH' (noprec):   reduce term --> tryFinally
    action 'WITH' (noprec):   reduce term --> tryFinally
    action 'WHEN' (noprec):   reduce term --> tryFinally
    action 'POLICY' (noprec):   reduce term --> tryFinally
    action 'TRY' (noprec):   reduce term --> tryFinally
    action 'FINALLY' (noprec):   reduce term --> tryFinally
    action 'NULL' (noprec):   reduce term --> tryFinally
    action 'COLON' (noprec):   reduce term --> tryFinally
    action 'LBRACKET' (noprec):   reduce term --> tryFinally
    action 'RBRACKET' (noprec):   reduce term --> tryFinally
    action 'LBRACE' (noprec):   reduce term --> tryFinally
    action 'RBRACE' (noprec):   reduce term --> tryFinally
    action 'LPAREN' (noprec):   reduce term --> tryFinally
    action 'RPAREN' (noprec):   reduce term --> tryFinally
    action 'BOOLEAN' (noprec):   reduce term --> tryFinally
    action 'DOUBLE' (noprec):   reduce term --> tryFinally
    action 'INTEGER' (noprec):   reduce term --> tryFinally
    action 'STRING' (noprec):   reduce term --> tryFinally
    action 'IDENT' (noprec):   reduce term --> tryFinally
    action 'error' (noprec):   reduce term --> tryFinally
    action '#' (noprec):   reduce term --> tryFinally
    action '$$' (noprec):   reduce term --> tryFinally
  immediate action:   reduce term --> tryFinally  gotos:state 12:  items:    term -> receive . 
  actions:    action 'EOF' (noprec):   reduce term --> receive
    action 'SEMI' (noprec):   reduce term --> receive
    action 'BAR_SEMI' (noprec):   reduce term --> receive
    action 'COMMA' (noprec):   reduce term --> receive
    action 'BAR_COMMA' (noprec):   reduce term --> receive
    action 'RARROW' (noprec):   reduce term --> receive
    action 'EQUAL' (noprec):   reduce term --> receive
    action 'BAR' (noprec):   reduce term --> receive
    action 'COLON_EQUAL' (noprec):   reduce term --> receive
    action 'BANG' (noprec):   reduce term --> receive
    action 'SEND' (noprec):   reduce term --> receive
    action 'RECEIVE' (noprec):   reduce term --> receive
    action 'ON' (noprec):   reduce term --> receive
    action 'REF' (noprec):   reduce term --> receive
    action 'FUN' (noprec):   reduce term --> receive
    action 'IF' (noprec):   reduce term --> receive
    action 'THEN' (noprec):   reduce term --> receive
    action 'ELSE' (noprec):   reduce term --> receive
    action 'ELIF' (noprec):   reduce term --> receive
    action 'BEGIN' (noprec):   reduce term --> receive
    action 'END' (noprec):   reduce term --> receive
    action 'LET' (noprec):   reduce term --> receive
    action 'REC' (noprec):   reduce term --> receive
    action 'IN' (noprec):   reduce term --> receive
    action 'MATCH' (noprec):   reduce term --> receive
    action 'WITH' (noprec):   reduce term --> receive
    action 'WHEN' (noprec):   reduce term --> receive
    action 'POLICY' (noprec):   reduce term --> receive
    action 'TRY' (noprec):   reduce term --> receive
    action 'FINALLY' (noprec):   reduce term --> receive
    action 'NULL' (noprec):   reduce term --> receive
    action 'COLON' (noprec):   reduce term --> receive
    action 'LBRACKET' (noprec):   reduce term --> receive
    action 'RBRACKET' (noprec):   reduce term --> receive
    action 'LBRACE' (noprec):   reduce term --> receive
    action 'RBRACE' (noprec):   reduce term --> receive
    action 'LPAREN' (noprec):   reduce term --> receive
    action 'RPAREN' (noprec):   reduce term --> receive
    action 'BOOLEAN' (noprec):   reduce term --> receive
    action 'DOUBLE' (noprec):   reduce term --> receive
    action 'INTEGER' (noprec):   reduce term --> receive
    action 'STRING' (noprec):   reduce term --> receive
    action 'IDENT' (noprec):   reduce term --> receive
    action 'error' (noprec):   reduce term --> receive
    action '#' (noprec):   reduce term --> receive
    action '$$' (noprec):   reduce term --> receive
  immediate action:   reduce term --> receive  gotos:state 13:  items:    term -> send . 
  actions:    action 'EOF' (noprec):   reduce term --> send
    action 'SEMI' (noprec):   reduce term --> send
    action 'BAR_SEMI' (noprec):   reduce term --> send
    action 'COMMA' (noprec):   reduce term --> send
    action 'BAR_COMMA' (noprec):   reduce term --> send
    action 'RARROW' (noprec):   reduce term --> send
    action 'EQUAL' (noprec):   reduce term --> send
    action 'BAR' (noprec):   reduce term --> send
    action 'COLON_EQUAL' (noprec):   reduce term --> send
    action 'BANG' (noprec):   reduce term --> send
    action 'SEND' (noprec):   reduce term --> send
    action 'RECEIVE' (noprec):   reduce term --> send
    action 'ON' (noprec):   reduce term --> send
    action 'REF' (noprec):   reduce term --> send
    action 'FUN' (noprec):   reduce term --> send
    action 'IF' (noprec):   reduce term --> send
    action 'THEN' (noprec):   reduce term --> send
    action 'ELSE' (noprec):   reduce term --> send
    action 'ELIF' (noprec):   reduce term --> send
    action 'BEGIN' (noprec):   reduce term --> send
    action 'END' (noprec):   reduce term --> send
    action 'LET' (noprec):   reduce term --> send
    action 'REC' (noprec):   reduce term --> send
    action 'IN' (noprec):   reduce term --> send
    action 'MATCH' (noprec):   reduce term --> send
    action 'WITH' (noprec):   reduce term --> send
    action 'WHEN' (noprec):   reduce term --> send
    action 'POLICY' (noprec):   reduce term --> send
    action 'TRY' (noprec):   reduce term --> send
    action 'FINALLY' (noprec):   reduce term --> send
    action 'NULL' (noprec):   reduce term --> send
    action 'COLON' (noprec):   reduce term --> send
    action 'LBRACKET' (noprec):   reduce term --> send
    action 'RBRACKET' (noprec):   reduce term --> send
    action 'LBRACE' (noprec):   reduce term --> send
    action 'RBRACE' (noprec):   reduce term --> send
    action 'LPAREN' (noprec):   reduce term --> send
    action 'RPAREN' (noprec):   reduce term --> send
    action 'BOOLEAN' (noprec):   reduce term --> send
    action 'DOUBLE' (noprec):   reduce term --> send
    action 'INTEGER' (noprec):   reduce term --> send
    action 'STRING' (noprec):   reduce term --> send
    action 'IDENT' (noprec):   reduce term --> send
    action 'error' (noprec):   reduce term --> send
    action '#' (noprec):   reduce term --> send
    action '$$' (noprec):   reduce term --> send
  immediate action:   reduce term --> send  gotos:state 14:  items:    term -> ref . 
  actions:    action 'EOF' (noprec):   reduce term --> ref
    action 'SEMI' (noprec):   reduce term --> ref
    action 'BAR_SEMI' (noprec):   reduce term --> ref
    action 'COMMA' (noprec):   reduce term --> ref
    action 'BAR_COMMA' (noprec):   reduce term --> ref
    action 'RARROW' (noprec):   reduce term --> ref
    action 'EQUAL' (noprec):   reduce term --> ref
    action 'BAR' (noprec):   reduce term --> ref
    action 'COLON_EQUAL' (noprec):   reduce term --> ref
    action 'BANG' (noprec):   reduce term --> ref
    action 'SEND' (noprec):   reduce term --> ref
    action 'RECEIVE' (noprec):   reduce term --> ref
    action 'ON' (noprec):   reduce term --> ref
    action 'REF' (noprec):   reduce term --> ref
    action 'FUN' (noprec):   reduce term --> ref
    action 'IF' (noprec):   reduce term --> ref
    action 'THEN' (noprec):   reduce term --> ref
    action 'ELSE' (noprec):   reduce term --> ref
    action 'ELIF' (noprec):   reduce term --> ref
    action 'BEGIN' (noprec):   reduce term --> ref
    action 'END' (noprec):   reduce term --> ref
    action 'LET' (noprec):   reduce term --> ref
    action 'REC' (noprec):   reduce term --> ref
    action 'IN' (noprec):   reduce term --> ref
    action 'MATCH' (noprec):   reduce term --> ref
    action 'WITH' (noprec):   reduce term --> ref
    action 'WHEN' (noprec):   reduce term --> ref
    action 'POLICY' (noprec):   reduce term --> ref
    action 'TRY' (noprec):   reduce term --> ref
    action 'FINALLY' (noprec):   reduce term --> ref
    action 'NULL' (noprec):   reduce term --> ref
    action 'COLON' (noprec):   reduce term --> ref
    action 'LBRACKET' (noprec):   reduce term --> ref
    action 'RBRACKET' (noprec):   reduce term --> ref
    action 'LBRACE' (noprec):   reduce term --> ref
    action 'RBRACE' (noprec):   reduce term --> ref
    action 'LPAREN' (noprec):   reduce term --> ref
    action 'RPAREN' (noprec):   reduce term --> ref
    action 'BOOLEAN' (noprec):   reduce term --> ref
    action 'DOUBLE' (noprec):   reduce term --> ref
    action 'INTEGER' (noprec):   reduce term --> ref
    action 'STRING' (noprec):   reduce term --> ref
    action 'IDENT' (noprec):   reduce term --> ref
    action 'error' (noprec):   reduce term --> ref
    action '#' (noprec):   reduce term --> ref
    action '$$' (noprec):   reduce term --> ref
  immediate action:   reduce term --> ref  gotos:state 15:  items:    term -> dereference . 
  actions:    action 'EOF' (noprec):   reduce term --> dereference
    action 'SEMI' (noprec):   reduce term --> dereference
    action 'BAR_SEMI' (noprec):   reduce term --> dereference
    action 'COMMA' (noprec):   reduce term --> dereference
    action 'BAR_COMMA' (noprec):   reduce term --> dereference
    action 'RARROW' (noprec):   reduce term --> dereference
    action 'EQUAL' (noprec):   reduce term --> dereference
    action 'BAR' (noprec):   reduce term --> dereference
    action 'COLON_EQUAL' (noprec):   reduce term --> dereference
    action 'BANG' (noprec):   reduce term --> dereference
    action 'SEND' (noprec):   reduce term --> dereference
    action 'RECEIVE' (noprec):   reduce term --> dereference
    action 'ON' (noprec):   reduce term --> dereference
    action 'REF' (noprec):   reduce term --> dereference
    action 'FUN' (noprec):   reduce term --> dereference
    action 'IF' (noprec):   reduce term --> dereference
    action 'THEN' (noprec):   reduce term --> dereference
    action 'ELSE' (noprec):   reduce term --> dereference
    action 'ELIF' (noprec):   reduce term --> dereference
    action 'BEGIN' (noprec):   reduce term --> dereference
    action 'END' (noprec):   reduce term --> dereference
    action 'LET' (noprec):   reduce term --> dereference
    action 'REC' (noprec):   reduce term --> dereference
    action 'IN' (noprec):   reduce term --> dereference
    action 'MATCH' (noprec):   reduce term --> dereference
    action 'WITH' (noprec):   reduce term --> dereference
    action 'WHEN' (noprec):   reduce term --> dereference
    action 'POLICY' (noprec):   reduce term --> dereference
    action 'TRY' (noprec):   reduce term --> dereference
    action 'FINALLY' (noprec):   reduce term --> dereference
    action 'NULL' (noprec):   reduce term --> dereference
    action 'COLON' (noprec):   reduce term --> dereference
    action 'LBRACKET' (noprec):   reduce term --> dereference
    action 'RBRACKET' (noprec):   reduce term --> dereference
    action 'LBRACE' (noprec):   reduce term --> dereference
    action 'RBRACE' (noprec):   reduce term --> dereference
    action 'LPAREN' (noprec):   reduce term --> dereference
    action 'RPAREN' (noprec):   reduce term --> dereference
    action 'BOOLEAN' (noprec):   reduce term --> dereference
    action 'DOUBLE' (noprec):   reduce term --> dereference
    action 'INTEGER' (noprec):   reduce term --> dereference
    action 'STRING' (noprec):   reduce term --> dereference
    action 'IDENT' (noprec):   reduce term --> dereference
    action 'error' (noprec):   reduce term --> dereference
    action '#' (noprec):   reduce term --> dereference
    action '$$' (noprec):   reduce term --> dereference
  immediate action:   reduce term --> dereference  gotos:state 16:  items:    term -> assignment . 
  actions:    action 'EOF' (noprec):   reduce term --> assignment
    action 'SEMI' (noprec):   reduce term --> assignment
    action 'BAR_SEMI' (noprec):   reduce term --> assignment
    action 'COMMA' (noprec):   reduce term --> assignment
    action 'BAR_COMMA' (noprec):   reduce term --> assignment
    action 'RARROW' (noprec):   reduce term --> assignment
    action 'EQUAL' (noprec):   reduce term --> assignment
    action 'BAR' (noprec):   reduce term --> assignment
    action 'COLON_EQUAL' (noprec):   reduce term --> assignment
    action 'BANG' (noprec):   reduce term --> assignment
    action 'SEND' (noprec):   reduce term --> assignment
    action 'RECEIVE' (noprec):   reduce term --> assignment
    action 'ON' (noprec):   reduce term --> assignment
    action 'REF' (noprec):   reduce term --> assignment
    action 'FUN' (noprec):   reduce term --> assignment
    action 'IF' (noprec):   reduce term --> assignment
    action 'THEN' (noprec):   reduce term --> assignment
    action 'ELSE' (noprec):   reduce term --> assignment
    action 'ELIF' (noprec):   reduce term --> assignment
    action 'BEGIN' (noprec):   reduce term --> assignment
    action 'END' (noprec):   reduce term --> assignment
    action 'LET' (noprec):   reduce term --> assignment
    action 'REC' (noprec):   reduce term --> assignment
    action 'IN' (noprec):   reduce term --> assignment
    action 'MATCH' (noprec):   reduce term --> assignment
    action 'WITH' (noprec):   reduce term --> assignment
    action 'WHEN' (noprec):   reduce term --> assignment
    action 'POLICY' (noprec):   reduce term --> assignment
    action 'TRY' (noprec):   reduce term --> assignment
    action 'FINALLY' (noprec):   reduce term --> assignment
    action 'NULL' (noprec):   reduce term --> assignment
    action 'COLON' (noprec):   reduce term --> assignment
    action 'LBRACKET' (noprec):   reduce term --> assignment
    action 'RBRACKET' (noprec):   reduce term --> assignment
    action 'LBRACE' (noprec):   reduce term --> assignment
    action 'RBRACE' (noprec):   reduce term --> assignment
    action 'LPAREN' (noprec):   reduce term --> assignment
    action 'RPAREN' (noprec):   reduce term --> assignment
    action 'BOOLEAN' (noprec):   reduce term --> assignment
    action 'DOUBLE' (noprec):   reduce term --> assignment
    action 'INTEGER' (noprec):   reduce term --> assignment
    action 'STRING' (noprec):   reduce term --> assignment
    action 'IDENT' (noprec):   reduce term --> assignment
    action 'error' (noprec):   reduce term --> assignment
    action '#' (noprec):   reduce term --> assignment
    action '$$' (noprec):   reduce term --> assignment
  immediate action:   reduce term --> assignment  gotos:state 17:  items:    sequence -> steps . 
    steps -> steps . sep_semi application
  actions:    action 'EOF' (noprec):   reduce sequence --> steps
    action 'SEMI' (explicit right 9996):   shift 111
    action 'BAR_SEMI' (explicit right 9996):   shift 112
    action 'COMMA' (noprec):   reduce sequence --> steps
    action 'BAR_COMMA' (noprec):   reduce sequence --> steps
    action 'RARROW' (noprec):   reduce sequence --> steps
    action 'EQUAL' (noprec):   reduce sequence --> steps
    action 'BAR' (noprec):   reduce sequence --> steps
    action 'COLON_EQUAL' (noprec):   reduce sequence --> steps
    action 'BANG' (noprec):   reduce sequence --> steps
    action 'SEND' (noprec):   reduce sequence --> steps
    action 'RECEIVE' (noprec):   reduce sequence --> steps
    action 'ON' (noprec):   reduce sequence --> steps
    action 'REF' (noprec):   reduce sequence --> steps
    action 'FUN' (noprec):   reduce sequence --> steps
    action 'IF' (noprec):   reduce sequence --> steps
    action 'THEN' (noprec):   reduce sequence --> steps
    action 'ELSE' (noprec):   reduce sequence --> steps
    action 'ELIF' (noprec):   reduce sequence --> steps
    action 'BEGIN' (noprec):   reduce sequence --> steps
    action 'END' (noprec):   reduce sequence --> steps
    action 'LET' (noprec):   reduce sequence --> steps
    action 'REC' (noprec):   reduce sequence --> steps
    action 'IN' (noprec):   reduce sequence --> steps
    action 'MATCH' (noprec):   reduce sequence --> steps
    action 'WITH' (noprec):   reduce sequence --> steps
    action 'WHEN' (noprec):   reduce sequence --> steps
    action 'POLICY' (noprec):   reduce sequence --> steps
    action 'TRY' (noprec):   reduce sequence --> steps
    action 'FINALLY' (noprec):   reduce sequence --> steps
    action 'NULL' (noprec):   reduce sequence --> steps
    action 'COLON' (noprec):   reduce sequence --> steps
    action 'LBRACKET' (noprec):   reduce sequence --> steps
    action 'RBRACKET' (noprec):   reduce sequence --> steps
    action 'LBRACE' (noprec):   reduce sequence --> steps
    action 'RBRACE' (noprec):   reduce sequence --> steps
    action 'LPAREN' (noprec):   reduce sequence --> steps
    action 'RPAREN' (noprec):   reduce sequence --> steps
    action 'BOOLEAN' (noprec):   reduce sequence --> steps
    action 'DOUBLE' (noprec):   reduce sequence --> steps
    action 'INTEGER' (noprec):   reduce sequence --> steps
    action 'STRING' (noprec):   reduce sequence --> steps
    action 'IDENT' (noprec):   reduce sequence --> steps
    action 'error' (noprec):   reduce sequence --> steps
    action '#' (noprec):   reduce sequence --> steps
    action '$$' (noprec):   reduce sequence --> steps
  immediate action: <none>  gotos:    goto sep_semi: 18
state 18:  items:    steps -> steps sep_semi . application
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto application: 19
    goto value: 22
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 19:  items:    steps -> steps sep_semi application . 
    application -> application . value
  actions:    action 'EOF' (noprec):   reduce steps --> steps sep_semi application
    action 'SEMI' (noprec):   reduce steps --> steps sep_semi application
    action 'BAR_SEMI' (noprec):   reduce steps --> steps sep_semi application
    action 'COMMA' (noprec):   reduce steps --> steps sep_semi application
    action 'BAR_COMMA' (noprec):   reduce steps --> steps sep_semi application
    action 'RARROW' (noprec):   reduce steps --> steps sep_semi application
    action 'EQUAL' (noprec):   reduce steps --> steps sep_semi application
    action 'BAR' (noprec):   reduce steps --> steps sep_semi application
    action 'COLON_EQUAL' (noprec):   reduce steps --> steps sep_semi application
    action 'BANG' (noprec):   reduce steps --> steps sep_semi application
    action 'SEND' (noprec):   reduce steps --> steps sep_semi application
    action 'RECEIVE' (noprec):   reduce steps --> steps sep_semi application
    action 'ON' (noprec):   reduce steps --> steps sep_semi application
    action 'REF' (noprec):   reduce steps --> steps sep_semi application
    action 'FUN' (noprec):   reduce steps --> steps sep_semi application
    action 'IF' (noprec):   reduce steps --> steps sep_semi application
    action 'THEN' (noprec):   reduce steps --> steps sep_semi application
    action 'ELSE' (noprec):   reduce steps --> steps sep_semi application
    action 'ELIF' (noprec):   reduce steps --> steps sep_semi application
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   reduce steps --> steps sep_semi application
    action 'LET' (noprec):   reduce steps --> steps sep_semi application
    action 'REC' (noprec):   reduce steps --> steps sep_semi application
    action 'IN' (noprec):   reduce steps --> steps sep_semi application
    action 'MATCH' (noprec):   reduce steps --> steps sep_semi application
    action 'WITH' (noprec):   reduce steps --> steps sep_semi application
    action 'WHEN' (noprec):   reduce steps --> steps sep_semi application
    action 'POLICY' (noprec):   reduce steps --> steps sep_semi application
    action 'TRY' (noprec):   reduce steps --> steps sep_semi application
    action 'FINALLY' (noprec):   reduce steps --> steps sep_semi application
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   reduce steps --> steps sep_semi application
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   reduce steps --> steps sep_semi application
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   reduce steps --> steps sep_semi application
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   reduce steps --> steps sep_semi application
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   reduce steps --> steps sep_semi application
    action '#' (noprec):   reduce steps --> steps sep_semi application
    action '$$' (noprec):   reduce steps --> steps sep_semi application
  immediate action: <none>  gotos:    goto value: 21
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 20:  items:    steps -> application . 
    application -> application . value
  actions:    action 'EOF' (noprec):   reduce steps --> application
    action 'SEMI' (noprec):   reduce steps --> application
    action 'BAR_SEMI' (noprec):   reduce steps --> application
    action 'COMMA' (noprec):   reduce steps --> application
    action 'BAR_COMMA' (noprec):   reduce steps --> application
    action 'RARROW' (noprec):   reduce steps --> application
    action 'EQUAL' (noprec):   reduce steps --> application
    action 'BAR' (noprec):   reduce steps --> application
    action 'COLON_EQUAL' (noprec):   reduce steps --> application
    action 'BANG' (noprec):   reduce steps --> application
    action 'SEND' (noprec):   reduce steps --> application
    action 'RECEIVE' (noprec):   reduce steps --> application
    action 'ON' (noprec):   reduce steps --> application
    action 'REF' (noprec):   reduce steps --> application
    action 'FUN' (noprec):   reduce steps --> application
    action 'IF' (noprec):   reduce steps --> application
    action 'THEN' (noprec):   reduce steps --> application
    action 'ELSE' (noprec):   reduce steps --> application
    action 'ELIF' (noprec):   reduce steps --> application
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   reduce steps --> application
    action 'LET' (noprec):   reduce steps --> application
    action 'REC' (noprec):   reduce steps --> application
    action 'IN' (noprec):   reduce steps --> application
    action 'MATCH' (noprec):   reduce steps --> application
    action 'WITH' (noprec):   reduce steps --> application
    action 'WHEN' (noprec):   reduce steps --> application
    action 'POLICY' (noprec):   reduce steps --> application
    action 'TRY' (noprec):   reduce steps --> application
    action 'FINALLY' (noprec):   reduce steps --> application
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   reduce steps --> application
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   reduce steps --> application
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   reduce steps --> application
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   reduce steps --> application
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   reduce steps --> application
    action '#' (noprec):   reduce steps --> application
    action '$$' (noprec):   reduce steps --> application
  immediate action: <none>  gotos:    goto value: 21
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 21:  items:    application -> application value . 
  actions:    action 'EOF' (explicit left 9995):   reduce application --> application value
    action 'SEMI' (explicit left 9995):   reduce application --> application value
    action 'BAR_SEMI' (explicit left 9995):   reduce application --> application value
    action 'COMMA' (explicit left 9995):   reduce application --> application value
    action 'BAR_COMMA' (explicit left 9995):   reduce application --> application value
    action 'RARROW' (explicit left 9995):   reduce application --> application value
    action 'EQUAL' (explicit left 9995):   reduce application --> application value
    action 'BAR' (explicit left 9995):   reduce application --> application value
    action 'COLON_EQUAL' (explicit left 9995):   reduce application --> application value
    action 'BANG' (explicit left 9995):   reduce application --> application value
    action 'SEND' (explicit left 9995):   reduce application --> application value
    action 'RECEIVE' (explicit left 9995):   reduce application --> application value
    action 'ON' (explicit left 9995):   reduce application --> application value
    action 'REF' (explicit left 9995):   reduce application --> application value
    action 'FUN' (explicit left 9995):   reduce application --> application value
    action 'IF' (explicit left 9995):   reduce application --> application value
    action 'THEN' (explicit left 9995):   reduce application --> application value
    action 'ELSE' (explicit left 9995):   reduce application --> application value
    action 'ELIF' (explicit left 9995):   reduce application --> application value
    action 'BEGIN' (explicit left 9995):   reduce application --> application value
    action 'END' (explicit left 9995):   reduce application --> application value
    action 'LET' (explicit left 9995):   reduce application --> application value
    action 'REC' (explicit left 9995):   reduce application --> application value
    action 'IN' (explicit left 9995):   reduce application --> application value
    action 'MATCH' (explicit left 9995):   reduce application --> application value
    action 'WITH' (explicit left 9995):   reduce application --> application value
    action 'WHEN' (explicit left 9995):   reduce application --> application value
    action 'POLICY' (explicit left 9995):   reduce application --> application value
    action 'TRY' (explicit left 9995):   reduce application --> application value
    action 'FINALLY' (explicit left 9995):   reduce application --> application value
    action 'NULL' (explicit left 9995):   reduce application --> application value
    action 'COLON' (explicit left 9995):   reduce application --> application value
    action 'LBRACKET' (explicit left 9995):   reduce application --> application value
    action 'RBRACKET' (explicit left 9995):   reduce application --> application value
    action 'LBRACE' (explicit left 9995):   reduce application --> application value
    action 'RBRACE' (explicit left 9995):   reduce application --> application value
    action 'LPAREN' (explicit left 9995):   reduce application --> application value
    action 'RPAREN' (explicit left 9995):   reduce application --> application value
    action 'BOOLEAN' (explicit left 9995):   reduce application --> application value
    action 'DOUBLE' (explicit left 9995):   reduce application --> application value
    action 'INTEGER' (explicit left 9995):   reduce application --> application value
    action 'STRING' (explicit left 9995):   reduce application --> application value
    action 'IDENT' (explicit left 9995):   reduce application --> application value
    action 'error' (explicit left 9995):   reduce application --> application value
    action '#' (explicit left 9995):   reduce application --> application value
    action '$$' (explicit left 9995):   reduce application --> application value
  immediate action:   reduce application --> application value  gotos:state 22:  items:    application -> value . 
  actions:    action 'EOF' (noprec):   reduce application --> value
    action 'SEMI' (noprec):   reduce application --> value
    action 'BAR_SEMI' (noprec):   reduce application --> value
    action 'COMMA' (noprec):   reduce application --> value
    action 'BAR_COMMA' (noprec):   reduce application --> value
    action 'RARROW' (noprec):   reduce application --> value
    action 'EQUAL' (noprec):   reduce application --> value
    action 'BAR' (noprec):   reduce application --> value
    action 'COLON_EQUAL' (noprec):   reduce application --> value
    action 'BANG' (noprec):   reduce application --> value
    action 'SEND' (noprec):   reduce application --> value
    action 'RECEIVE' (noprec):   reduce application --> value
    action 'ON' (noprec):   reduce application --> value
    action 'REF' (noprec):   reduce application --> value
    action 'FUN' (noprec):   reduce application --> value
    action 'IF' (noprec):   reduce application --> value
    action 'THEN' (noprec):   reduce application --> value
    action 'ELSE' (noprec):   reduce application --> value
    action 'ELIF' (noprec):   reduce application --> value
    action 'BEGIN' (noprec):   reduce application --> value
    action 'END' (noprec):   reduce application --> value
    action 'LET' (noprec):   reduce application --> value
    action 'REC' (noprec):   reduce application --> value
    action 'IN' (noprec):   reduce application --> value
    action 'MATCH' (noprec):   reduce application --> value
    action 'WITH' (noprec):   reduce application --> value
    action 'WHEN' (noprec):   reduce application --> value
    action 'POLICY' (noprec):   reduce application --> value
    action 'TRY' (noprec):   reduce application --> value
    action 'FINALLY' (noprec):   reduce application --> value
    action 'NULL' (noprec):   reduce application --> value
    action 'COLON' (noprec):   reduce application --> value
    action 'LBRACKET' (noprec):   reduce application --> value
    action 'RBRACKET' (noprec):   reduce application --> value
    action 'LBRACE' (noprec):   reduce application --> value
    action 'RBRACE' (noprec):   reduce application --> value
    action 'LPAREN' (noprec):   reduce application --> value
    action 'RPAREN' (noprec):   reduce application --> value
    action 'BOOLEAN' (noprec):   reduce application --> value
    action 'DOUBLE' (noprec):   reduce application --> value
    action 'INTEGER' (noprec):   reduce application --> value
    action 'STRING' (noprec):   reduce application --> value
    action 'IDENT' (noprec):   reduce application --> value
    action 'error' (noprec):   reduce application --> value
    action '#' (noprec):   reduce application --> value
    action '$$' (noprec):   reduce application --> value
  immediate action:   reduce application --> value  gotos:state 23:  items:    application -> value . 
    assignment -> value . 'COLON_EQUAL' value
  actions:    action 'EOF' (noprec):   reduce application --> value
    action 'SEMI' (noprec):   reduce application --> value
    action 'BAR_SEMI' (noprec):   reduce application --> value
    action 'COMMA' (noprec):   reduce application --> value
    action 'BAR_COMMA' (noprec):   reduce application --> value
    action 'RARROW' (noprec):   reduce application --> value
    action 'EQUAL' (noprec):   reduce application --> value
    action 'BAR' (noprec):   reduce application --> value
    action 'COLON_EQUAL' (explicit nonassoc 9999):   shift 97
    action 'BANG' (noprec):   reduce application --> value
    action 'SEND' (noprec):   reduce application --> value
    action 'RECEIVE' (noprec):   reduce application --> value
    action 'ON' (noprec):   reduce application --> value
    action 'REF' (noprec):   reduce application --> value
    action 'FUN' (noprec):   reduce application --> value
    action 'IF' (noprec):   reduce application --> value
    action 'THEN' (noprec):   reduce application --> value
    action 'ELSE' (noprec):   reduce application --> value
    action 'ELIF' (noprec):   reduce application --> value
    action 'BEGIN' (noprec):   reduce application --> value
    action 'END' (noprec):   reduce application --> value
    action 'LET' (noprec):   reduce application --> value
    action 'REC' (noprec):   reduce application --> value
    action 'IN' (noprec):   reduce application --> value
    action 'MATCH' (noprec):   reduce application --> value
    action 'WITH' (noprec):   reduce application --> value
    action 'WHEN' (noprec):   reduce application --> value
    action 'POLICY' (noprec):   reduce application --> value
    action 'TRY' (noprec):   reduce application --> value
    action 'FINALLY' (noprec):   reduce application --> value
    action 'NULL' (noprec):   reduce application --> value
    action 'COLON' (noprec):   reduce application --> value
    action 'LBRACKET' (noprec):   reduce application --> value
    action 'RBRACKET' (noprec):   reduce application --> value
    action 'LBRACE' (noprec):   reduce application --> value
    action 'RBRACE' (noprec):   reduce application --> value
    action 'LPAREN' (noprec):   reduce application --> value
    action 'RPAREN' (noprec):   reduce application --> value
    action 'BOOLEAN' (noprec):   reduce application --> value
    action 'DOUBLE' (noprec):   reduce application --> value
    action 'INTEGER' (noprec):   reduce application --> value
    action 'STRING' (noprec):   reduce application --> value
    action 'IDENT' (noprec):   reduce application --> value
    action 'error' (noprec):   reduce application --> value
    action '#' (noprec):   reduce application --> value
    action '$$' (noprec):   reduce application --> value
  immediate action: <none>  gotos:state 24:  items:    function -> 'FUN' . term 'RARROW' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 25
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 25:  items:    function -> 'FUN' term . 'RARROW' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit right 9996):   shift 26
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 26:  items:    function -> 'FUN' term 'RARROW' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 27
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 27:  items:    function -> 'FUN' term 'RARROW' term . 
  actions:    action 'EOF' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'SEMI' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BAR_SEMI' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'COMMA' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BAR_COMMA' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'RARROW' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'EQUAL' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BAR' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'COLON_EQUAL' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BANG' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'SEND' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'RECEIVE' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'ON' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'REF' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'FUN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'IF' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'THEN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'ELSE' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'ELIF' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BEGIN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'END' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'LET' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'REC' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'IN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'MATCH' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'WITH' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'WHEN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'POLICY' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'TRY' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'FINALLY' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'NULL' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'COLON' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'LBRACKET' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'RBRACKET' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'LBRACE' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'RBRACE' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'LPAREN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'RPAREN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'BOOLEAN' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'DOUBLE' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'INTEGER' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'STRING' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'IDENT' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action 'error' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action '#' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
    action '$$' (explicit right 9996):   reduce function --> 'FUN' term 'RARROW' term
  immediate action:   reduce function --> 'FUN' term 'RARROW' term  gotos:state 28:  items:    if -> 'IF' . value 'THEN' value
    if -> 'IF' . value 'THEN' value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 29
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 29:  items:    if -> 'IF' value . 'THEN' value
    if -> 'IF' value . 'THEN' value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   shift 30
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 30:  items:    if -> 'IF' value 'THEN' . value
    if -> 'IF' value 'THEN' . value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 31
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 31:  items:    if -> 'IF' value 'THEN' value . 
    if -> 'IF' value 'THEN' value . ifElse
  actions:    action 'EOF' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'SEMI' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'BAR_SEMI' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'COMMA' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'BAR_COMMA' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'RARROW' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'EQUAL' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'BAR' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'COLON_EQUAL' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'BANG' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'SEND' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'RECEIVE' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'ON' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'REF' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'FUN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'IF' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'THEN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'ELSE' (explicit nonassoc 9998):   shift 38
    action 'ELIF' (explicit nonassoc 9998):   shift 33
    action 'BEGIN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'END' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'LET' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'REC' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'IN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'MATCH' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'WITH' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'WHEN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'POLICY' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'TRY' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'FINALLY' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'NULL' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'COLON' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'LBRACKET' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'RBRACKET' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'LBRACE' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'RBRACE' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'LPAREN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'RPAREN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'BOOLEAN' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'DOUBLE' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'INTEGER' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'STRING' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'IDENT' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action 'error' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action '#' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
    action '$$' (explicit nonassoc 9997):   reduce if --> 'IF' value 'THEN' value
  immediate action: <none>  gotos:    goto ifElse: 32
state 32:  items:    if -> 'IF' value 'THEN' value ifElse . 
  actions:    action 'EOF' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'SEMI' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BAR_SEMI' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'COMMA' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BAR_COMMA' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'RARROW' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'EQUAL' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BAR' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'COLON_EQUAL' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BANG' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'SEND' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'RECEIVE' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'ON' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'REF' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'FUN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'IF' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'THEN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'ELSE' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'ELIF' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BEGIN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'END' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'LET' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'REC' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'IN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'MATCH' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'WITH' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'WHEN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'POLICY' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'TRY' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'FINALLY' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'NULL' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'COLON' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'LBRACKET' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'RBRACKET' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'LBRACE' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'RBRACE' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'LPAREN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'RPAREN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'BOOLEAN' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'DOUBLE' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'INTEGER' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'STRING' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'IDENT' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action 'error' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action '#' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
    action '$$' (noprec):   reduce if --> 'IF' value 'THEN' value ifElse
  immediate action:   reduce if --> 'IF' value 'THEN' value ifElse  gotos:state 33:  items:    ifElse -> 'ELIF' . value 'THEN' value
    ifElse -> 'ELIF' . value 'THEN' value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 34
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 34:  items:    ifElse -> 'ELIF' value . 'THEN' value
    ifElse -> 'ELIF' value . 'THEN' value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   shift 35
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 35:  items:    ifElse -> 'ELIF' value 'THEN' . value
    ifElse -> 'ELIF' value 'THEN' . value ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 36
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 36:  items:    ifElse -> 'ELIF' value 'THEN' value . 
    ifElse -> 'ELIF' value 'THEN' value . ifElse
  actions:    action 'EOF' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'SEMI' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'BAR_SEMI' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'COMMA' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'BAR_COMMA' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'RARROW' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'EQUAL' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'BAR' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'COLON_EQUAL' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'BANG' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'SEND' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'RECEIVE' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'ON' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'REF' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'FUN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'IF' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'THEN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'ELSE' (explicit nonassoc 9998):   shift 38
    action 'ELIF' (explicit nonassoc 9998):   shift 33
    action 'BEGIN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'END' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'LET' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'REC' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'IN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'MATCH' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'WITH' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'WHEN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'POLICY' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'TRY' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'FINALLY' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'NULL' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'COLON' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'LBRACKET' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'RBRACKET' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'LBRACE' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'RBRACE' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'LPAREN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'RPAREN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'BOOLEAN' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'DOUBLE' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'INTEGER' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'STRING' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'IDENT' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action 'error' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action '#' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
    action '$$' (explicit nonassoc 9997):   reduce ifElse --> 'ELIF' value 'THEN' value
  immediate action: <none>  gotos:    goto ifElse: 37
state 37:  items:    ifElse -> 'ELIF' value 'THEN' value ifElse . 
  actions:    action 'EOF' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'SEMI' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BAR_SEMI' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'COMMA' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BAR_COMMA' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'RARROW' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'EQUAL' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BAR' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'COLON_EQUAL' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BANG' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'SEND' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'RECEIVE' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'ON' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'REF' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'FUN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'IF' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'THEN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'ELSE' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'ELIF' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BEGIN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'END' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'LET' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'REC' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'IN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'MATCH' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'WITH' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'WHEN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'POLICY' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'TRY' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'FINALLY' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'NULL' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'COLON' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'LBRACKET' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'RBRACKET' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'LBRACE' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'RBRACE' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'LPAREN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'RPAREN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'BOOLEAN' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'DOUBLE' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'INTEGER' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'STRING' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'IDENT' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action 'error' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action '#' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
    action '$$' (noprec):   reduce ifElse --> 'ELIF' value 'THEN' value ifElse
  immediate action:   reduce ifElse --> 'ELIF' value 'THEN' value ifElse  gotos:state 38:  items:    ifElse -> 'ELSE' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 39
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 39:  items:    ifElse -> 'ELSE' value . 
  actions:    action 'EOF' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'SEMI' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BAR_SEMI' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'COMMA' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BAR_COMMA' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'RARROW' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'EQUAL' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BAR' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'COLON_EQUAL' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BANG' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'SEND' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'RECEIVE' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'ON' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'REF' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'FUN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'IF' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'THEN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'ELSE' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'ELIF' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BEGIN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'END' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'LET' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'REC' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'IN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'MATCH' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'WITH' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'WHEN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'POLICY' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'TRY' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'FINALLY' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'NULL' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'COLON' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'LBRACKET' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'RBRACKET' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'LBRACE' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'RBRACE' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'LPAREN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'RPAREN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'BOOLEAN' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'DOUBLE' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'INTEGER' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'STRING' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'IDENT' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action 'error' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action '#' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
    action '$$' (explicit nonassoc 9998):   reduce ifElse --> 'ELSE' value
  immediate action:   reduce ifElse --> 'ELSE' value  gotos:state 40:  items:    let -> 'LET' . value 'EQUAL' value 'IN' term 'END'
    let -> 'LET' . 'REC' value 'EQUAL' value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   shift 47
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 41
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 41:  items:    let -> 'LET' value . 'EQUAL' value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 42
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 42:  items:    let -> 'LET' value 'EQUAL' . value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 43
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 43:  items:    let -> 'LET' value 'EQUAL' value . 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   shift 44
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 44:  items:    let -> 'LET' value 'EQUAL' value 'IN' . term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 45
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 45:  items:    let -> 'LET' value 'EQUAL' value 'IN' term . 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 46
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 46:  items:    let -> 'LET' value 'EQUAL' value 'IN' term 'END' . 
  actions:    action 'EOF' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'SEMI' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BAR_SEMI' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'COMMA' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BAR_COMMA' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'RARROW' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'EQUAL' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BAR' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'COLON_EQUAL' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BANG' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'SEND' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'RECEIVE' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'ON' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'REF' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'FUN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'IF' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'THEN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'ELSE' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'ELIF' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BEGIN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'END' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'LET' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'REC' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'IN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'MATCH' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'WITH' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'WHEN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'POLICY' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'TRY' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'FINALLY' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'NULL' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'COLON' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'LBRACKET' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'RBRACKET' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'LBRACE' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'RBRACE' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'LPAREN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'RPAREN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'BOOLEAN' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'DOUBLE' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'INTEGER' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'STRING' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'IDENT' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action 'error' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action '#' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
    action '$$' (noprec):   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'
  immediate action:   reduce let --> 'LET' value 'EQUAL' value 'IN' term 'END'  gotos:state 47:  items:    let -> 'LET' 'REC' . value 'EQUAL' value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 48
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 48:  items:    let -> 'LET' 'REC' value . 'EQUAL' value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 49
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 49:  items:    let -> 'LET' 'REC' value 'EQUAL' . value 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 50
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 50:  items:    let -> 'LET' 'REC' value 'EQUAL' value . 'IN' term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   shift 51
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 51:  items:    let -> 'LET' 'REC' value 'EQUAL' value 'IN' . term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 52
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 52:  items:    let -> 'LET' 'REC' value 'EQUAL' value 'IN' term . 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 53
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 53:  items:    let -> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END' . 
  actions:    action 'EOF' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'SEMI' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BAR_SEMI' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'COMMA' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BAR_COMMA' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'RARROW' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'EQUAL' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BAR' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'COLON_EQUAL' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BANG' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'SEND' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'RECEIVE' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'ON' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'REF' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'FUN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'IF' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'THEN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'ELSE' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'ELIF' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BEGIN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'END' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'LET' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'REC' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'IN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'MATCH' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'WITH' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'WHEN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'POLICY' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'TRY' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'FINALLY' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'NULL' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'COLON' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'LBRACKET' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'RBRACKET' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'LBRACE' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'RBRACE' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'LPAREN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'RPAREN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'BOOLEAN' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'DOUBLE' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'INTEGER' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'STRING' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'IDENT' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action 'error' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action '#' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
    action '$$' (noprec):   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'
  immediate action:   reduce let --> 'LET' 'REC' value 'EQUAL' value 'IN' term 'END'  gotos:state 54:  items:    rules -> rules . 'BAR' rule
    match -> 'MATCH' value 'WITH' rules . 
  actions:    action 'EOF' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'SEMI' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'COMMA' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'RARROW' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'EQUAL' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BANG' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'SEND' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'RECEIVE' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'ON' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'REF' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'FUN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'IF' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'THEN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'ELSE' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'ELIF' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BEGIN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'END' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'LET' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'REC' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'IN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'MATCH' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'WITH' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'WHEN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'POLICY' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'TRY' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'FINALLY' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'NULL' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'COLON' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'LBRACKET' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'RBRACKET' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'LBRACE' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'RBRACE' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'LPAREN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'RPAREN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'DOUBLE' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'INTEGER' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'STRING' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'IDENT' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action 'error' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action '#' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
    action '$$' (noprec):   reduce match --> 'MATCH' value 'WITH' rules
  immediate action: <none>  gotos:state 55:  items:    rules -> rules . 'BAR' rule
    match -> 'MATCH' value 'WITH' 'BAR' rules . 
  actions:    action 'EOF' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'SEMI' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BAR_SEMI' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'COMMA' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BAR_COMMA' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'RARROW' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'EQUAL' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BANG' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'SEND' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'RECEIVE' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'ON' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'REF' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'FUN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'IF' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'THEN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'ELSE' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'ELIF' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BEGIN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'END' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'LET' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'REC' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'IN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'MATCH' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'WITH' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'WHEN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'POLICY' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'TRY' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'FINALLY' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'NULL' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'COLON' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'LBRACKET' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'RBRACKET' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'LBRACE' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'RBRACE' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'LPAREN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'RPAREN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'BOOLEAN' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'DOUBLE' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'INTEGER' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'STRING' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'IDENT' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action 'error' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action '#' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
    action '$$' (noprec):   reduce match --> 'MATCH' value 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 56:  items:    rules -> rules . 'BAR' rule
    policy -> 'POLICY' value 'WITH' rules . 
  actions:    action 'EOF' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'SEMI' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'COMMA' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'RARROW' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'EQUAL' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BANG' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'SEND' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'RECEIVE' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'ON' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'REF' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'FUN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'IF' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'THEN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'ELSE' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'ELIF' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BEGIN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'END' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'LET' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'REC' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'IN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'MATCH' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'WITH' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'WHEN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'POLICY' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'TRY' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'FINALLY' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'NULL' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'COLON' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'LBRACKET' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'RBRACKET' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'LBRACE' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'RBRACE' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'LPAREN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'RPAREN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'DOUBLE' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'INTEGER' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'STRING' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'IDENT' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action 'error' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action '#' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
    action '$$' (noprec):   reduce policy --> 'POLICY' value 'WITH' rules
  immediate action: <none>  gotos:state 57:  items:    rules -> rules . 'BAR' rule
    policy -> 'POLICY' value 'WITH' 'BAR' rules . 
  actions:    action 'EOF' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'SEMI' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BAR_SEMI' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'COMMA' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BAR_COMMA' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'RARROW' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'EQUAL' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BANG' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'SEND' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'RECEIVE' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'ON' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'REF' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'FUN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'IF' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'THEN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'ELSE' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'ELIF' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BEGIN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'END' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'LET' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'REC' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'IN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'MATCH' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'WITH' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'WHEN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'POLICY' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'TRY' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'FINALLY' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'NULL' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'COLON' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'LBRACKET' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'RBRACKET' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'LBRACE' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'RBRACE' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'LPAREN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'RPAREN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'BOOLEAN' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'DOUBLE' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'INTEGER' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'STRING' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'IDENT' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action 'error' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action '#' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
    action '$$' (noprec):   reduce policy --> 'POLICY' value 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 58:  items:    rules -> rules . 'BAR' rule
    receive -> 'RECEIVE' 'ON' value 'WITH' rules . 
  actions:    action 'EOF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'RARROW' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BANG' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'SEND' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'RECEIVE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'ON' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'REF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'FUN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'IF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'THEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'ELSE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'ELIF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BEGIN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'END' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'LET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'REC' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'IN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'MATCH' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'WITH' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'WHEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'POLICY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'TRY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'FINALLY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'NULL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'COLON' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'LBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'RBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'LBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'RBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'LPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'RPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'DOUBLE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'INTEGER' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'STRING' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'IDENT' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action 'error' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action '#' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
    action '$$' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' rules
  immediate action: <none>  gotos:state 59:  items:    rules -> rules . 'BAR' rule
    receive -> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules . 
  actions:    action 'EOF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BAR_SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BAR_COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'RARROW' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BANG' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'SEND' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'RECEIVE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'ON' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'REF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'FUN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'IF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'THEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'ELSE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'ELIF' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BEGIN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'END' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'LET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'REC' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'IN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'MATCH' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'WITH' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'WHEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'POLICY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'TRY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'FINALLY' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'NULL' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'COLON' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'LBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'RBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'LBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'RBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'LPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'RPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'BOOLEAN' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'DOUBLE' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'INTEGER' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'STRING' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'IDENT' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action 'error' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action '#' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
    action '$$' (noprec):   reduce receive --> 'RECEIVE' 'ON' value 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 60:  items:    rules -> rules . 'BAR' rule
    tryWith -> 'TRY' value 'WITH' rules . 
  actions:    action 'EOF' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'SEMI' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'COMMA' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'RARROW' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'EQUAL' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BAR' (noprec):   shift 61
    action 'COLON_EQUAL' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BANG' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'SEND' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'RECEIVE' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'ON' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'REF' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'FUN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'IF' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'THEN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'ELSE' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'ELIF' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BEGIN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'END' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'LET' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'REC' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'IN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'MATCH' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'WITH' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'WHEN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'POLICY' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'TRY' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'FINALLY' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'NULL' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'COLON' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'LBRACKET' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'RBRACKET' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'LBRACE' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'RBRACE' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'LPAREN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'RPAREN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'DOUBLE' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'INTEGER' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'STRING' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'IDENT' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action 'error' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action '#' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
    action '$$' (noprec):   reduce tryWith --> 'TRY' value 'WITH' rules
  immediate action: <none>  gotos:state 61:  items:    rules -> rules 'BAR' . rule
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rule: 62
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 62:  items:    rules -> rules 'BAR' rule . 
  actions:    action 'EOF' (noprec):   reduce rules --> rules 'BAR' rule
    action 'SEMI' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BAR_SEMI' (noprec):   reduce rules --> rules 'BAR' rule
    action 'COMMA' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BAR_COMMA' (noprec):   reduce rules --> rules 'BAR' rule
    action 'RARROW' (noprec):   reduce rules --> rules 'BAR' rule
    action 'EQUAL' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BAR' (noprec):   reduce rules --> rules 'BAR' rule
    action 'COLON_EQUAL' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BANG' (noprec):   reduce rules --> rules 'BAR' rule
    action 'SEND' (noprec):   reduce rules --> rules 'BAR' rule
    action 'RECEIVE' (noprec):   reduce rules --> rules 'BAR' rule
    action 'ON' (noprec):   reduce rules --> rules 'BAR' rule
    action 'REF' (noprec):   reduce rules --> rules 'BAR' rule
    action 'FUN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'IF' (noprec):   reduce rules --> rules 'BAR' rule
    action 'THEN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'ELSE' (noprec):   reduce rules --> rules 'BAR' rule
    action 'ELIF' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BEGIN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'END' (noprec):   reduce rules --> rules 'BAR' rule
    action 'LET' (noprec):   reduce rules --> rules 'BAR' rule
    action 'REC' (noprec):   reduce rules --> rules 'BAR' rule
    action 'IN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'MATCH' (noprec):   reduce rules --> rules 'BAR' rule
    action 'WITH' (noprec):   reduce rules --> rules 'BAR' rule
    action 'WHEN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'POLICY' (noprec):   reduce rules --> rules 'BAR' rule
    action 'TRY' (noprec):   reduce rules --> rules 'BAR' rule
    action 'FINALLY' (noprec):   reduce rules --> rules 'BAR' rule
    action 'NULL' (noprec):   reduce rules --> rules 'BAR' rule
    action 'COLON' (noprec):   reduce rules --> rules 'BAR' rule
    action 'LBRACKET' (noprec):   reduce rules --> rules 'BAR' rule
    action 'RBRACKET' (noprec):   reduce rules --> rules 'BAR' rule
    action 'LBRACE' (noprec):   reduce rules --> rules 'BAR' rule
    action 'RBRACE' (noprec):   reduce rules --> rules 'BAR' rule
    action 'LPAREN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'RPAREN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'BOOLEAN' (noprec):   reduce rules --> rules 'BAR' rule
    action 'DOUBLE' (noprec):   reduce rules --> rules 'BAR' rule
    action 'INTEGER' (noprec):   reduce rules --> rules 'BAR' rule
    action 'STRING' (noprec):   reduce rules --> rules 'BAR' rule
    action 'IDENT' (noprec):   reduce rules --> rules 'BAR' rule
    action 'error' (noprec):   reduce rules --> rules 'BAR' rule
    action '#' (noprec):   reduce rules --> rules 'BAR' rule
    action '$$' (noprec):   reduce rules --> rules 'BAR' rule
  immediate action:   reduce rules --> rules 'BAR' rule  gotos:state 63:  items:    rules -> rule . 
  actions:    action 'EOF' (noprec):   reduce rules --> rule
    action 'SEMI' (noprec):   reduce rules --> rule
    action 'BAR_SEMI' (noprec):   reduce rules --> rule
    action 'COMMA' (noprec):   reduce rules --> rule
    action 'BAR_COMMA' (noprec):   reduce rules --> rule
    action 'RARROW' (noprec):   reduce rules --> rule
    action 'EQUAL' (noprec):   reduce rules --> rule
    action 'BAR' (noprec):   reduce rules --> rule
    action 'COLON_EQUAL' (noprec):   reduce rules --> rule
    action 'BANG' (noprec):   reduce rules --> rule
    action 'SEND' (noprec):   reduce rules --> rule
    action 'RECEIVE' (noprec):   reduce rules --> rule
    action 'ON' (noprec):   reduce rules --> rule
    action 'REF' (noprec):   reduce rules --> rule
    action 'FUN' (noprec):   reduce rules --> rule
    action 'IF' (noprec):   reduce rules --> rule
    action 'THEN' (noprec):   reduce rules --> rule
    action 'ELSE' (noprec):   reduce rules --> rule
    action 'ELIF' (noprec):   reduce rules --> rule
    action 'BEGIN' (noprec):   reduce rules --> rule
    action 'END' (noprec):   reduce rules --> rule
    action 'LET' (noprec):   reduce rules --> rule
    action 'REC' (noprec):   reduce rules --> rule
    action 'IN' (noprec):   reduce rules --> rule
    action 'MATCH' (noprec):   reduce rules --> rule
    action 'WITH' (noprec):   reduce rules --> rule
    action 'WHEN' (noprec):   reduce rules --> rule
    action 'POLICY' (noprec):   reduce rules --> rule
    action 'TRY' (noprec):   reduce rules --> rule
    action 'FINALLY' (noprec):   reduce rules --> rule
    action 'NULL' (noprec):   reduce rules --> rule
    action 'COLON' (noprec):   reduce rules --> rule
    action 'LBRACKET' (noprec):   reduce rules --> rule
    action 'RBRACKET' (noprec):   reduce rules --> rule
    action 'LBRACE' (noprec):   reduce rules --> rule
    action 'RBRACE' (noprec):   reduce rules --> rule
    action 'LPAREN' (noprec):   reduce rules --> rule
    action 'RPAREN' (noprec):   reduce rules --> rule
    action 'BOOLEAN' (noprec):   reduce rules --> rule
    action 'DOUBLE' (noprec):   reduce rules --> rule
    action 'INTEGER' (noprec):   reduce rules --> rule
    action 'STRING' (noprec):   reduce rules --> rule
    action 'IDENT' (noprec):   reduce rules --> rule
    action 'error' (noprec):   reduce rules --> rule
    action '#' (noprec):   reduce rules --> rule
    action '$$' (noprec):   reduce rules --> rule
  immediate action:   reduce rules --> rule  gotos:state 64:  items:    rule -> value . 'RARROW' value
    rule -> value . 'WHEN' value 'RARROW' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit right 9996):   shift 65
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   shift 67
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 65:  items:    rule -> value 'RARROW' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 66
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 66:  items:    rule -> value 'RARROW' value . 
  actions:    action 'EOF' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'SEMI' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BAR_SEMI' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'COMMA' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BAR_COMMA' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'RARROW' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'EQUAL' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BAR' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'COLON_EQUAL' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BANG' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'SEND' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'RECEIVE' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'ON' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'REF' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'FUN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'IF' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'THEN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'ELSE' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'ELIF' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BEGIN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'END' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'LET' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'REC' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'IN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'MATCH' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'WITH' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'WHEN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'POLICY' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'TRY' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'FINALLY' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'NULL' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'COLON' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'LBRACKET' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'RBRACKET' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'LBRACE' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'RBRACE' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'LPAREN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'RPAREN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'BOOLEAN' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'DOUBLE' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'INTEGER' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'STRING' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'IDENT' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action 'error' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action '#' (explicit right 9996):   reduce rule --> value 'RARROW' value
    action '$$' (explicit right 9996):   reduce rule --> value 'RARROW' value
  immediate action:   reduce rule --> value 'RARROW' value  gotos:state 67:  items:    rule -> value 'WHEN' . value 'RARROW' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 68
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 68:  items:    rule -> value 'WHEN' value . 'RARROW' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit right 9996):   shift 69
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 69:  items:    rule -> value 'WHEN' value 'RARROW' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 70
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 70:  items:    rule -> value 'WHEN' value 'RARROW' value . 
  actions:    action 'EOF' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'SEMI' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BAR_SEMI' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'COMMA' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BAR_COMMA' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'RARROW' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'EQUAL' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BAR' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'COLON_EQUAL' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BANG' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'SEND' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'RECEIVE' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'ON' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'REF' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'FUN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'IF' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'THEN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'ELSE' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'ELIF' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BEGIN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'END' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'LET' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'REC' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'IN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'MATCH' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'WITH' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'WHEN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'POLICY' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'TRY' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'FINALLY' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'NULL' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'COLON' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'LBRACKET' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'RBRACKET' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'LBRACE' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'RBRACE' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'LPAREN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'RPAREN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'BOOLEAN' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'DOUBLE' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'INTEGER' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'STRING' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'IDENT' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action 'error' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action '#' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
    action '$$' (explicit right 9996):   reduce rule --> value 'WHEN' value 'RARROW' value
  immediate action:   reduce rule --> value 'WHEN' value 'RARROW' value  gotos:state 71:  items:    match -> 'MATCH' . value 'WITH' rules
    match -> 'MATCH' . value 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 72
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 72:  items:    match -> 'MATCH' value . 'WITH' rules
    match -> 'MATCH' value . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 73
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 73:  items:    match -> 'MATCH' value 'WITH' . rules
    match -> 'MATCH' value 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   shift 74
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 54
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 74:  items:    match -> 'MATCH' value 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 55
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 75:  items:    policy -> 'POLICY' . value 'WITH' rules
    policy -> 'POLICY' . value 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 76
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 76:  items:    policy -> 'POLICY' value . 'WITH' rules
    policy -> 'POLICY' value . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 77
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 77:  items:    policy -> 'POLICY' value 'WITH' . rules
    policy -> 'POLICY' value 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   shift 78
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 56
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 78:  items:    policy -> 'POLICY' value 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 57
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 79:  items:    receive -> 'RECEIVE' . 'ON' value 'WITH' rules
    receive -> 'RECEIVE' . 'ON' value 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   shift 80
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 80:  items:    receive -> 'RECEIVE' 'ON' . value 'WITH' rules
    receive -> 'RECEIVE' 'ON' . value 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 81
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 81:  items:    receive -> 'RECEIVE' 'ON' value . 'WITH' rules
    receive -> 'RECEIVE' 'ON' value . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 82
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 82:  items:    receive -> 'RECEIVE' 'ON' value 'WITH' . rules
    receive -> 'RECEIVE' 'ON' value 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   shift 83
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 58
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 83:  items:    receive -> 'RECEIVE' 'ON' value 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 59
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 84:  items:    send -> 'SEND' . value 'ON' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 85
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 85:  items:    send -> 'SEND' value . 'ON' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   shift 86
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 86:  items:    send -> 'SEND' value 'ON' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 87
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 87:  items:    send -> 'SEND' value 'ON' value . 
  actions:    action 'EOF' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'SEMI' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BAR_SEMI' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'COMMA' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BAR_COMMA' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'RARROW' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'EQUAL' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BAR' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'COLON_EQUAL' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BANG' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'SEND' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'RECEIVE' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'ON' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'REF' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'FUN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'IF' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'THEN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'ELSE' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'ELIF' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BEGIN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'END' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'LET' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'REC' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'IN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'MATCH' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'WITH' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'WHEN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'POLICY' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'TRY' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'FINALLY' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'NULL' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'COLON' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'LBRACKET' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'RBRACKET' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'LBRACE' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'RBRACE' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'LPAREN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'RPAREN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'BOOLEAN' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'DOUBLE' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'INTEGER' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'STRING' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'IDENT' (noprec):   reduce send --> 'SEND' value 'ON' value
    action 'error' (noprec):   reduce send --> 'SEND' value 'ON' value
    action '#' (noprec):   reduce send --> 'SEND' value 'ON' value
    action '$$' (noprec):   reduce send --> 'SEND' value 'ON' value
  immediate action:   reduce send --> 'SEND' value 'ON' value  gotos:state 88:  items:    tryWith -> 'TRY' . value 'WITH' rules
    tryFinally -> 'TRY' . value 'FINALLY' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 89
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 89:  items:    tryWith -> 'TRY' value . 'WITH' rules
    tryFinally -> 'TRY' value . 'FINALLY' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 90
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   shift 91
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 90:  items:    tryWith -> 'TRY' value 'WITH' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto rules: 60
    goto rule: 63
    goto value: 64
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 91:  items:    tryFinally -> 'TRY' value 'FINALLY' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 92
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 92:  items:    tryFinally -> 'TRY' value 'FINALLY' value . 
  actions:    action 'EOF' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'SEMI' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BAR_SEMI' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'COMMA' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BAR_COMMA' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'RARROW' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'EQUAL' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BAR' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'COLON_EQUAL' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BANG' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'SEND' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'RECEIVE' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'ON' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'REF' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'FUN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'IF' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'THEN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'ELSE' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'ELIF' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BEGIN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'END' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'LET' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'REC' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'IN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'MATCH' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'WITH' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'WHEN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'POLICY' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'TRY' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'FINALLY' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'NULL' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'COLON' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'LBRACKET' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'RBRACKET' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'LBRACE' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'RBRACE' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'LPAREN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'RPAREN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'BOOLEAN' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'DOUBLE' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'INTEGER' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'STRING' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'IDENT' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action 'error' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action '#' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
    action '$$' (noprec):   reduce tryFinally --> 'TRY' value 'FINALLY' value
  immediate action:   reduce tryFinally --> 'TRY' value 'FINALLY' value  gotos:state 93:  items:    ref -> 'REF' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 94
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 94:  items:    ref -> 'REF' value . 
  actions:    action 'EOF' (explicit right 9996):   reduce ref --> 'REF' value
    action 'SEMI' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BAR_SEMI' (explicit right 9996):   reduce ref --> 'REF' value
    action 'COMMA' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BAR_COMMA' (explicit right 9996):   reduce ref --> 'REF' value
    action 'RARROW' (explicit right 9996):   reduce ref --> 'REF' value
    action 'EQUAL' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BAR' (explicit right 9996):   reduce ref --> 'REF' value
    action 'COLON_EQUAL' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BANG' (explicit right 9996):   reduce ref --> 'REF' value
    action 'SEND' (explicit right 9996):   reduce ref --> 'REF' value
    action 'RECEIVE' (explicit right 9996):   reduce ref --> 'REF' value
    action 'ON' (explicit right 9996):   reduce ref --> 'REF' value
    action 'REF' (explicit right 9996):   reduce ref --> 'REF' value
    action 'FUN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'IF' (explicit right 9996):   reduce ref --> 'REF' value
    action 'THEN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'ELSE' (explicit right 9996):   reduce ref --> 'REF' value
    action 'ELIF' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BEGIN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'END' (explicit right 9996):   reduce ref --> 'REF' value
    action 'LET' (explicit right 9996):   reduce ref --> 'REF' value
    action 'REC' (explicit right 9996):   reduce ref --> 'REF' value
    action 'IN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'MATCH' (explicit right 9996):   reduce ref --> 'REF' value
    action 'WITH' (explicit right 9996):   reduce ref --> 'REF' value
    action 'WHEN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'POLICY' (explicit right 9996):   reduce ref --> 'REF' value
    action 'TRY' (explicit right 9996):   reduce ref --> 'REF' value
    action 'FINALLY' (explicit right 9996):   reduce ref --> 'REF' value
    action 'NULL' (explicit right 9996):   reduce ref --> 'REF' value
    action 'COLON' (explicit right 9996):   reduce ref --> 'REF' value
    action 'LBRACKET' (explicit right 9996):   reduce ref --> 'REF' value
    action 'RBRACKET' (explicit right 9996):   reduce ref --> 'REF' value
    action 'LBRACE' (explicit right 9996):   reduce ref --> 'REF' value
    action 'RBRACE' (explicit right 9996):   reduce ref --> 'REF' value
    action 'LPAREN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'RPAREN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'BOOLEAN' (explicit right 9996):   reduce ref --> 'REF' value
    action 'DOUBLE' (explicit right 9996):   reduce ref --> 'REF' value
    action 'INTEGER' (explicit right 9996):   reduce ref --> 'REF' value
    action 'STRING' (explicit right 9996):   reduce ref --> 'REF' value
    action 'IDENT' (explicit right 9996):   reduce ref --> 'REF' value
    action 'error' (explicit right 9996):   reduce ref --> 'REF' value
    action '#' (explicit right 9996):   reduce ref --> 'REF' value
    action '$$' (explicit right 9996):   reduce ref --> 'REF' value
  immediate action:   reduce ref --> 'REF' value  gotos:state 95:  items:    dereference -> 'BANG' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 96
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 96:  items:    dereference -> 'BANG' value . 
  actions:    action 'EOF' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'SEMI' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BAR_SEMI' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'COMMA' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BAR_COMMA' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'RARROW' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'EQUAL' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BAR' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'COLON_EQUAL' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BANG' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'SEND' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'RECEIVE' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'ON' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'REF' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'FUN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'IF' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'THEN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'ELSE' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'ELIF' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BEGIN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'END' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'LET' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'REC' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'IN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'MATCH' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'WITH' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'WHEN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'POLICY' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'TRY' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'FINALLY' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'NULL' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'COLON' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'LBRACKET' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'RBRACKET' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'LBRACE' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'RBRACE' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'LPAREN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'RPAREN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'BOOLEAN' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'DOUBLE' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'INTEGER' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'STRING' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'IDENT' (explicit right 9996):   reduce dereference --> 'BANG' value
    action 'error' (explicit right 9996):   reduce dereference --> 'BANG' value
    action '#' (explicit right 9996):   reduce dereference --> 'BANG' value
    action '$$' (explicit right 9996):   reduce dereference --> 'BANG' value
  immediate action:   reduce dereference --> 'BANG' value  gotos:state 97:  items:    assignment -> value 'COLON_EQUAL' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 98
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 98:  items:    assignment -> value 'COLON_EQUAL' value . 
  actions:    action 'EOF' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'SEMI' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BAR_SEMI' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'COMMA' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BAR_COMMA' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'RARROW' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'EQUAL' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BAR' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'COLON_EQUAL' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BANG' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'SEND' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'RECEIVE' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'ON' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'REF' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'FUN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'IF' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'THEN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'ELSE' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'ELIF' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BEGIN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'END' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'LET' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'REC' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'IN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'MATCH' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'WITH' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'WHEN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'POLICY' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'TRY' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'FINALLY' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'NULL' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'COLON' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'LBRACKET' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'RBRACKET' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'LBRACE' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'RBRACE' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'LPAREN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'RPAREN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'BOOLEAN' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'DOUBLE' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'INTEGER' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'STRING' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'IDENT' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action 'error' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action '#' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
    action '$$' (explicit nonassoc 9999):   reduce assignment --> value 'COLON_EQUAL' value
  immediate action:   reduce assignment --> value 'COLON_EQUAL' value  gotos:state 99:  items:    value -> lookup . 
  actions:    action 'EOF' (noprec):   reduce value --> lookup
    action 'SEMI' (noprec):   reduce value --> lookup
    action 'BAR_SEMI' (noprec):   reduce value --> lookup
    action 'COMMA' (noprec):   reduce value --> lookup
    action 'BAR_COMMA' (noprec):   reduce value --> lookup
    action 'RARROW' (noprec):   reduce value --> lookup
    action 'EQUAL' (noprec):   reduce value --> lookup
    action 'BAR' (noprec):   reduce value --> lookup
    action 'COLON_EQUAL' (noprec):   reduce value --> lookup
    action 'BANG' (noprec):   reduce value --> lookup
    action 'SEND' (noprec):   reduce value --> lookup
    action 'RECEIVE' (noprec):   reduce value --> lookup
    action 'ON' (noprec):   reduce value --> lookup
    action 'REF' (noprec):   reduce value --> lookup
    action 'FUN' (noprec):   reduce value --> lookup
    action 'IF' (noprec):   reduce value --> lookup
    action 'THEN' (noprec):   reduce value --> lookup
    action 'ELSE' (noprec):   reduce value --> lookup
    action 'ELIF' (noprec):   reduce value --> lookup
    action 'BEGIN' (noprec):   reduce value --> lookup
    action 'END' (noprec):   reduce value --> lookup
    action 'LET' (noprec):   reduce value --> lookup
    action 'REC' (noprec):   reduce value --> lookup
    action 'IN' (noprec):   reduce value --> lookup
    action 'MATCH' (noprec):   reduce value --> lookup
    action 'WITH' (noprec):   reduce value --> lookup
    action 'WHEN' (noprec):   reduce value --> lookup
    action 'POLICY' (noprec):   reduce value --> lookup
    action 'TRY' (noprec):   reduce value --> lookup
    action 'FINALLY' (noprec):   reduce value --> lookup
    action 'NULL' (noprec):   reduce value --> lookup
    action 'COLON' (noprec):   reduce value --> lookup
    action 'LBRACKET' (noprec):   reduce value --> lookup
    action 'RBRACKET' (noprec):   reduce value --> lookup
    action 'LBRACE' (noprec):   reduce value --> lookup
    action 'RBRACE' (noprec):   reduce value --> lookup
    action 'LPAREN' (noprec):   reduce value --> lookup
    action 'RPAREN' (noprec):   reduce value --> lookup
    action 'BOOLEAN' (noprec):   reduce value --> lookup
    action 'DOUBLE' (noprec):   reduce value --> lookup
    action 'INTEGER' (noprec):   reduce value --> lookup
    action 'STRING' (noprec):   reduce value --> lookup
    action 'IDENT' (noprec):   reduce value --> lookup
    action 'error' (noprec):   reduce value --> lookup
    action '#' (noprec):   reduce value --> lookup
    action '$$' (noprec):   reduce value --> lookup
  immediate action:   reduce value --> lookup  gotos:state 100:  items:    value -> map . 
  actions:    action 'EOF' (noprec):   reduce value --> map
    action 'SEMI' (noprec):   reduce value --> map
    action 'BAR_SEMI' (noprec):   reduce value --> map
    action 'COMMA' (noprec):   reduce value --> map
    action 'BAR_COMMA' (noprec):   reduce value --> map
    action 'RARROW' (noprec):   reduce value --> map
    action 'EQUAL' (noprec):   reduce value --> map
    action 'BAR' (noprec):   reduce value --> map
    action 'COLON_EQUAL' (noprec):   reduce value --> map
    action 'BANG' (noprec):   reduce value --> map
    action 'SEND' (noprec):   reduce value --> map
    action 'RECEIVE' (noprec):   reduce value --> map
    action 'ON' (noprec):   reduce value --> map
    action 'REF' (noprec):   reduce value --> map
    action 'FUN' (noprec):   reduce value --> map
    action 'IF' (noprec):   reduce value --> map
    action 'THEN' (noprec):   reduce value --> map
    action 'ELSE' (noprec):   reduce value --> map
    action 'ELIF' (noprec):   reduce value --> map
    action 'BEGIN' (noprec):   reduce value --> map
    action 'END' (noprec):   reduce value --> map
    action 'LET' (noprec):   reduce value --> map
    action 'REC' (noprec):   reduce value --> map
    action 'IN' (noprec):   reduce value --> map
    action 'MATCH' (noprec):   reduce value --> map
    action 'WITH' (noprec):   reduce value --> map
    action 'WHEN' (noprec):   reduce value --> map
    action 'POLICY' (noprec):   reduce value --> map
    action 'TRY' (noprec):   reduce value --> map
    action 'FINALLY' (noprec):   reduce value --> map
    action 'NULL' (noprec):   reduce value --> map
    action 'COLON' (noprec):   reduce value --> map
    action 'LBRACKET' (noprec):   reduce value --> map
    action 'RBRACKET' (noprec):   reduce value --> map
    action 'LBRACE' (noprec):   reduce value --> map
    action 'RBRACE' (noprec):   reduce value --> map
    action 'LPAREN' (noprec):   reduce value --> map
    action 'RPAREN' (noprec):   reduce value --> map
    action 'BOOLEAN' (noprec):   reduce value --> map
    action 'DOUBLE' (noprec):   reduce value --> map
    action 'INTEGER' (noprec):   reduce value --> map
    action 'STRING' (noprec):   reduce value --> map
    action 'IDENT' (noprec):   reduce value --> map
    action 'error' (noprec):   reduce value --> map
    action '#' (noprec):   reduce value --> map
    action '$$' (noprec):   reduce value --> map
  immediate action:   reduce value --> map  gotos:state 101:  items:    value -> list . 
  actions:    action 'EOF' (noprec):   reduce value --> list
    action 'SEMI' (noprec):   reduce value --> list
    action 'BAR_SEMI' (noprec):   reduce value --> list
    action 'COMMA' (noprec):   reduce value --> list
    action 'BAR_COMMA' (noprec):   reduce value --> list
    action 'RARROW' (noprec):   reduce value --> list
    action 'EQUAL' (noprec):   reduce value --> list
    action 'BAR' (noprec):   reduce value --> list
    action 'COLON_EQUAL' (noprec):   reduce value --> list
    action 'BANG' (noprec):   reduce value --> list
    action 'SEND' (noprec):   reduce value --> list
    action 'RECEIVE' (noprec):   reduce value --> list
    action 'ON' (noprec):   reduce value --> list
    action 'REF' (noprec):   reduce value --> list
    action 'FUN' (noprec):   reduce value --> list
    action 'IF' (noprec):   reduce value --> list
    action 'THEN' (noprec):   reduce value --> list
    action 'ELSE' (noprec):   reduce value --> list
    action 'ELIF' (noprec):   reduce value --> list
    action 'BEGIN' (noprec):   reduce value --> list
    action 'END' (noprec):   reduce value --> list
    action 'LET' (noprec):   reduce value --> list
    action 'REC' (noprec):   reduce value --> list
    action 'IN' (noprec):   reduce value --> list
    action 'MATCH' (noprec):   reduce value --> list
    action 'WITH' (noprec):   reduce value --> list
    action 'WHEN' (noprec):   reduce value --> list
    action 'POLICY' (noprec):   reduce value --> list
    action 'TRY' (noprec):   reduce value --> list
    action 'FINALLY' (noprec):   reduce value --> list
    action 'NULL' (noprec):   reduce value --> list
    action 'COLON' (noprec):   reduce value --> list
    action 'LBRACKET' (noprec):   reduce value --> list
    action 'RBRACKET' (noprec):   reduce value --> list
    action 'LBRACE' (noprec):   reduce value --> list
    action 'RBRACE' (noprec):   reduce value --> list
    action 'LPAREN' (noprec):   reduce value --> list
    action 'RPAREN' (noprec):   reduce value --> list
    action 'BOOLEAN' (noprec):   reduce value --> list
    action 'DOUBLE' (noprec):   reduce value --> list
    action 'INTEGER' (noprec):   reduce value --> list
    action 'STRING' (noprec):   reduce value --> list
    action 'IDENT' (noprec):   reduce value --> list
    action 'error' (noprec):   reduce value --> list
    action '#' (noprec):   reduce value --> list
    action '$$' (noprec):   reduce value --> list
  immediate action:   reduce value --> list  gotos:state 102:  items:    value -> constant . 
  actions:    action 'EOF' (noprec):   reduce value --> constant
    action 'SEMI' (noprec):   reduce value --> constant
    action 'BAR_SEMI' (noprec):   reduce value --> constant
    action 'COMMA' (noprec):   reduce value --> constant
    action 'BAR_COMMA' (noprec):   reduce value --> constant
    action 'RARROW' (noprec):   reduce value --> constant
    action 'EQUAL' (noprec):   reduce value --> constant
    action 'BAR' (noprec):   reduce value --> constant
    action 'COLON_EQUAL' (noprec):   reduce value --> constant
    action 'BANG' (noprec):   reduce value --> constant
    action 'SEND' (noprec):   reduce value --> constant
    action 'RECEIVE' (noprec):   reduce value --> constant
    action 'ON' (noprec):   reduce value --> constant
    action 'REF' (noprec):   reduce value --> constant
    action 'FUN' (noprec):   reduce value --> constant
    action 'IF' (noprec):   reduce value --> constant
    action 'THEN' (noprec):   reduce value --> constant
    action 'ELSE' (noprec):   reduce value --> constant
    action 'ELIF' (noprec):   reduce value --> constant
    action 'BEGIN' (noprec):   reduce value --> constant
    action 'END' (noprec):   reduce value --> constant
    action 'LET' (noprec):   reduce value --> constant
    action 'REC' (noprec):   reduce value --> constant
    action 'IN' (noprec):   reduce value --> constant
    action 'MATCH' (noprec):   reduce value --> constant
    action 'WITH' (noprec):   reduce value --> constant
    action 'WHEN' (noprec):   reduce value --> constant
    action 'POLICY' (noprec):   reduce value --> constant
    action 'TRY' (noprec):   reduce value --> constant
    action 'FINALLY' (noprec):   reduce value --> constant
    action 'NULL' (noprec):   reduce value --> constant
    action 'COLON' (noprec):   reduce value --> constant
    action 'LBRACKET' (noprec):   reduce value --> constant
    action 'RBRACKET' (noprec):   reduce value --> constant
    action 'LBRACE' (noprec):   reduce value --> constant
    action 'RBRACE' (noprec):   reduce value --> constant
    action 'LPAREN' (noprec):   reduce value --> constant
    action 'RPAREN' (noprec):   reduce value --> constant
    action 'BOOLEAN' (noprec):   reduce value --> constant
    action 'DOUBLE' (noprec):   reduce value --> constant
    action 'INTEGER' (noprec):   reduce value --> constant
    action 'STRING' (noprec):   reduce value --> constant
    action 'IDENT' (noprec):   reduce value --> constant
    action 'error' (noprec):   reduce value --> constant
    action '#' (noprec):   reduce value --> constant
    action '$$' (noprec):   reduce value --> constant
  immediate action:   reduce value --> constant  gotos:state 103:  items:    value -> block . 
  actions:    action 'EOF' (noprec):   reduce value --> block
    action 'SEMI' (noprec):   reduce value --> block
    action 'BAR_SEMI' (noprec):   reduce value --> block
    action 'COMMA' (noprec):   reduce value --> block
    action 'BAR_COMMA' (noprec):   reduce value --> block
    action 'RARROW' (noprec):   reduce value --> block
    action 'EQUAL' (noprec):   reduce value --> block
    action 'BAR' (noprec):   reduce value --> block
    action 'COLON_EQUAL' (noprec):   reduce value --> block
    action 'BANG' (noprec):   reduce value --> block
    action 'SEND' (noprec):   reduce value --> block
    action 'RECEIVE' (noprec):   reduce value --> block
    action 'ON' (noprec):   reduce value --> block
    action 'REF' (noprec):   reduce value --> block
    action 'FUN' (noprec):   reduce value --> block
    action 'IF' (noprec):   reduce value --> block
    action 'THEN' (noprec):   reduce value --> block
    action 'ELSE' (noprec):   reduce value --> block
    action 'ELIF' (noprec):   reduce value --> block
    action 'BEGIN' (noprec):   reduce value --> block
    action 'END' (noprec):   reduce value --> block
    action 'LET' (noprec):   reduce value --> block
    action 'REC' (noprec):   reduce value --> block
    action 'IN' (noprec):   reduce value --> block
    action 'MATCH' (noprec):   reduce value --> block
    action 'WITH' (noprec):   reduce value --> block
    action 'WHEN' (noprec):   reduce value --> block
    action 'POLICY' (noprec):   reduce value --> block
    action 'TRY' (noprec):   reduce value --> block
    action 'FINALLY' (noprec):   reduce value --> block
    action 'NULL' (noprec):   reduce value --> block
    action 'COLON' (noprec):   reduce value --> block
    action 'LBRACKET' (noprec):   reduce value --> block
    action 'RBRACKET' (noprec):   reduce value --> block
    action 'LBRACE' (noprec):   reduce value --> block
    action 'RBRACE' (noprec):   reduce value --> block
    action 'LPAREN' (noprec):   reduce value --> block
    action 'RPAREN' (noprec):   reduce value --> block
    action 'BOOLEAN' (noprec):   reduce value --> block
    action 'DOUBLE' (noprec):   reduce value --> block
    action 'INTEGER' (noprec):   reduce value --> block
    action 'STRING' (noprec):   reduce value --> block
    action 'IDENT' (noprec):   reduce value --> block
    action 'error' (noprec):   reduce value --> block
    action '#' (noprec):   reduce value --> block
    action '$$' (noprec):   reduce value --> block
  immediate action:   reduce value --> block  gotos:state 104:  items:    value -> paren . 
  actions:    action 'EOF' (noprec):   reduce value --> paren
    action 'SEMI' (noprec):   reduce value --> paren
    action 'BAR_SEMI' (noprec):   reduce value --> paren
    action 'COMMA' (noprec):   reduce value --> paren
    action 'BAR_COMMA' (noprec):   reduce value --> paren
    action 'RARROW' (noprec):   reduce value --> paren
    action 'EQUAL' (noprec):   reduce value --> paren
    action 'BAR' (noprec):   reduce value --> paren
    action 'COLON_EQUAL' (noprec):   reduce value --> paren
    action 'BANG' (noprec):   reduce value --> paren
    action 'SEND' (noprec):   reduce value --> paren
    action 'RECEIVE' (noprec):   reduce value --> paren
    action 'ON' (noprec):   reduce value --> paren
    action 'REF' (noprec):   reduce value --> paren
    action 'FUN' (noprec):   reduce value --> paren
    action 'IF' (noprec):   reduce value --> paren
    action 'THEN' (noprec):   reduce value --> paren
    action 'ELSE' (noprec):   reduce value --> paren
    action 'ELIF' (noprec):   reduce value --> paren
    action 'BEGIN' (noprec):   reduce value --> paren
    action 'END' (noprec):   reduce value --> paren
    action 'LET' (noprec):   reduce value --> paren
    action 'REC' (noprec):   reduce value --> paren
    action 'IN' (noprec):   reduce value --> paren
    action 'MATCH' (noprec):   reduce value --> paren
    action 'WITH' (noprec):   reduce value --> paren
    action 'WHEN' (noprec):   reduce value --> paren
    action 'POLICY' (noprec):   reduce value --> paren
    action 'TRY' (noprec):   reduce value --> paren
    action 'FINALLY' (noprec):   reduce value --> paren
    action 'NULL' (noprec):   reduce value --> paren
    action 'COLON' (noprec):   reduce value --> paren
    action 'LBRACKET' (noprec):   reduce value --> paren
    action 'RBRACKET' (noprec):   reduce value --> paren
    action 'LBRACE' (noprec):   reduce value --> paren
    action 'RBRACE' (noprec):   reduce value --> paren
    action 'LPAREN' (noprec):   reduce value --> paren
    action 'RPAREN' (noprec):   reduce value --> paren
    action 'BOOLEAN' (noprec):   reduce value --> paren
    action 'DOUBLE' (noprec):   reduce value --> paren
    action 'INTEGER' (noprec):   reduce value --> paren
    action 'STRING' (noprec):   reduce value --> paren
    action 'IDENT' (noprec):   reduce value --> paren
    action 'error' (noprec):   reduce value --> paren
    action '#' (noprec):   reduce value --> paren
    action '$$' (noprec):   reduce value --> paren
  immediate action:   reduce value --> paren  gotos:state 105:  items:    block -> 'BEGIN' . term 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 106
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 106:  items:    block -> 'BEGIN' term . 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 107
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 107:  items:    block -> 'BEGIN' term 'END' . 
  actions:    action 'EOF' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'SEMI' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BAR_SEMI' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'COMMA' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BAR_COMMA' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'RARROW' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'EQUAL' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BAR' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'COLON_EQUAL' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BANG' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'SEND' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'RECEIVE' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'ON' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'REF' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'FUN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'IF' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'THEN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'ELSE' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'ELIF' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BEGIN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'END' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'LET' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'REC' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'IN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'MATCH' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'WITH' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'WHEN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'POLICY' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'TRY' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'FINALLY' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'NULL' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'COLON' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'LBRACKET' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'RBRACKET' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'LBRACE' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'RBRACE' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'LPAREN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'RPAREN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'BOOLEAN' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'DOUBLE' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'INTEGER' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'STRING' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'IDENT' (noprec):   reduce block --> 'BEGIN' term 'END'
    action 'error' (noprec):   reduce block --> 'BEGIN' term 'END'
    action '#' (noprec):   reduce block --> 'BEGIN' term 'END'
    action '$$' (noprec):   reduce block --> 'BEGIN' term 'END'
  immediate action:   reduce block --> 'BEGIN' term 'END'  gotos:state 108:  items:    paren -> 'LPAREN' . term 'RPAREN'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (explicit right 9996):   shift 95
    action 'SEND' (noprec):   shift 84
    action 'RECEIVE' (noprec):   shift 79
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9996):   shift 93
    action 'FUN' (noprec):   shift 24
    action 'IF' (noprec):   shift 28
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 40
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 75
    action 'TRY' (noprec):   shift 88
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 109
    goto sequence: 4
    goto steps: 17
    goto application: 20
    goto function: 5
    goto if: 6
    goto let: 7
    goto match: 8
    goto policy: 9
    goto receive: 12
    goto send: 13
    goto tryWith: 10
    goto tryFinally: 11
    goto ref: 14
    goto dereference: 15
    goto assignment: 16
    goto value: 23
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 109:  items:    paren -> 'LPAREN' term . 'RPAREN'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 110
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 110:  items:    paren -> 'LPAREN' term 'RPAREN' . 
  actions:    action 'EOF' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'SEMI' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BAR_SEMI' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'COMMA' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BAR_COMMA' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'RARROW' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'EQUAL' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BAR' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'COLON_EQUAL' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BANG' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'SEND' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'RECEIVE' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'ON' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'REF' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'FUN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'IF' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'THEN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'ELSE' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'ELIF' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BEGIN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'END' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'LET' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'REC' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'IN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'MATCH' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'WITH' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'WHEN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'POLICY' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'TRY' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'FINALLY' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'NULL' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'COLON' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'LBRACKET' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'RBRACKET' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'LBRACE' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'RBRACE' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'LPAREN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'RPAREN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'BOOLEAN' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'DOUBLE' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'INTEGER' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'STRING' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'IDENT' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action 'error' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action '#' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
    action '$$' (noprec):   reduce paren --> 'LPAREN' term 'RPAREN'
  immediate action:   reduce paren --> 'LPAREN' term 'RPAREN'  gotos:state 111:  items:    sep_semi -> 'SEMI' . 
  actions:    action 'EOF' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'SEMI' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BAR_SEMI' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'COMMA' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BAR_COMMA' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'RARROW' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'EQUAL' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BAR' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'COLON_EQUAL' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BANG' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'SEND' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'RECEIVE' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'ON' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'REF' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'FUN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'IF' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'THEN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'ELSE' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'ELIF' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BEGIN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'END' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'LET' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'REC' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'IN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'MATCH' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'WITH' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'WHEN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'POLICY' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'TRY' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'FINALLY' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'NULL' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'COLON' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'LBRACKET' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'RBRACKET' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'LBRACE' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'RBRACE' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'LPAREN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'RPAREN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'BOOLEAN' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'DOUBLE' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'INTEGER' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'STRING' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'IDENT' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action 'error' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action '#' (explicit right 9996):   reduce sep_semi --> 'SEMI'
    action '$$' (explicit right 9996):   reduce sep_semi --> 'SEMI'
  immediate action:   reduce sep_semi --> 'SEMI'  gotos:state 112:  items:    sep_semi -> 'BAR_SEMI' . 
  actions:    action 'EOF' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'SEMI' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BAR_SEMI' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'COMMA' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BAR_COMMA' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'RARROW' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'EQUAL' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BAR' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'COLON_EQUAL' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BANG' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'SEND' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'RECEIVE' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'ON' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'REF' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'FUN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'IF' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'THEN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'ELSE' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'ELIF' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BEGIN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'END' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'LET' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'REC' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'IN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'MATCH' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'WITH' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'WHEN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'POLICY' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'TRY' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'FINALLY' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'NULL' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'COLON' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'LBRACKET' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'RBRACKET' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'LBRACE' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'RBRACE' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'LPAREN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'RPAREN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'BOOLEAN' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'DOUBLE' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'INTEGER' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'STRING' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'IDENT' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action 'error' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action '#' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
    action '$$' (explicit right 9996):   reduce sep_semi --> 'BAR_SEMI'
  immediate action:   reduce sep_semi --> 'BAR_SEMI'  gotos:state 113:  items:    sep_comma -> 'COMMA' . 
  actions:    action 'EOF' (noprec):   reduce sep_comma --> 'COMMA'
    action 'SEMI' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BAR_SEMI' (noprec):   reduce sep_comma --> 'COMMA'
    action 'COMMA' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BAR_COMMA' (noprec):   reduce sep_comma --> 'COMMA'
    action 'RARROW' (noprec):   reduce sep_comma --> 'COMMA'
    action 'EQUAL' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BAR' (noprec):   reduce sep_comma --> 'COMMA'
    action 'COLON_EQUAL' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BANG' (noprec):   reduce sep_comma --> 'COMMA'
    action 'SEND' (noprec):   reduce sep_comma --> 'COMMA'
    action 'RECEIVE' (noprec):   reduce sep_comma --> 'COMMA'
    action 'ON' (noprec):   reduce sep_comma --> 'COMMA'
    action 'REF' (noprec):   reduce sep_comma --> 'COMMA'
    action 'FUN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'IF' (noprec):   reduce sep_comma --> 'COMMA'
    action 'THEN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'ELSE' (noprec):   reduce sep_comma --> 'COMMA'
    action 'ELIF' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BEGIN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'END' (noprec):   reduce sep_comma --> 'COMMA'
    action 'LET' (noprec):   reduce sep_comma --> 'COMMA'
    action 'REC' (noprec):   reduce sep_comma --> 'COMMA'
    action 'IN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'MATCH' (noprec):   reduce sep_comma --> 'COMMA'
    action 'WITH' (noprec):   reduce sep_comma --> 'COMMA'
    action 'WHEN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'POLICY' (noprec):   reduce sep_comma --> 'COMMA'
    action 'TRY' (noprec):   reduce sep_comma --> 'COMMA'
    action 'FINALLY' (noprec):   reduce sep_comma --> 'COMMA'
    action 'NULL' (noprec):   reduce sep_comma --> 'COMMA'
    action 'COLON' (noprec):   reduce sep_comma --> 'COMMA'
    action 'LBRACKET' (noprec):   reduce sep_comma --> 'COMMA'
    action 'RBRACKET' (noprec):   reduce sep_comma --> 'COMMA'
    action 'LBRACE' (noprec):   reduce sep_comma --> 'COMMA'
    action 'RBRACE' (noprec):   reduce sep_comma --> 'COMMA'
    action 'LPAREN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'RPAREN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'BOOLEAN' (noprec):   reduce sep_comma --> 'COMMA'
    action 'DOUBLE' (noprec):   reduce sep_comma --> 'COMMA'
    action 'INTEGER' (noprec):   reduce sep_comma --> 'COMMA'
    action 'STRING' (noprec):   reduce sep_comma --> 'COMMA'
    action 'IDENT' (noprec):   reduce sep_comma --> 'COMMA'
    action 'error' (noprec):   reduce sep_comma --> 'COMMA'
    action '#' (noprec):   reduce sep_comma --> 'COMMA'
    action '$$' (noprec):   reduce sep_comma --> 'COMMA'
  immediate action:   reduce sep_comma --> 'COMMA'  gotos:state 114:  items:    sep_comma -> 'BAR_COMMA' . 
  actions:    action 'EOF' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'SEMI' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BAR_SEMI' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'COMMA' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BAR_COMMA' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'RARROW' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'EQUAL' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BAR' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'COLON_EQUAL' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BANG' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'SEND' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'RECEIVE' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'ON' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'REF' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'FUN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'IF' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'THEN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'ELSE' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'ELIF' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BEGIN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'END' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'LET' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'REC' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'IN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'MATCH' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'WITH' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'WHEN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'POLICY' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'TRY' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'FINALLY' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'NULL' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'COLON' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'LBRACKET' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'RBRACKET' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'LBRACE' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'RBRACE' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'LPAREN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'RPAREN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'BOOLEAN' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'DOUBLE' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'INTEGER' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'STRING' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'IDENT' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action 'error' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action '#' (noprec):   reduce sep_comma --> 'BAR_COMMA'
    action '$$' (noprec):   reduce sep_comma --> 'BAR_COMMA'
  immediate action:   reduce sep_comma --> 'BAR_COMMA'  gotos:state 115:  items:    lookup -> 'IDENT' . 
  actions:    action 'EOF' (noprec):   reduce lookup --> 'IDENT'
    action 'SEMI' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR_SEMI' (noprec):   reduce lookup --> 'IDENT'
    action 'COMMA' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR_COMMA' (noprec):   reduce lookup --> 'IDENT'
    action 'RARROW' (noprec):   reduce lookup --> 'IDENT'
    action 'EQUAL' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR' (noprec):   reduce lookup --> 'IDENT'
    action 'COLON_EQUAL' (noprec):   reduce lookup --> 'IDENT'
    action 'BANG' (noprec):   reduce lookup --> 'IDENT'
    action 'SEND' (noprec):   reduce lookup --> 'IDENT'
    action 'RECEIVE' (noprec):   reduce lookup --> 'IDENT'
    action 'ON' (noprec):   reduce lookup --> 'IDENT'
    action 'REF' (noprec):   reduce lookup --> 'IDENT'
    action 'FUN' (noprec):   reduce lookup --> 'IDENT'
    action 'IF' (noprec):   reduce lookup --> 'IDENT'
    action 'THEN' (noprec):   reduce lookup --> 'IDENT'
    action 'ELSE' (noprec):   reduce lookup --> 'IDENT'
    action 'ELIF' (noprec):   reduce lookup --> 'IDENT'
    action 'BEGIN' (noprec):   reduce lookup --> 'IDENT'
    action 'END' (noprec):   reduce lookup --> 'IDENT'
    action 'LET' (noprec):   reduce lookup --> 'IDENT'
    action 'REC' (noprec):   reduce lookup --> 'IDENT'
    action 'IN' (noprec):   reduce lookup --> 'IDENT'
    action 'MATCH' (noprec):   reduce lookup --> 'IDENT'
    action 'WITH' (noprec):   reduce lookup --> 'IDENT'
    action 'WHEN' (noprec):   reduce lookup --> 'IDENT'
    action 'POLICY' (noprec):   reduce lookup --> 'IDENT'
    action 'TRY' (noprec):   reduce lookup --> 'IDENT'
    action 'FINALLY' (noprec):   reduce lookup --> 'IDENT'
    action 'NULL' (noprec):   reduce lookup --> 'IDENT'
    action 'COLON' (noprec):   reduce lookup --> 'IDENT'
    action 'LBRACKET' (noprec):   reduce lookup --> 'IDENT'
    action 'RBRACKET' (noprec):   reduce lookup --> 'IDENT'
    action 'LBRACE' (noprec):   reduce lookup --> 'IDENT'
    action 'RBRACE' (noprec):   reduce lookup --> 'IDENT'
    action 'LPAREN' (noprec):   reduce lookup --> 'IDENT'
    action 'RPAREN' (noprec):   reduce lookup --> 'IDENT'
    action 'BOOLEAN' (noprec):   reduce lookup --> 'IDENT'
    action 'DOUBLE' (noprec):   reduce lookup --> 'IDENT'
    action 'INTEGER' (noprec):   reduce lookup --> 'IDENT'
    action 'STRING' (noprec):   reduce lookup --> 'IDENT'
    action 'IDENT' (noprec):   reduce lookup --> 'IDENT'
    action 'error' (noprec):   reduce lookup --> 'IDENT'
    action '#' (noprec):   reduce lookup --> 'IDENT'
    action '$$' (noprec):   reduce lookup --> 'IDENT'
  immediate action:   reduce lookup --> 'IDENT'  gotos:state 116:  items:    map -> 'LBRACE' . 'RBRACE'
    map -> 'LBRACE' . elements 'RBRACE'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 117
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   shift 123
    action 'IDENT' (noprec):   shift 126
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto elements: 118
    goto element: 122
state 117:  items:    map -> 'LBRACE' 'RBRACE' . 
  actions:    action 'EOF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'SEMI' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR_SEMI' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COMMA' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR_COMMA' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RARROW' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'EQUAL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COLON_EQUAL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BANG' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'SEND' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RECEIVE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ON' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'REF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'FUN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'THEN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ELSE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ELIF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BEGIN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'END' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'REC' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'MATCH' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'WITH' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'WHEN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'POLICY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'TRY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'FINALLY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'NULL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COLON' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LBRACKET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RBRACKET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LBRACE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RBRACE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LPAREN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RPAREN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BOOLEAN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'DOUBLE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'INTEGER' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'STRING' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IDENT' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'error' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action '#' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action '$$' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
  immediate action:   reduce map --> 'LBRACE' 'RBRACE'  gotos:state 118:  items:    map -> 'LBRACE' elements . 'RBRACE'
    elements -> elements . sep_comma element
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   shift 113
    action 'BAR_COMMA' (noprec):   shift 114
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 119
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto sep_comma: 120
state 119:  items:    map -> 'LBRACE' elements 'RBRACE' . 
  actions:    action 'EOF' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'SEMI' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BAR_SEMI' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'COMMA' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BAR_COMMA' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'RARROW' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'EQUAL' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BAR' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'COLON_EQUAL' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BANG' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'SEND' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'RECEIVE' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'ON' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'REF' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'FUN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'IF' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'THEN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'ELSE' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'ELIF' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BEGIN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'END' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'LET' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'REC' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'IN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'MATCH' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'WITH' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'WHEN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'POLICY' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'TRY' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'FINALLY' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'NULL' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'COLON' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'LBRACKET' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'RBRACKET' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'LBRACE' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'RBRACE' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'LPAREN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'RPAREN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'BOOLEAN' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'DOUBLE' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'INTEGER' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'STRING' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'IDENT' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action 'error' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action '#' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
    action '$$' (noprec):   reduce map --> 'LBRACE' elements 'RBRACE'
  immediate action:   reduce map --> 'LBRACE' elements 'RBRACE'  gotos:state 120:  items:    elements -> elements sep_comma . element
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   shift 123
    action 'IDENT' (noprec):   shift 126
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto element: 121
state 121:  items:    elements -> elements sep_comma element . 
  actions:    action 'EOF' (noprec):   reduce elements --> elements sep_comma element
    action 'SEMI' (noprec):   reduce elements --> elements sep_comma element
    action 'BAR_SEMI' (noprec):   reduce elements --> elements sep_comma element
    action 'COMMA' (noprec):   reduce elements --> elements sep_comma element
    action 'BAR_COMMA' (noprec):   reduce elements --> elements sep_comma element
    action 'RARROW' (noprec):   reduce elements --> elements sep_comma element
    action 'EQUAL' (noprec):   reduce elements --> elements sep_comma element
    action 'BAR' (noprec):   reduce elements --> elements sep_comma element
    action 'COLON_EQUAL' (noprec):   reduce elements --> elements sep_comma element
    action 'BANG' (noprec):   reduce elements --> elements sep_comma element
    action 'SEND' (noprec):   reduce elements --> elements sep_comma element
    action 'RECEIVE' (noprec):   reduce elements --> elements sep_comma element
    action 'ON' (noprec):   reduce elements --> elements sep_comma element
    action 'REF' (noprec):   reduce elements --> elements sep_comma element
    action 'FUN' (noprec):   reduce elements --> elements sep_comma element
    action 'IF' (noprec):   reduce elements --> elements sep_comma element
    action 'THEN' (noprec):   reduce elements --> elements sep_comma element
    action 'ELSE' (noprec):   reduce elements --> elements sep_comma element
    action 'ELIF' (noprec):   reduce elements --> elements sep_comma element
    action 'BEGIN' (noprec):   reduce elements --> elements sep_comma element
    action 'END' (noprec):   reduce elements --> elements sep_comma element
    action 'LET' (noprec):   reduce elements --> elements sep_comma element
    action 'REC' (noprec):   reduce elements --> elements sep_comma element
    action 'IN' (noprec):   reduce elements --> elements sep_comma element
    action 'MATCH' (noprec):   reduce elements --> elements sep_comma element
    action 'WITH' (noprec):   reduce elements --> elements sep_comma element
    action 'WHEN' (noprec):   reduce elements --> elements sep_comma element
    action 'POLICY' (noprec):   reduce elements --> elements sep_comma element
    action 'TRY' (noprec):   reduce elements --> elements sep_comma element
    action 'FINALLY' (noprec):   reduce elements --> elements sep_comma element
    action 'NULL' (noprec):   reduce elements --> elements sep_comma element
    action 'COLON' (noprec):   reduce elements --> elements sep_comma element
    action 'LBRACKET' (noprec):   reduce elements --> elements sep_comma element
    action 'RBRACKET' (noprec):   reduce elements --> elements sep_comma element
    action 'LBRACE' (noprec):   reduce elements --> elements sep_comma element
    action 'RBRACE' (noprec):   reduce elements --> elements sep_comma element
    action 'LPAREN' (noprec):   reduce elements --> elements sep_comma element
    action 'RPAREN' (noprec):   reduce elements --> elements sep_comma element
    action 'BOOLEAN' (noprec):   reduce elements --> elements sep_comma element
    action 'DOUBLE' (noprec):   reduce elements --> elements sep_comma element
    action 'INTEGER' (noprec):   reduce elements --> elements sep_comma element
    action 'STRING' (noprec):   reduce elements --> elements sep_comma element
    action 'IDENT' (noprec):   reduce elements --> elements sep_comma element
    action 'error' (noprec):   reduce elements --> elements sep_comma element
    action '#' (noprec):   reduce elements --> elements sep_comma element
    action '$$' (noprec):   reduce elements --> elements sep_comma element
  immediate action:   reduce elements --> elements sep_comma element  gotos:state 122:  items:    elements -> element . 
  actions:    action 'EOF' (noprec):   reduce elements --> element
    action 'SEMI' (noprec):   reduce elements --> element
    action 'BAR_SEMI' (noprec):   reduce elements --> element
    action 'COMMA' (noprec):   reduce elements --> element
    action 'BAR_COMMA' (noprec):   reduce elements --> element
    action 'RARROW' (noprec):   reduce elements --> element
    action 'EQUAL' (noprec):   reduce elements --> element
    action 'BAR' (noprec):   reduce elements --> element
    action 'COLON_EQUAL' (noprec):   reduce elements --> element
    action 'BANG' (noprec):   reduce elements --> element
    action 'SEND' (noprec):   reduce elements --> element
    action 'RECEIVE' (noprec):   reduce elements --> element
    action 'ON' (noprec):   reduce elements --> element
    action 'REF' (noprec):   reduce elements --> element
    action 'FUN' (noprec):   reduce elements --> element
    action 'IF' (noprec):   reduce elements --> element
    action 'THEN' (noprec):   reduce elements --> element
    action 'ELSE' (noprec):   reduce elements --> element
    action 'ELIF' (noprec):   reduce elements --> element
    action 'BEGIN' (noprec):   reduce elements --> element
    action 'END' (noprec):   reduce elements --> element
    action 'LET' (noprec):   reduce elements --> element
    action 'REC' (noprec):   reduce elements --> element
    action 'IN' (noprec):   reduce elements --> element
    action 'MATCH' (noprec):   reduce elements --> element
    action 'WITH' (noprec):   reduce elements --> element
    action 'WHEN' (noprec):   reduce elements --> element
    action 'POLICY' (noprec):   reduce elements --> element
    action 'TRY' (noprec):   reduce elements --> element
    action 'FINALLY' (noprec):   reduce elements --> element
    action 'NULL' (noprec):   reduce elements --> element
    action 'COLON' (noprec):   reduce elements --> element
    action 'LBRACKET' (noprec):   reduce elements --> element
    action 'RBRACKET' (noprec):   reduce elements --> element
    action 'LBRACE' (noprec):   reduce elements --> element
    action 'RBRACE' (noprec):   reduce elements --> element
    action 'LPAREN' (noprec):   reduce elements --> element
    action 'RPAREN' (noprec):   reduce elements --> element
    action 'BOOLEAN' (noprec):   reduce elements --> element
    action 'DOUBLE' (noprec):   reduce elements --> element
    action 'INTEGER' (noprec):   reduce elements --> element
    action 'STRING' (noprec):   reduce elements --> element
    action 'IDENT' (noprec):   reduce elements --> element
    action 'error' (noprec):   reduce elements --> element
    action '#' (noprec):   reduce elements --> element
    action '$$' (noprec):   reduce elements --> element
  immediate action:   reduce elements --> element  gotos:state 123:  items:    element -> 'STRING' . 'COLON' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   shift 124
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 124:  items:    element -> 'STRING' 'COLON' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 125
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 125:  items:    element -> 'STRING' 'COLON' value . 
  actions:    action 'EOF' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'SEMI' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BAR_SEMI' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'COMMA' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BAR_COMMA' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'RARROW' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'EQUAL' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BAR' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'COLON_EQUAL' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BANG' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'SEND' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'RECEIVE' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'ON' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'REF' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'FUN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'IF' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'THEN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'ELSE' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'ELIF' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BEGIN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'END' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'LET' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'REC' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'IN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'MATCH' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'WITH' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'WHEN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'POLICY' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'TRY' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'FINALLY' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'NULL' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'COLON' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'LBRACKET' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'RBRACKET' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'LBRACE' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'RBRACE' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'LPAREN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'RPAREN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'BOOLEAN' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'DOUBLE' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'INTEGER' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'STRING' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'IDENT' (noprec):   reduce element --> 'STRING' 'COLON' value
    action 'error' (noprec):   reduce element --> 'STRING' 'COLON' value
    action '#' (noprec):   reduce element --> 'STRING' 'COLON' value
    action '$$' (noprec):   reduce element --> 'STRING' 'COLON' value
  immediate action:   reduce element --> 'STRING' 'COLON' value  gotos:state 126:  items:    element -> 'IDENT' . 'COLON' value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   shift 127
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 127:  items:    element -> 'IDENT' 'COLON' . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 128
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 128:  items:    element -> 'IDENT' 'COLON' value . 
  actions:    action 'EOF' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'SEMI' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BAR_SEMI' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'COMMA' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BAR_COMMA' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'RARROW' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'EQUAL' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BAR' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'COLON_EQUAL' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BANG' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'SEND' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'RECEIVE' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'ON' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'REF' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'FUN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'IF' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'THEN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'ELSE' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'ELIF' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BEGIN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'END' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'LET' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'REC' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'IN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'MATCH' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'WITH' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'WHEN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'POLICY' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'TRY' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'FINALLY' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'NULL' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'COLON' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'LBRACKET' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'RBRACKET' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'LBRACE' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'RBRACE' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'LPAREN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'RPAREN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'BOOLEAN' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'DOUBLE' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'INTEGER' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'STRING' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'IDENT' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action 'error' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action '#' (noprec):   reduce element --> 'IDENT' 'COLON' value
    action '$$' (noprec):   reduce element --> 'IDENT' 'COLON' value
  immediate action:   reduce element --> 'IDENT' 'COLON' value  gotos:state 129:  items:    list -> 'LBRACKET' . 'RBRACKET'
    list -> 'LBRACKET' . items 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   shift 130
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 135
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto items: 131
    goto constant: 102
state 130:  items:    list -> 'LBRACKET' 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'SEMI' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR_SEMI' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COMMA' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR_COMMA' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RARROW' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'EQUAL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COLON_EQUAL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BANG' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'SEND' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RECEIVE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ON' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'REF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'FUN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'THEN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ELSE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ELIF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BEGIN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'END' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'REC' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'MATCH' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'WITH' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'WHEN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'POLICY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'TRY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'FINALLY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'NULL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COLON' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LBRACE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RBRACE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LPAREN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RPAREN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BOOLEAN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'DOUBLE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'INTEGER' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'STRING' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IDENT' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'error' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action '#' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action '$$' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
  immediate action:   reduce list --> 'LBRACKET' 'RBRACKET'  gotos:state 131:  items:    list -> 'LBRACKET' items . 'RBRACKET'
    items -> items . sep_comma value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   shift 113
    action 'BAR_COMMA' (noprec):   shift 114
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 132
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto sep_comma: 133
state 132:  items:    list -> 'LBRACKET' items 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'SEMI' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BAR_SEMI' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'COMMA' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BAR_COMMA' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'RARROW' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'EQUAL' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BAR' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'COLON_EQUAL' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BANG' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'SEND' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'RECEIVE' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'ON' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'REF' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'FUN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'IF' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'THEN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'ELSE' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'ELIF' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BEGIN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'END' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'LET' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'REC' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'IN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'MATCH' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'WITH' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'WHEN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'POLICY' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'TRY' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'FINALLY' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'NULL' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'COLON' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'LBRACE' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'RBRACE' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'LPAREN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'RPAREN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'BOOLEAN' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'DOUBLE' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'INTEGER' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'STRING' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'IDENT' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action 'error' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action '#' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
    action '$$' (noprec):   reduce list --> 'LBRACKET' items 'RBRACKET'
  immediate action:   reduce list --> 'LBRACKET' items 'RBRACKET'  gotos:state 133:  items:    items -> items sep_comma . value
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'BAR' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'BANG' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 105
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 140
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 129
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 116
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 108
    action 'RPAREN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 139
    action 'DOUBLE' (noprec):   shift 138
    action 'INTEGER' (noprec):   shift 137
    action 'STRING' (noprec):   shift 136
    action 'IDENT' (noprec):   shift 115
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value: 134
    goto block: 103
    goto paren: 104
    goto lookup: 99
    goto map: 100
    goto list: 101
    goto constant: 102
state 134:  items:    items -> items sep_comma value . 
  actions:    action 'EOF' (noprec):   reduce items --> items sep_comma value
    action 'SEMI' (noprec):   reduce items --> items sep_comma value
    action 'BAR_SEMI' (noprec):   reduce items --> items sep_comma value
    action 'COMMA' (noprec):   reduce items --> items sep_comma value
    action 'BAR_COMMA' (noprec):   reduce items --> items sep_comma value
    action 'RARROW' (noprec):   reduce items --> items sep_comma value
    action 'EQUAL' (noprec):   reduce items --> items sep_comma value
    action 'BAR' (noprec):   reduce items --> items sep_comma value
    action 'COLON_EQUAL' (noprec):   reduce items --> items sep_comma value
    action 'BANG' (noprec):   reduce items --> items sep_comma value
    action 'SEND' (noprec):   reduce items --> items sep_comma value
    action 'RECEIVE' (noprec):   reduce items --> items sep_comma value
    action 'ON' (noprec):   reduce items --> items sep_comma value
    action 'REF' (noprec):   reduce items --> items sep_comma value
    action 'FUN' (noprec):   reduce items --> items sep_comma value
    action 'IF' (noprec):   reduce items --> items sep_comma value
    action 'THEN' (noprec):   reduce items --> items sep_comma value
    action 'ELSE' (noprec):   reduce items --> items sep_comma value
    action 'ELIF' (noprec):   reduce items --> items sep_comma value
    action 'BEGIN' (noprec):   reduce items --> items sep_comma value
    action 'END' (noprec):   reduce items --> items sep_comma value
    action 'LET' (noprec):   reduce items --> items sep_comma value
    action 'REC' (noprec):   reduce items --> items sep_comma value
    action 'IN' (noprec):   reduce items --> items sep_comma value
    action 'MATCH' (noprec):   reduce items --> items sep_comma value
    action 'WITH' (noprec):   reduce items --> items sep_comma value
    action 'WHEN' (noprec):   reduce items --> items sep_comma value
    action 'POLICY' (noprec):   reduce items --> items sep_comma value
    action 'TRY' (noprec):   reduce items --> items sep_comma value
    action 'FINALLY' (noprec):   reduce items --> items sep_comma value
    action 'NULL' (noprec):   reduce items --> items sep_comma value
    action 'COLON' (noprec):   reduce items --> items sep_comma value
    action 'LBRACKET' (noprec):   reduce items --> items sep_comma value
    action 'RBRACKET' (noprec):   reduce items --> items sep_comma value
    action 'LBRACE' (noprec):   reduce items --> items sep_comma value
    action 'RBRACE' (noprec):   reduce items --> items sep_comma value
    action 'LPAREN' (noprec):   reduce items --> items sep_comma value
    action 'RPAREN' (noprec):   reduce items --> items sep_comma value
    action 'BOOLEAN' (noprec):   reduce items --> items sep_comma value
    action 'DOUBLE' (noprec):   reduce items --> items sep_comma value
    action 'INTEGER' (noprec):   reduce items --> items sep_comma value
    action 'STRING' (noprec):   reduce items --> items sep_comma value
    action 'IDENT' (noprec):   reduce items --> items sep_comma value
    action 'error' (noprec):   reduce items --> items sep_comma value
    action '#' (noprec):   reduce items --> items sep_comma value
    action '$$' (noprec):   reduce items --> items sep_comma value
  immediate action:   reduce items --> items sep_comma value  gotos:state 135:  items:    items -> value . 
  actions:    action 'EOF' (noprec):   reduce items --> value
    action 'SEMI' (noprec):   reduce items --> value
    action 'BAR_SEMI' (noprec):   reduce items --> value
    action 'COMMA' (noprec):   reduce items --> value
    action 'BAR_COMMA' (noprec):   reduce items --> value
    action 'RARROW' (noprec):   reduce items --> value
    action 'EQUAL' (noprec):   reduce items --> value
    action 'BAR' (noprec):   reduce items --> value
    action 'COLON_EQUAL' (noprec):   reduce items --> value
    action 'BANG' (noprec):   reduce items --> value
    action 'SEND' (noprec):   reduce items --> value
    action 'RECEIVE' (noprec):   reduce items --> value
    action 'ON' (noprec):   reduce items --> value
    action 'REF' (noprec):   reduce items --> value
    action 'FUN' (noprec):   reduce items --> value
    action 'IF' (noprec):   reduce items --> value
    action 'THEN' (noprec):   reduce items --> value
    action 'ELSE' (noprec):   reduce items --> value
    action 'ELIF' (noprec):   reduce items --> value
    action 'BEGIN' (noprec):   reduce items --> value
    action 'END' (noprec):   reduce items --> value
    action 'LET' (noprec):   reduce items --> value
    action 'REC' (noprec):   reduce items --> value
    action 'IN' (noprec):   reduce items --> value
    action 'MATCH' (noprec):   reduce items --> value
    action 'WITH' (noprec):   reduce items --> value
    action 'WHEN' (noprec):   reduce items --> value
    action 'POLICY' (noprec):   reduce items --> value
    action 'TRY' (noprec):   reduce items --> value
    action 'FINALLY' (noprec):   reduce items --> value
    action 'NULL' (noprec):   reduce items --> value
    action 'COLON' (noprec):   reduce items --> value
    action 'LBRACKET' (noprec):   reduce items --> value
    action 'RBRACKET' (noprec):   reduce items --> value
    action 'LBRACE' (noprec):   reduce items --> value
    action 'RBRACE' (noprec):   reduce items --> value
    action 'LPAREN' (noprec):   reduce items --> value
    action 'RPAREN' (noprec):   reduce items --> value
    action 'BOOLEAN' (noprec):   reduce items --> value
    action 'DOUBLE' (noprec):   reduce items --> value
    action 'INTEGER' (noprec):   reduce items --> value
    action 'STRING' (noprec):   reduce items --> value
    action 'IDENT' (noprec):   reduce items --> value
    action 'error' (noprec):   reduce items --> value
    action '#' (noprec):   reduce items --> value
    action '$$' (noprec):   reduce items --> value
  immediate action:   reduce items --> value  gotos:state 136:  items:    constant -> 'STRING' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'STRING'
    action 'SEMI' (noprec):   reduce constant --> 'STRING'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'STRING'
    action 'COMMA' (noprec):   reduce constant --> 'STRING'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'STRING'
    action 'RARROW' (noprec):   reduce constant --> 'STRING'
    action 'EQUAL' (noprec):   reduce constant --> 'STRING'
    action 'BAR' (noprec):   reduce constant --> 'STRING'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'STRING'
    action 'BANG' (noprec):   reduce constant --> 'STRING'
    action 'SEND' (noprec):   reduce constant --> 'STRING'
    action 'RECEIVE' (noprec):   reduce constant --> 'STRING'
    action 'ON' (noprec):   reduce constant --> 'STRING'
    action 'REF' (noprec):   reduce constant --> 'STRING'
    action 'FUN' (noprec):   reduce constant --> 'STRING'
    action 'IF' (noprec):   reduce constant --> 'STRING'
    action 'THEN' (noprec):   reduce constant --> 'STRING'
    action 'ELSE' (noprec):   reduce constant --> 'STRING'
    action 'ELIF' (noprec):   reduce constant --> 'STRING'
    action 'BEGIN' (noprec):   reduce constant --> 'STRING'
    action 'END' (noprec):   reduce constant --> 'STRING'
    action 'LET' (noprec):   reduce constant --> 'STRING'
    action 'REC' (noprec):   reduce constant --> 'STRING'
    action 'IN' (noprec):   reduce constant --> 'STRING'
    action 'MATCH' (noprec):   reduce constant --> 'STRING'
    action 'WITH' (noprec):   reduce constant --> 'STRING'
    action 'WHEN' (noprec):   reduce constant --> 'STRING'
    action 'POLICY' (noprec):   reduce constant --> 'STRING'
    action 'TRY' (noprec):   reduce constant --> 'STRING'
    action 'FINALLY' (noprec):   reduce constant --> 'STRING'
    action 'NULL' (noprec):   reduce constant --> 'STRING'
    action 'COLON' (noprec):   reduce constant --> 'STRING'
    action 'LBRACKET' (noprec):   reduce constant --> 'STRING'
    action 'RBRACKET' (noprec):   reduce constant --> 'STRING'
    action 'LBRACE' (noprec):   reduce constant --> 'STRING'
    action 'RBRACE' (noprec):   reduce constant --> 'STRING'
    action 'LPAREN' (noprec):   reduce constant --> 'STRING'
    action 'RPAREN' (noprec):   reduce constant --> 'STRING'
    action 'BOOLEAN' (noprec):   reduce constant --> 'STRING'
    action 'DOUBLE' (noprec):   reduce constant --> 'STRING'
    action 'INTEGER' (noprec):   reduce constant --> 'STRING'
    action 'STRING' (noprec):   reduce constant --> 'STRING'
    action 'IDENT' (noprec):   reduce constant --> 'STRING'
    action 'error' (noprec):   reduce constant --> 'STRING'
    action '#' (noprec):   reduce constant --> 'STRING'
    action '$$' (noprec):   reduce constant --> 'STRING'
  immediate action:   reduce constant --> 'STRING'  gotos:state 137:  items:    constant -> 'INTEGER' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'INTEGER'
    action 'SEMI' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'INTEGER'
    action 'COMMA' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'INTEGER'
    action 'RARROW' (noprec):   reduce constant --> 'INTEGER'
    action 'EQUAL' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR' (noprec):   reduce constant --> 'INTEGER'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'INTEGER'
    action 'BANG' (noprec):   reduce constant --> 'INTEGER'
    action 'SEND' (noprec):   reduce constant --> 'INTEGER'
    action 'RECEIVE' (noprec):   reduce constant --> 'INTEGER'
    action 'ON' (noprec):   reduce constant --> 'INTEGER'
    action 'REF' (noprec):   reduce constant --> 'INTEGER'
    action 'FUN' (noprec):   reduce constant --> 'INTEGER'
    action 'IF' (noprec):   reduce constant --> 'INTEGER'
    action 'THEN' (noprec):   reduce constant --> 'INTEGER'
    action 'ELSE' (noprec):   reduce constant --> 'INTEGER'
    action 'ELIF' (noprec):   reduce constant --> 'INTEGER'
    action 'BEGIN' (noprec):   reduce constant --> 'INTEGER'
    action 'END' (noprec):   reduce constant --> 'INTEGER'
    action 'LET' (noprec):   reduce constant --> 'INTEGER'
    action 'REC' (noprec):   reduce constant --> 'INTEGER'
    action 'IN' (noprec):   reduce constant --> 'INTEGER'
    action 'MATCH' (noprec):   reduce constant --> 'INTEGER'
    action 'WITH' (noprec):   reduce constant --> 'INTEGER'
    action 'WHEN' (noprec):   reduce constant --> 'INTEGER'
    action 'POLICY' (noprec):   reduce constant --> 'INTEGER'
    action 'TRY' (noprec):   reduce constant --> 'INTEGER'
    action 'FINALLY' (noprec):   reduce constant --> 'INTEGER'
    action 'NULL' (noprec):   reduce constant --> 'INTEGER'
    action 'COLON' (noprec):   reduce constant --> 'INTEGER'
    action 'LBRACKET' (noprec):   reduce constant --> 'INTEGER'
    action 'RBRACKET' (noprec):   reduce constant --> 'INTEGER'
    action 'LBRACE' (noprec):   reduce constant --> 'INTEGER'
    action 'RBRACE' (noprec):   reduce constant --> 'INTEGER'
    action 'LPAREN' (noprec):   reduce constant --> 'INTEGER'
    action 'RPAREN' (noprec):   reduce constant --> 'INTEGER'
    action 'BOOLEAN' (noprec):   reduce constant --> 'INTEGER'
    action 'DOUBLE' (noprec):   reduce constant --> 'INTEGER'
    action 'INTEGER' (noprec):   reduce constant --> 'INTEGER'
    action 'STRING' (noprec):   reduce constant --> 'INTEGER'
    action 'IDENT' (noprec):   reduce constant --> 'INTEGER'
    action 'error' (noprec):   reduce constant --> 'INTEGER'
    action '#' (noprec):   reduce constant --> 'INTEGER'
    action '$$' (noprec):   reduce constant --> 'INTEGER'
  immediate action:   reduce constant --> 'INTEGER'  gotos:state 138:  items:    constant -> 'DOUBLE' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'DOUBLE'
    action 'SEMI' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'DOUBLE'
    action 'COMMA' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'DOUBLE'
    action 'RARROW' (noprec):   reduce constant --> 'DOUBLE'
    action 'EQUAL' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR' (noprec):   reduce constant --> 'DOUBLE'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'DOUBLE'
    action 'BANG' (noprec):   reduce constant --> 'DOUBLE'
    action 'SEND' (noprec):   reduce constant --> 'DOUBLE'
    action 'RECEIVE' (noprec):   reduce constant --> 'DOUBLE'
    action 'ON' (noprec):   reduce constant --> 'DOUBLE'
    action 'REF' (noprec):   reduce constant --> 'DOUBLE'
    action 'FUN' (noprec):   reduce constant --> 'DOUBLE'
    action 'IF' (noprec):   reduce constant --> 'DOUBLE'
    action 'THEN' (noprec):   reduce constant --> 'DOUBLE'
    action 'ELSE' (noprec):   reduce constant --> 'DOUBLE'
    action 'ELIF' (noprec):   reduce constant --> 'DOUBLE'
    action 'BEGIN' (noprec):   reduce constant --> 'DOUBLE'
    action 'END' (noprec):   reduce constant --> 'DOUBLE'
    action 'LET' (noprec):   reduce constant --> 'DOUBLE'
    action 'REC' (noprec):   reduce constant --> 'DOUBLE'
    action 'IN' (noprec):   reduce constant --> 'DOUBLE'
    action 'MATCH' (noprec):   reduce constant --> 'DOUBLE'
    action 'WITH' (noprec):   reduce constant --> 'DOUBLE'
    action 'WHEN' (noprec):   reduce constant --> 'DOUBLE'
    action 'POLICY' (noprec):   reduce constant --> 'DOUBLE'
    action 'TRY' (noprec):   reduce constant --> 'DOUBLE'
    action 'FINALLY' (noprec):   reduce constant --> 'DOUBLE'
    action 'NULL' (noprec):   reduce constant --> 'DOUBLE'
    action 'COLON' (noprec):   reduce constant --> 'DOUBLE'
    action 'LBRACKET' (noprec):   reduce constant --> 'DOUBLE'
    action 'RBRACKET' (noprec):   reduce constant --> 'DOUBLE'
    action 'LBRACE' (noprec):   reduce constant --> 'DOUBLE'
    action 'RBRACE' (noprec):   reduce constant --> 'DOUBLE'
    action 'LPAREN' (noprec):   reduce constant --> 'DOUBLE'
    action 'RPAREN' (noprec):   reduce constant --> 'DOUBLE'
    action 'BOOLEAN' (noprec):   reduce constant --> 'DOUBLE'
    action 'DOUBLE' (noprec):   reduce constant --> 'DOUBLE'
    action 'INTEGER' (noprec):   reduce constant --> 'DOUBLE'
    action 'STRING' (noprec):   reduce constant --> 'DOUBLE'
    action 'IDENT' (noprec):   reduce constant --> 'DOUBLE'
    action 'error' (noprec):   reduce constant --> 'DOUBLE'
    action '#' (noprec):   reduce constant --> 'DOUBLE'
    action '$$' (noprec):   reduce constant --> 'DOUBLE'
  immediate action:   reduce constant --> 'DOUBLE'  gotos:state 139:  items:    constant -> 'BOOLEAN' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'SEMI' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COMMA' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RARROW' (noprec):   reduce constant --> 'BOOLEAN'
    action 'EQUAL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BANG' (noprec):   reduce constant --> 'BOOLEAN'
    action 'SEND' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RECEIVE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ON' (noprec):   reduce constant --> 'BOOLEAN'
    action 'REF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'FUN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'THEN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ELSE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ELIF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BEGIN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'END' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'REC' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'MATCH' (noprec):   reduce constant --> 'BOOLEAN'
    action 'WITH' (noprec):   reduce constant --> 'BOOLEAN'
    action 'WHEN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'POLICY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'TRY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'FINALLY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'NULL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COLON' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LBRACKET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RBRACKET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LBRACE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RBRACE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LPAREN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RPAREN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BOOLEAN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'DOUBLE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'INTEGER' (noprec):   reduce constant --> 'BOOLEAN'
    action 'STRING' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IDENT' (noprec):   reduce constant --> 'BOOLEAN'
    action 'error' (noprec):   reduce constant --> 'BOOLEAN'
    action '#' (noprec):   reduce constant --> 'BOOLEAN'
    action '$$' (noprec):   reduce constant --> 'BOOLEAN'
  immediate action:   reduce constant --> 'BOOLEAN'  gotos:state 140:  items:    constant -> 'NULL' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'NULL'
    action 'SEMI' (noprec):   reduce constant --> 'NULL'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'NULL'
    action 'COMMA' (noprec):   reduce constant --> 'NULL'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'NULL'
    action 'RARROW' (noprec):   reduce constant --> 'NULL'
    action 'EQUAL' (noprec):   reduce constant --> 'NULL'
    action 'BAR' (noprec):   reduce constant --> 'NULL'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'NULL'
    action 'BANG' (noprec):   reduce constant --> 'NULL'
    action 'SEND' (noprec):   reduce constant --> 'NULL'
    action 'RECEIVE' (noprec):   reduce constant --> 'NULL'
    action 'ON' (noprec):   reduce constant --> 'NULL'
    action 'REF' (noprec):   reduce constant --> 'NULL'
    action 'FUN' (noprec):   reduce constant --> 'NULL'
    action 'IF' (noprec):   reduce constant --> 'NULL'
    action 'THEN' (noprec):   reduce constant --> 'NULL'
    action 'ELSE' (noprec):   reduce constant --> 'NULL'
    action 'ELIF' (noprec):   reduce constant --> 'NULL'
    action 'BEGIN' (noprec):   reduce constant --> 'NULL'
    action 'END' (noprec):   reduce constant --> 'NULL'
    action 'LET' (noprec):   reduce constant --> 'NULL'
    action 'REC' (noprec):   reduce constant --> 'NULL'
    action 'IN' (noprec):   reduce constant --> 'NULL'
    action 'MATCH' (noprec):   reduce constant --> 'NULL'
    action 'WITH' (noprec):   reduce constant --> 'NULL'
    action 'WHEN' (noprec):   reduce constant --> 'NULL'
    action 'POLICY' (noprec):   reduce constant --> 'NULL'
    action 'TRY' (noprec):   reduce constant --> 'NULL'
    action 'FINALLY' (noprec):   reduce constant --> 'NULL'
    action 'NULL' (noprec):   reduce constant --> 'NULL'
    action 'COLON' (noprec):   reduce constant --> 'NULL'
    action 'LBRACKET' (noprec):   reduce constant --> 'NULL'
    action 'RBRACKET' (noprec):   reduce constant --> 'NULL'
    action 'LBRACE' (noprec):   reduce constant --> 'NULL'
    action 'RBRACE' (noprec):   reduce constant --> 'NULL'
    action 'LPAREN' (noprec):   reduce constant --> 'NULL'
    action 'RPAREN' (noprec):   reduce constant --> 'NULL'
    action 'BOOLEAN' (noprec):   reduce constant --> 'NULL'
    action 'DOUBLE' (noprec):   reduce constant --> 'NULL'
    action 'INTEGER' (noprec):   reduce constant --> 'NULL'
    action 'STRING' (noprec):   reduce constant --> 'NULL'
    action 'IDENT' (noprec):   reduce constant --> 'NULL'
    action 'error' (noprec):   reduce constant --> 'NULL'
    action '#' (noprec):   reduce constant --> 'NULL'
    action '$$' (noprec):   reduce constant --> 'NULL'
  immediate action:   reduce constant --> 'NULL'  gotos:
startStates = 0
------------------------
        Output file describing compiled parser placed in Grammar.fs and Grammar.fsi
