------------------------
states = 
state 0:  items:    _startpolicyText ->  . policyText
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto policyText: 1
    goto term: 2
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 1:  items:    _startpolicyText -> policyText . 
  actions:    action 'EOF' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'BAR_SEMI' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'BAR_COMMA' (noprec):   accept
    action 'RARROW' (noprec):   accept
    action 'BAR' (noprec):   accept
    action 'BANG' (noprec):   accept
    action 'EQUAL' (noprec):   accept
    action 'COLON_EQUAL' (noprec):   accept
    action 'SEND' (noprec):   accept
    action 'RECEIVE' (noprec):   accept
    action 'ON' (noprec):   accept
    action 'REF' (noprec):   accept
    action 'FUN' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'THEN' (noprec):   accept
    action 'ELSE' (noprec):   accept
    action 'ELIF' (noprec):   accept
    action 'BEGIN' (noprec):   accept
    action 'END' (noprec):   accept
    action 'LET' (noprec):   accept
    action 'REC' (noprec):   accept
    action 'IN' (noprec):   accept
    action 'MATCH' (noprec):   accept
    action 'WITH' (noprec):   accept
    action 'WHEN' (noprec):   accept
    action 'POLICY' (noprec):   accept
    action 'TRY' (noprec):   accept
    action 'FINALLY' (noprec):   accept
    action 'NULL' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'LBRACE' (noprec):   accept
    action 'RBRACE' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'OP_MULTIPLICATION' (noprec):   accept
    action 'OP_ADDITION' (noprec):   accept
    action 'OP_COMPARE' (noprec):   accept
    action 'OP_BOOLEAN' (noprec):   accept
    action 'BOOLEAN' (noprec):   accept
    action 'DOUBLE' (noprec):   accept
    action 'INTEGER' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'IDENT' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 2:  items:    policyText -> term . 'EOF'
    annotation -> term . 'COLON' 'IDENT'
  actions:    action 'EOF' (noprec):   shift 3
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 3:  items:    policyText -> term 'EOF' . 
  actions:    action 'EOF' (noprec):   reduce policyText --> term 'EOF'
    action 'SEMI' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR_SEMI' (noprec):   reduce policyText --> term 'EOF'
    action 'COMMA' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR_COMMA' (noprec):   reduce policyText --> term 'EOF'
    action 'RARROW' (noprec):   reduce policyText --> term 'EOF'
    action 'BAR' (noprec):   reduce policyText --> term 'EOF'
    action 'BANG' (noprec):   reduce policyText --> term 'EOF'
    action 'EQUAL' (noprec):   reduce policyText --> term 'EOF'
    action 'COLON_EQUAL' (noprec):   reduce policyText --> term 'EOF'
    action 'SEND' (noprec):   reduce policyText --> term 'EOF'
    action 'RECEIVE' (noprec):   reduce policyText --> term 'EOF'
    action 'ON' (noprec):   reduce policyText --> term 'EOF'
    action 'REF' (noprec):   reduce policyText --> term 'EOF'
    action 'FUN' (noprec):   reduce policyText --> term 'EOF'
    action 'IF' (noprec):   reduce policyText --> term 'EOF'
    action 'THEN' (noprec):   reduce policyText --> term 'EOF'
    action 'ELSE' (noprec):   reduce policyText --> term 'EOF'
    action 'ELIF' (noprec):   reduce policyText --> term 'EOF'
    action 'BEGIN' (noprec):   reduce policyText --> term 'EOF'
    action 'END' (noprec):   reduce policyText --> term 'EOF'
    action 'LET' (noprec):   reduce policyText --> term 'EOF'
    action 'REC' (noprec):   reduce policyText --> term 'EOF'
    action 'IN' (noprec):   reduce policyText --> term 'EOF'
    action 'MATCH' (noprec):   reduce policyText --> term 'EOF'
    action 'WITH' (noprec):   reduce policyText --> term 'EOF'
    action 'WHEN' (noprec):   reduce policyText --> term 'EOF'
    action 'POLICY' (noprec):   reduce policyText --> term 'EOF'
    action 'TRY' (noprec):   reduce policyText --> term 'EOF'
    action 'FINALLY' (noprec):   reduce policyText --> term 'EOF'
    action 'NULL' (noprec):   reduce policyText --> term 'EOF'
    action 'COLON' (noprec):   reduce policyText --> term 'EOF'
    action 'LBRACKET' (noprec):   reduce policyText --> term 'EOF'
    action 'RBRACKET' (noprec):   reduce policyText --> term 'EOF'
    action 'LBRACE' (noprec):   reduce policyText --> term 'EOF'
    action 'RBRACE' (noprec):   reduce policyText --> term 'EOF'
    action 'LPAREN' (noprec):   reduce policyText --> term 'EOF'
    action 'RPAREN' (noprec):   reduce policyText --> term 'EOF'
    action 'OP_MULTIPLICATION' (noprec):   reduce policyText --> term 'EOF'
    action 'OP_ADDITION' (noprec):   reduce policyText --> term 'EOF'
    action 'OP_COMPARE' (noprec):   reduce policyText --> term 'EOF'
    action 'OP_BOOLEAN' (noprec):   reduce policyText --> term 'EOF'
    action 'BOOLEAN' (noprec):   reduce policyText --> term 'EOF'
    action 'DOUBLE' (noprec):   reduce policyText --> term 'EOF'
    action 'INTEGER' (noprec):   reduce policyText --> term 'EOF'
    action 'STRING' (noprec):   reduce policyText --> term 'EOF'
    action 'IDENT' (noprec):   reduce policyText --> term 'EOF'
    action 'error' (noprec):   reduce policyText --> term 'EOF'
    action '#' (noprec):   reduce policyText --> term 'EOF'
    action '$$' (noprec):   reduce policyText --> term 'EOF'
  immediate action:   reduce policyText --> term 'EOF'  gotos:state 4:  items:    term -> infix . 
    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (noprec):   reduce term --> infix
    action 'SEMI' (noprec):   reduce term --> infix
    action 'BAR_SEMI' (noprec):   reduce term --> infix
    action 'COMMA' (noprec):   reduce term --> infix
    action 'BAR_COMMA' (noprec):   reduce term --> infix
    action 'RARROW' (noprec):   reduce term --> infix
    action 'BAR' (noprec):   reduce term --> infix
    action 'BANG' (noprec):   reduce term --> infix
    action 'EQUAL' (explicit left 9997):   shift 34
    action 'COLON_EQUAL' (explicit left 9995):   shift 30
    action 'SEND' (noprec):   reduce term --> infix
    action 'RECEIVE' (noprec):   reduce term --> infix
    action 'ON' (noprec):   reduce term --> infix
    action 'REF' (noprec):   reduce term --> infix
    action 'FUN' (noprec):   reduce term --> infix
    action 'IF' (noprec):   reduce term --> infix
    action 'THEN' (noprec):   reduce term --> infix
    action 'ELSE' (noprec):   reduce term --> infix
    action 'ELIF' (noprec):   reduce term --> infix
    action 'BEGIN' (noprec):   reduce term --> infix
    action 'END' (noprec):   reduce term --> infix
    action 'LET' (noprec):   reduce term --> infix
    action 'REC' (noprec):   reduce term --> infix
    action 'IN' (noprec):   reduce term --> infix
    action 'MATCH' (noprec):   reduce term --> infix
    action 'WITH' (noprec):   reduce term --> infix
    action 'WHEN' (noprec):   reduce term --> infix
    action 'POLICY' (noprec):   reduce term --> infix
    action 'TRY' (noprec):   reduce term --> infix
    action 'FINALLY' (noprec):   reduce term --> infix
    action 'NULL' (noprec):   reduce term --> infix
    action 'COLON' (noprec):   reduce term --> infix
    action 'LBRACKET' (noprec):   reduce term --> infix
    action 'RBRACKET' (noprec):   reduce term --> infix
    action 'LBRACE' (noprec):   reduce term --> infix
    action 'RBRACE' (noprec):   reduce term --> infix
    action 'LPAREN' (noprec):   reduce term --> infix
    action 'RPAREN' (noprec):   reduce term --> infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   shift 37
    action 'OP_COMPARE' (explicit left 9997):   shift 35
    action 'OP_BOOLEAN' (explicit left 9996):   shift 32
    action 'BOOLEAN' (noprec):   reduce term --> infix
    action 'DOUBLE' (noprec):   reduce term --> infix
    action 'INTEGER' (noprec):   reduce term --> infix
    action 'STRING' (noprec):   reduce term --> infix
    action 'IDENT' (noprec):   reduce term --> infix
    action 'error' (noprec):   reduce term --> infix
    action '#' (noprec):   reduce term --> infix
    action '$$' (noprec):   reduce term --> infix
  immediate action: <none>  gotos:state 5:  items:    term -> annotation . 
  actions:    action 'EOF' (noprec):   reduce term --> annotation
    action 'SEMI' (noprec):   reduce term --> annotation
    action 'BAR_SEMI' (noprec):   reduce term --> annotation
    action 'COMMA' (noprec):   reduce term --> annotation
    action 'BAR_COMMA' (noprec):   reduce term --> annotation
    action 'RARROW' (noprec):   reduce term --> annotation
    action 'BAR' (noprec):   reduce term --> annotation
    action 'BANG' (noprec):   reduce term --> annotation
    action 'EQUAL' (noprec):   reduce term --> annotation
    action 'COLON_EQUAL' (noprec):   reduce term --> annotation
    action 'SEND' (noprec):   reduce term --> annotation
    action 'RECEIVE' (noprec):   reduce term --> annotation
    action 'ON' (noprec):   reduce term --> annotation
    action 'REF' (noprec):   reduce term --> annotation
    action 'FUN' (noprec):   reduce term --> annotation
    action 'IF' (noprec):   reduce term --> annotation
    action 'THEN' (noprec):   reduce term --> annotation
    action 'ELSE' (noprec):   reduce term --> annotation
    action 'ELIF' (noprec):   reduce term --> annotation
    action 'BEGIN' (noprec):   reduce term --> annotation
    action 'END' (noprec):   reduce term --> annotation
    action 'LET' (noprec):   reduce term --> annotation
    action 'REC' (noprec):   reduce term --> annotation
    action 'IN' (noprec):   reduce term --> annotation
    action 'MATCH' (noprec):   reduce term --> annotation
    action 'WITH' (noprec):   reduce term --> annotation
    action 'WHEN' (noprec):   reduce term --> annotation
    action 'POLICY' (noprec):   reduce term --> annotation
    action 'TRY' (noprec):   reduce term --> annotation
    action 'FINALLY' (noprec):   reduce term --> annotation
    action 'NULL' (noprec):   reduce term --> annotation
    action 'COLON' (noprec):   reduce term --> annotation
    action 'LBRACKET' (noprec):   reduce term --> annotation
    action 'RBRACKET' (noprec):   reduce term --> annotation
    action 'LBRACE' (noprec):   reduce term --> annotation
    action 'RBRACE' (noprec):   reduce term --> annotation
    action 'LPAREN' (noprec):   reduce term --> annotation
    action 'RPAREN' (noprec):   reduce term --> annotation
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> annotation
    action 'OP_ADDITION' (noprec):   reduce term --> annotation
    action 'OP_COMPARE' (noprec):   reduce term --> annotation
    action 'OP_BOOLEAN' (noprec):   reduce term --> annotation
    action 'BOOLEAN' (noprec):   reduce term --> annotation
    action 'DOUBLE' (noprec):   reduce term --> annotation
    action 'INTEGER' (noprec):   reduce term --> annotation
    action 'STRING' (noprec):   reduce term --> annotation
    action 'IDENT' (noprec):   reduce term --> annotation
    action 'error' (noprec):   reduce term --> annotation
    action '#' (noprec):   reduce term --> annotation
    action '$$' (noprec):   reduce term --> annotation
  immediate action:   reduce term --> annotation  gotos:state 6:  items:    term -> if . 
  actions:    action 'EOF' (noprec):   reduce term --> if
    action 'SEMI' (noprec):   reduce term --> if
    action 'BAR_SEMI' (noprec):   reduce term --> if
    action 'COMMA' (noprec):   reduce term --> if
    action 'BAR_COMMA' (noprec):   reduce term --> if
    action 'RARROW' (noprec):   reduce term --> if
    action 'BAR' (noprec):   reduce term --> if
    action 'BANG' (noprec):   reduce term --> if
    action 'EQUAL' (noprec):   reduce term --> if
    action 'COLON_EQUAL' (noprec):   reduce term --> if
    action 'SEND' (noprec):   reduce term --> if
    action 'RECEIVE' (noprec):   reduce term --> if
    action 'ON' (noprec):   reduce term --> if
    action 'REF' (noprec):   reduce term --> if
    action 'FUN' (noprec):   reduce term --> if
    action 'IF' (noprec):   reduce term --> if
    action 'THEN' (noprec):   reduce term --> if
    action 'ELSE' (noprec):   reduce term --> if
    action 'ELIF' (noprec):   reduce term --> if
    action 'BEGIN' (noprec):   reduce term --> if
    action 'END' (noprec):   reduce term --> if
    action 'LET' (noprec):   reduce term --> if
    action 'REC' (noprec):   reduce term --> if
    action 'IN' (noprec):   reduce term --> if
    action 'MATCH' (noprec):   reduce term --> if
    action 'WITH' (noprec):   reduce term --> if
    action 'WHEN' (noprec):   reduce term --> if
    action 'POLICY' (noprec):   reduce term --> if
    action 'TRY' (noprec):   reduce term --> if
    action 'FINALLY' (noprec):   reduce term --> if
    action 'NULL' (noprec):   reduce term --> if
    action 'COLON' (noprec):   reduce term --> if
    action 'LBRACKET' (noprec):   reduce term --> if
    action 'RBRACKET' (noprec):   reduce term --> if
    action 'LBRACE' (noprec):   reduce term --> if
    action 'RBRACE' (noprec):   reduce term --> if
    action 'LPAREN' (noprec):   reduce term --> if
    action 'RPAREN' (noprec):   reduce term --> if
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> if
    action 'OP_ADDITION' (noprec):   reduce term --> if
    action 'OP_COMPARE' (noprec):   reduce term --> if
    action 'OP_BOOLEAN' (noprec):   reduce term --> if
    action 'BOOLEAN' (noprec):   reduce term --> if
    action 'DOUBLE' (noprec):   reduce term --> if
    action 'INTEGER' (noprec):   reduce term --> if
    action 'STRING' (noprec):   reduce term --> if
    action 'IDENT' (noprec):   reduce term --> if
    action 'error' (noprec):   reduce term --> if
    action '#' (noprec):   reduce term --> if
    action '$$' (noprec):   reduce term --> if
  immediate action:   reduce term --> if  gotos:state 7:  items:    term -> match . 
  actions:    action 'EOF' (noprec):   reduce term --> match
    action 'SEMI' (noprec):   reduce term --> match
    action 'BAR_SEMI' (noprec):   reduce term --> match
    action 'COMMA' (noprec):   reduce term --> match
    action 'BAR_COMMA' (noprec):   reduce term --> match
    action 'RARROW' (noprec):   reduce term --> match
    action 'BAR' (noprec):   reduce term --> match
    action 'BANG' (noprec):   reduce term --> match
    action 'EQUAL' (noprec):   reduce term --> match
    action 'COLON_EQUAL' (noprec):   reduce term --> match
    action 'SEND' (noprec):   reduce term --> match
    action 'RECEIVE' (noprec):   reduce term --> match
    action 'ON' (noprec):   reduce term --> match
    action 'REF' (noprec):   reduce term --> match
    action 'FUN' (noprec):   reduce term --> match
    action 'IF' (noprec):   reduce term --> match
    action 'THEN' (noprec):   reduce term --> match
    action 'ELSE' (noprec):   reduce term --> match
    action 'ELIF' (noprec):   reduce term --> match
    action 'BEGIN' (noprec):   reduce term --> match
    action 'END' (noprec):   reduce term --> match
    action 'LET' (noprec):   reduce term --> match
    action 'REC' (noprec):   reduce term --> match
    action 'IN' (noprec):   reduce term --> match
    action 'MATCH' (noprec):   reduce term --> match
    action 'WITH' (noprec):   reduce term --> match
    action 'WHEN' (noprec):   reduce term --> match
    action 'POLICY' (noprec):   reduce term --> match
    action 'TRY' (noprec):   reduce term --> match
    action 'FINALLY' (noprec):   reduce term --> match
    action 'NULL' (noprec):   reduce term --> match
    action 'COLON' (noprec):   reduce term --> match
    action 'LBRACKET' (noprec):   reduce term --> match
    action 'RBRACKET' (noprec):   reduce term --> match
    action 'LBRACE' (noprec):   reduce term --> match
    action 'RBRACE' (noprec):   reduce term --> match
    action 'LPAREN' (noprec):   reduce term --> match
    action 'RPAREN' (noprec):   reduce term --> match
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> match
    action 'OP_ADDITION' (noprec):   reduce term --> match
    action 'OP_COMPARE' (noprec):   reduce term --> match
    action 'OP_BOOLEAN' (noprec):   reduce term --> match
    action 'BOOLEAN' (noprec):   reduce term --> match
    action 'DOUBLE' (noprec):   reduce term --> match
    action 'INTEGER' (noprec):   reduce term --> match
    action 'STRING' (noprec):   reduce term --> match
    action 'IDENT' (noprec):   reduce term --> match
    action 'error' (noprec):   reduce term --> match
    action '#' (noprec):   reduce term --> match
    action '$$' (noprec):   reduce term --> match
  immediate action:   reduce term --> match  gotos:state 8:  items:    term -> policy . 
  actions:    action 'EOF' (noprec):   reduce term --> policy
    action 'SEMI' (noprec):   reduce term --> policy
    action 'BAR_SEMI' (noprec):   reduce term --> policy
    action 'COMMA' (noprec):   reduce term --> policy
    action 'BAR_COMMA' (noprec):   reduce term --> policy
    action 'RARROW' (noprec):   reduce term --> policy
    action 'BAR' (noprec):   reduce term --> policy
    action 'BANG' (noprec):   reduce term --> policy
    action 'EQUAL' (noprec):   reduce term --> policy
    action 'COLON_EQUAL' (noprec):   reduce term --> policy
    action 'SEND' (noprec):   reduce term --> policy
    action 'RECEIVE' (noprec):   reduce term --> policy
    action 'ON' (noprec):   reduce term --> policy
    action 'REF' (noprec):   reduce term --> policy
    action 'FUN' (noprec):   reduce term --> policy
    action 'IF' (noprec):   reduce term --> policy
    action 'THEN' (noprec):   reduce term --> policy
    action 'ELSE' (noprec):   reduce term --> policy
    action 'ELIF' (noprec):   reduce term --> policy
    action 'BEGIN' (noprec):   reduce term --> policy
    action 'END' (noprec):   reduce term --> policy
    action 'LET' (noprec):   reduce term --> policy
    action 'REC' (noprec):   reduce term --> policy
    action 'IN' (noprec):   reduce term --> policy
    action 'MATCH' (noprec):   reduce term --> policy
    action 'WITH' (noprec):   reduce term --> policy
    action 'WHEN' (noprec):   reduce term --> policy
    action 'POLICY' (noprec):   reduce term --> policy
    action 'TRY' (noprec):   reduce term --> policy
    action 'FINALLY' (noprec):   reduce term --> policy
    action 'NULL' (noprec):   reduce term --> policy
    action 'COLON' (noprec):   reduce term --> policy
    action 'LBRACKET' (noprec):   reduce term --> policy
    action 'RBRACKET' (noprec):   reduce term --> policy
    action 'LBRACE' (noprec):   reduce term --> policy
    action 'RBRACE' (noprec):   reduce term --> policy
    action 'LPAREN' (noprec):   reduce term --> policy
    action 'RPAREN' (noprec):   reduce term --> policy
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> policy
    action 'OP_ADDITION' (noprec):   reduce term --> policy
    action 'OP_COMPARE' (noprec):   reduce term --> policy
    action 'OP_BOOLEAN' (noprec):   reduce term --> policy
    action 'BOOLEAN' (noprec):   reduce term --> policy
    action 'DOUBLE' (noprec):   reduce term --> policy
    action 'INTEGER' (noprec):   reduce term --> policy
    action 'STRING' (noprec):   reduce term --> policy
    action 'IDENT' (noprec):   reduce term --> policy
    action 'error' (noprec):   reduce term --> policy
    action '#' (noprec):   reduce term --> policy
    action '$$' (noprec):   reduce term --> policy
  immediate action:   reduce term --> policy  gotos:state 9:  items:    term -> receive . 
  actions:    action 'EOF' (noprec):   reduce term --> receive
    action 'SEMI' (noprec):   reduce term --> receive
    action 'BAR_SEMI' (noprec):   reduce term --> receive
    action 'COMMA' (noprec):   reduce term --> receive
    action 'BAR_COMMA' (noprec):   reduce term --> receive
    action 'RARROW' (noprec):   reduce term --> receive
    action 'BAR' (noprec):   reduce term --> receive
    action 'BANG' (noprec):   reduce term --> receive
    action 'EQUAL' (noprec):   reduce term --> receive
    action 'COLON_EQUAL' (noprec):   reduce term --> receive
    action 'SEND' (noprec):   reduce term --> receive
    action 'RECEIVE' (noprec):   reduce term --> receive
    action 'ON' (noprec):   reduce term --> receive
    action 'REF' (noprec):   reduce term --> receive
    action 'FUN' (noprec):   reduce term --> receive
    action 'IF' (noprec):   reduce term --> receive
    action 'THEN' (noprec):   reduce term --> receive
    action 'ELSE' (noprec):   reduce term --> receive
    action 'ELIF' (noprec):   reduce term --> receive
    action 'BEGIN' (noprec):   reduce term --> receive
    action 'END' (noprec):   reduce term --> receive
    action 'LET' (noprec):   reduce term --> receive
    action 'REC' (noprec):   reduce term --> receive
    action 'IN' (noprec):   reduce term --> receive
    action 'MATCH' (noprec):   reduce term --> receive
    action 'WITH' (noprec):   reduce term --> receive
    action 'WHEN' (noprec):   reduce term --> receive
    action 'POLICY' (noprec):   reduce term --> receive
    action 'TRY' (noprec):   reduce term --> receive
    action 'FINALLY' (noprec):   reduce term --> receive
    action 'NULL' (noprec):   reduce term --> receive
    action 'COLON' (noprec):   reduce term --> receive
    action 'LBRACKET' (noprec):   reduce term --> receive
    action 'RBRACKET' (noprec):   reduce term --> receive
    action 'LBRACE' (noprec):   reduce term --> receive
    action 'RBRACE' (noprec):   reduce term --> receive
    action 'LPAREN' (noprec):   reduce term --> receive
    action 'RPAREN' (noprec):   reduce term --> receive
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> receive
    action 'OP_ADDITION' (noprec):   reduce term --> receive
    action 'OP_COMPARE' (noprec):   reduce term --> receive
    action 'OP_BOOLEAN' (noprec):   reduce term --> receive
    action 'BOOLEAN' (noprec):   reduce term --> receive
    action 'DOUBLE' (noprec):   reduce term --> receive
    action 'INTEGER' (noprec):   reduce term --> receive
    action 'STRING' (noprec):   reduce term --> receive
    action 'IDENT' (noprec):   reduce term --> receive
    action 'error' (noprec):   reduce term --> receive
    action '#' (noprec):   reduce term --> receive
    action '$$' (noprec):   reduce term --> receive
  immediate action:   reduce term --> receive  gotos:state 10:  items:    term -> send . 
  actions:    action 'EOF' (noprec):   reduce term --> send
    action 'SEMI' (noprec):   reduce term --> send
    action 'BAR_SEMI' (noprec):   reduce term --> send
    action 'COMMA' (noprec):   reduce term --> send
    action 'BAR_COMMA' (noprec):   reduce term --> send
    action 'RARROW' (noprec):   reduce term --> send
    action 'BAR' (noprec):   reduce term --> send
    action 'BANG' (noprec):   reduce term --> send
    action 'EQUAL' (noprec):   reduce term --> send
    action 'COLON_EQUAL' (noprec):   reduce term --> send
    action 'SEND' (noprec):   reduce term --> send
    action 'RECEIVE' (noprec):   reduce term --> send
    action 'ON' (noprec):   reduce term --> send
    action 'REF' (noprec):   reduce term --> send
    action 'FUN' (noprec):   reduce term --> send
    action 'IF' (noprec):   reduce term --> send
    action 'THEN' (noprec):   reduce term --> send
    action 'ELSE' (noprec):   reduce term --> send
    action 'ELIF' (noprec):   reduce term --> send
    action 'BEGIN' (noprec):   reduce term --> send
    action 'END' (noprec):   reduce term --> send
    action 'LET' (noprec):   reduce term --> send
    action 'REC' (noprec):   reduce term --> send
    action 'IN' (noprec):   reduce term --> send
    action 'MATCH' (noprec):   reduce term --> send
    action 'WITH' (noprec):   reduce term --> send
    action 'WHEN' (noprec):   reduce term --> send
    action 'POLICY' (noprec):   reduce term --> send
    action 'TRY' (noprec):   reduce term --> send
    action 'FINALLY' (noprec):   reduce term --> send
    action 'NULL' (noprec):   reduce term --> send
    action 'COLON' (noprec):   reduce term --> send
    action 'LBRACKET' (noprec):   reduce term --> send
    action 'RBRACKET' (noprec):   reduce term --> send
    action 'LBRACE' (noprec):   reduce term --> send
    action 'RBRACE' (noprec):   reduce term --> send
    action 'LPAREN' (noprec):   reduce term --> send
    action 'RPAREN' (noprec):   reduce term --> send
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> send
    action 'OP_ADDITION' (noprec):   reduce term --> send
    action 'OP_COMPARE' (noprec):   reduce term --> send
    action 'OP_BOOLEAN' (noprec):   reduce term --> send
    action 'BOOLEAN' (noprec):   reduce term --> send
    action 'DOUBLE' (noprec):   reduce term --> send
    action 'INTEGER' (noprec):   reduce term --> send
    action 'STRING' (noprec):   reduce term --> send
    action 'IDENT' (noprec):   reduce term --> send
    action 'error' (noprec):   reduce term --> send
    action '#' (noprec):   reduce term --> send
    action '$$' (noprec):   reduce term --> send
  immediate action:   reduce term --> send  gotos:state 11:  items:    term -> tryWith . 
  actions:    action 'EOF' (noprec):   reduce term --> tryWith
    action 'SEMI' (noprec):   reduce term --> tryWith
    action 'BAR_SEMI' (noprec):   reduce term --> tryWith
    action 'COMMA' (noprec):   reduce term --> tryWith
    action 'BAR_COMMA' (noprec):   reduce term --> tryWith
    action 'RARROW' (noprec):   reduce term --> tryWith
    action 'BAR' (noprec):   reduce term --> tryWith
    action 'BANG' (noprec):   reduce term --> tryWith
    action 'EQUAL' (noprec):   reduce term --> tryWith
    action 'COLON_EQUAL' (noprec):   reduce term --> tryWith
    action 'SEND' (noprec):   reduce term --> tryWith
    action 'RECEIVE' (noprec):   reduce term --> tryWith
    action 'ON' (noprec):   reduce term --> tryWith
    action 'REF' (noprec):   reduce term --> tryWith
    action 'FUN' (noprec):   reduce term --> tryWith
    action 'IF' (noprec):   reduce term --> tryWith
    action 'THEN' (noprec):   reduce term --> tryWith
    action 'ELSE' (noprec):   reduce term --> tryWith
    action 'ELIF' (noprec):   reduce term --> tryWith
    action 'BEGIN' (noprec):   reduce term --> tryWith
    action 'END' (noprec):   reduce term --> tryWith
    action 'LET' (noprec):   reduce term --> tryWith
    action 'REC' (noprec):   reduce term --> tryWith
    action 'IN' (noprec):   reduce term --> tryWith
    action 'MATCH' (noprec):   reduce term --> tryWith
    action 'WITH' (noprec):   reduce term --> tryWith
    action 'WHEN' (noprec):   reduce term --> tryWith
    action 'POLICY' (noprec):   reduce term --> tryWith
    action 'TRY' (noprec):   reduce term --> tryWith
    action 'FINALLY' (noprec):   reduce term --> tryWith
    action 'NULL' (noprec):   reduce term --> tryWith
    action 'COLON' (noprec):   reduce term --> tryWith
    action 'LBRACKET' (noprec):   reduce term --> tryWith
    action 'RBRACKET' (noprec):   reduce term --> tryWith
    action 'LBRACE' (noprec):   reduce term --> tryWith
    action 'RBRACE' (noprec):   reduce term --> tryWith
    action 'LPAREN' (noprec):   reduce term --> tryWith
    action 'RPAREN' (noprec):   reduce term --> tryWith
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> tryWith
    action 'OP_ADDITION' (noprec):   reduce term --> tryWith
    action 'OP_COMPARE' (noprec):   reduce term --> tryWith
    action 'OP_BOOLEAN' (noprec):   reduce term --> tryWith
    action 'BOOLEAN' (noprec):   reduce term --> tryWith
    action 'DOUBLE' (noprec):   reduce term --> tryWith
    action 'INTEGER' (noprec):   reduce term --> tryWith
    action 'STRING' (noprec):   reduce term --> tryWith
    action 'IDENT' (noprec):   reduce term --> tryWith
    action 'error' (noprec):   reduce term --> tryWith
    action '#' (noprec):   reduce term --> tryWith
    action '$$' (noprec):   reduce term --> tryWith
  immediate action:   reduce term --> tryWith  gotos:state 12:  items:    term -> tryFinally . 
  actions:    action 'EOF' (noprec):   reduce term --> tryFinally
    action 'SEMI' (noprec):   reduce term --> tryFinally
    action 'BAR_SEMI' (noprec):   reduce term --> tryFinally
    action 'COMMA' (noprec):   reduce term --> tryFinally
    action 'BAR_COMMA' (noprec):   reduce term --> tryFinally
    action 'RARROW' (noprec):   reduce term --> tryFinally
    action 'BAR' (noprec):   reduce term --> tryFinally
    action 'BANG' (noprec):   reduce term --> tryFinally
    action 'EQUAL' (noprec):   reduce term --> tryFinally
    action 'COLON_EQUAL' (noprec):   reduce term --> tryFinally
    action 'SEND' (noprec):   reduce term --> tryFinally
    action 'RECEIVE' (noprec):   reduce term --> tryFinally
    action 'ON' (noprec):   reduce term --> tryFinally
    action 'REF' (noprec):   reduce term --> tryFinally
    action 'FUN' (noprec):   reduce term --> tryFinally
    action 'IF' (noprec):   reduce term --> tryFinally
    action 'THEN' (noprec):   reduce term --> tryFinally
    action 'ELSE' (noprec):   reduce term --> tryFinally
    action 'ELIF' (noprec):   reduce term --> tryFinally
    action 'BEGIN' (noprec):   reduce term --> tryFinally
    action 'END' (noprec):   reduce term --> tryFinally
    action 'LET' (noprec):   reduce term --> tryFinally
    action 'REC' (noprec):   reduce term --> tryFinally
    action 'IN' (noprec):   reduce term --> tryFinally
    action 'MATCH' (noprec):   reduce term --> tryFinally
    action 'WITH' (noprec):   reduce term --> tryFinally
    action 'WHEN' (noprec):   reduce term --> tryFinally
    action 'POLICY' (noprec):   reduce term --> tryFinally
    action 'TRY' (noprec):   reduce term --> tryFinally
    action 'FINALLY' (noprec):   reduce term --> tryFinally
    action 'NULL' (noprec):   reduce term --> tryFinally
    action 'COLON' (noprec):   reduce term --> tryFinally
    action 'LBRACKET' (noprec):   reduce term --> tryFinally
    action 'RBRACKET' (noprec):   reduce term --> tryFinally
    action 'LBRACE' (noprec):   reduce term --> tryFinally
    action 'RBRACE' (noprec):   reduce term --> tryFinally
    action 'LPAREN' (noprec):   reduce term --> tryFinally
    action 'RPAREN' (noprec):   reduce term --> tryFinally
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> tryFinally
    action 'OP_ADDITION' (noprec):   reduce term --> tryFinally
    action 'OP_COMPARE' (noprec):   reduce term --> tryFinally
    action 'OP_BOOLEAN' (noprec):   reduce term --> tryFinally
    action 'BOOLEAN' (noprec):   reduce term --> tryFinally
    action 'DOUBLE' (noprec):   reduce term --> tryFinally
    action 'INTEGER' (noprec):   reduce term --> tryFinally
    action 'STRING' (noprec):   reduce term --> tryFinally
    action 'IDENT' (noprec):   reduce term --> tryFinally
    action 'error' (noprec):   reduce term --> tryFinally
    action '#' (noprec):   reduce term --> tryFinally
    action '$$' (noprec):   reduce term --> tryFinally
  immediate action:   reduce term --> tryFinally  gotos:state 13:  items:    term -> ref . 
  actions:    action 'EOF' (noprec):   reduce term --> ref
    action 'SEMI' (noprec):   reduce term --> ref
    action 'BAR_SEMI' (noprec):   reduce term --> ref
    action 'COMMA' (noprec):   reduce term --> ref
    action 'BAR_COMMA' (noprec):   reduce term --> ref
    action 'RARROW' (noprec):   reduce term --> ref
    action 'BAR' (noprec):   reduce term --> ref
    action 'BANG' (noprec):   reduce term --> ref
    action 'EQUAL' (noprec):   reduce term --> ref
    action 'COLON_EQUAL' (noprec):   reduce term --> ref
    action 'SEND' (noprec):   reduce term --> ref
    action 'RECEIVE' (noprec):   reduce term --> ref
    action 'ON' (noprec):   reduce term --> ref
    action 'REF' (noprec):   reduce term --> ref
    action 'FUN' (noprec):   reduce term --> ref
    action 'IF' (noprec):   reduce term --> ref
    action 'THEN' (noprec):   reduce term --> ref
    action 'ELSE' (noprec):   reduce term --> ref
    action 'ELIF' (noprec):   reduce term --> ref
    action 'BEGIN' (noprec):   reduce term --> ref
    action 'END' (noprec):   reduce term --> ref
    action 'LET' (noprec):   reduce term --> ref
    action 'REC' (noprec):   reduce term --> ref
    action 'IN' (noprec):   reduce term --> ref
    action 'MATCH' (noprec):   reduce term --> ref
    action 'WITH' (noprec):   reduce term --> ref
    action 'WHEN' (noprec):   reduce term --> ref
    action 'POLICY' (noprec):   reduce term --> ref
    action 'TRY' (noprec):   reduce term --> ref
    action 'FINALLY' (noprec):   reduce term --> ref
    action 'NULL' (noprec):   reduce term --> ref
    action 'COLON' (noprec):   reduce term --> ref
    action 'LBRACKET' (noprec):   reduce term --> ref
    action 'RBRACKET' (noprec):   reduce term --> ref
    action 'LBRACE' (noprec):   reduce term --> ref
    action 'RBRACE' (noprec):   reduce term --> ref
    action 'LPAREN' (noprec):   reduce term --> ref
    action 'RPAREN' (noprec):   reduce term --> ref
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> ref
    action 'OP_ADDITION' (noprec):   reduce term --> ref
    action 'OP_COMPARE' (noprec):   reduce term --> ref
    action 'OP_BOOLEAN' (noprec):   reduce term --> ref
    action 'BOOLEAN' (noprec):   reduce term --> ref
    action 'DOUBLE' (noprec):   reduce term --> ref
    action 'INTEGER' (noprec):   reduce term --> ref
    action 'STRING' (noprec):   reduce term --> ref
    action 'IDENT' (noprec):   reduce term --> ref
    action 'error' (noprec):   reduce term --> ref
    action '#' (noprec):   reduce term --> ref
    action '$$' (noprec):   reduce term --> ref
  immediate action:   reduce term --> ref  gotos:state 14:  items:    term -> dereference . 
  actions:    action 'EOF' (noprec):   reduce term --> dereference
    action 'SEMI' (noprec):   reduce term --> dereference
    action 'BAR_SEMI' (noprec):   reduce term --> dereference
    action 'COMMA' (noprec):   reduce term --> dereference
    action 'BAR_COMMA' (noprec):   reduce term --> dereference
    action 'RARROW' (noprec):   reduce term --> dereference
    action 'BAR' (noprec):   reduce term --> dereference
    action 'BANG' (noprec):   reduce term --> dereference
    action 'EQUAL' (noprec):   reduce term --> dereference
    action 'COLON_EQUAL' (noprec):   reduce term --> dereference
    action 'SEND' (noprec):   reduce term --> dereference
    action 'RECEIVE' (noprec):   reduce term --> dereference
    action 'ON' (noprec):   reduce term --> dereference
    action 'REF' (noprec):   reduce term --> dereference
    action 'FUN' (noprec):   reduce term --> dereference
    action 'IF' (noprec):   reduce term --> dereference
    action 'THEN' (noprec):   reduce term --> dereference
    action 'ELSE' (noprec):   reduce term --> dereference
    action 'ELIF' (noprec):   reduce term --> dereference
    action 'BEGIN' (noprec):   reduce term --> dereference
    action 'END' (noprec):   reduce term --> dereference
    action 'LET' (noprec):   reduce term --> dereference
    action 'REC' (noprec):   reduce term --> dereference
    action 'IN' (noprec):   reduce term --> dereference
    action 'MATCH' (noprec):   reduce term --> dereference
    action 'WITH' (noprec):   reduce term --> dereference
    action 'WHEN' (noprec):   reduce term --> dereference
    action 'POLICY' (noprec):   reduce term --> dereference
    action 'TRY' (noprec):   reduce term --> dereference
    action 'FINALLY' (noprec):   reduce term --> dereference
    action 'NULL' (noprec):   reduce term --> dereference
    action 'COLON' (noprec):   reduce term --> dereference
    action 'LBRACKET' (noprec):   reduce term --> dereference
    action 'RBRACKET' (noprec):   reduce term --> dereference
    action 'LBRACE' (noprec):   reduce term --> dereference
    action 'RBRACE' (noprec):   reduce term --> dereference
    action 'LPAREN' (noprec):   reduce term --> dereference
    action 'RPAREN' (noprec):   reduce term --> dereference
    action 'OP_MULTIPLICATION' (noprec):   reduce term --> dereference
    action 'OP_ADDITION' (noprec):   reduce term --> dereference
    action 'OP_COMPARE' (noprec):   reduce term --> dereference
    action 'OP_BOOLEAN' (noprec):   reduce term --> dereference
    action 'BOOLEAN' (noprec):   reduce term --> dereference
    action 'DOUBLE' (noprec):   reduce term --> dereference
    action 'INTEGER' (noprec):   reduce term --> dereference
    action 'STRING' (noprec):   reduce term --> dereference
    action 'IDENT' (noprec):   reduce term --> dereference
    action 'error' (noprec):   reduce term --> dereference
    action '#' (noprec):   reduce term --> dereference
    action '$$' (noprec):   reduce term --> dereference
  immediate action:   reduce term --> dereference  gotos:state 15:  items:    infix -> infixAssignment . 
  actions:    action 'EOF' (noprec):   reduce infix --> infixAssignment
    action 'SEMI' (noprec):   reduce infix --> infixAssignment
    action 'BAR_SEMI' (noprec):   reduce infix --> infixAssignment
    action 'COMMA' (noprec):   reduce infix --> infixAssignment
    action 'BAR_COMMA' (noprec):   reduce infix --> infixAssignment
    action 'RARROW' (noprec):   reduce infix --> infixAssignment
    action 'BAR' (noprec):   reduce infix --> infixAssignment
    action 'BANG' (noprec):   reduce infix --> infixAssignment
    action 'EQUAL' (noprec):   reduce infix --> infixAssignment
    action 'COLON_EQUAL' (noprec):   reduce infix --> infixAssignment
    action 'SEND' (noprec):   reduce infix --> infixAssignment
    action 'RECEIVE' (noprec):   reduce infix --> infixAssignment
    action 'ON' (noprec):   reduce infix --> infixAssignment
    action 'REF' (noprec):   reduce infix --> infixAssignment
    action 'FUN' (noprec):   reduce infix --> infixAssignment
    action 'IF' (noprec):   reduce infix --> infixAssignment
    action 'THEN' (noprec):   reduce infix --> infixAssignment
    action 'ELSE' (noprec):   reduce infix --> infixAssignment
    action 'ELIF' (noprec):   reduce infix --> infixAssignment
    action 'BEGIN' (noprec):   reduce infix --> infixAssignment
    action 'END' (noprec):   reduce infix --> infixAssignment
    action 'LET' (noprec):   reduce infix --> infixAssignment
    action 'REC' (noprec):   reduce infix --> infixAssignment
    action 'IN' (noprec):   reduce infix --> infixAssignment
    action 'MATCH' (noprec):   reduce infix --> infixAssignment
    action 'WITH' (noprec):   reduce infix --> infixAssignment
    action 'WHEN' (noprec):   reduce infix --> infixAssignment
    action 'POLICY' (noprec):   reduce infix --> infixAssignment
    action 'TRY' (noprec):   reduce infix --> infixAssignment
    action 'FINALLY' (noprec):   reduce infix --> infixAssignment
    action 'NULL' (noprec):   reduce infix --> infixAssignment
    action 'COLON' (noprec):   reduce infix --> infixAssignment
    action 'LBRACKET' (noprec):   reduce infix --> infixAssignment
    action 'RBRACKET' (noprec):   reduce infix --> infixAssignment
    action 'LBRACE' (noprec):   reduce infix --> infixAssignment
    action 'RBRACE' (noprec):   reduce infix --> infixAssignment
    action 'LPAREN' (noprec):   reduce infix --> infixAssignment
    action 'RPAREN' (noprec):   reduce infix --> infixAssignment
    action 'OP_MULTIPLICATION' (noprec):   reduce infix --> infixAssignment
    action 'OP_ADDITION' (noprec):   reduce infix --> infixAssignment
    action 'OP_COMPARE' (noprec):   reduce infix --> infixAssignment
    action 'OP_BOOLEAN' (noprec):   reduce infix --> infixAssignment
    action 'BOOLEAN' (noprec):   reduce infix --> infixAssignment
    action 'DOUBLE' (noprec):   reduce infix --> infixAssignment
    action 'INTEGER' (noprec):   reduce infix --> infixAssignment
    action 'STRING' (noprec):   reduce infix --> infixAssignment
    action 'IDENT' (noprec):   reduce infix --> infixAssignment
    action 'error' (noprec):   reduce infix --> infixAssignment
    action '#' (noprec):   reduce infix --> infixAssignment
    action '$$' (noprec):   reduce infix --> infixAssignment
  immediate action:   reduce infix --> infixAssignment  gotos:state 16:  items:    infix -> function . 
  actions:    action 'EOF' (noprec):   reduce infix --> function
    action 'SEMI' (noprec):   reduce infix --> function
    action 'BAR_SEMI' (noprec):   reduce infix --> function
    action 'COMMA' (noprec):   reduce infix --> function
    action 'BAR_COMMA' (noprec):   reduce infix --> function
    action 'RARROW' (noprec):   reduce infix --> function
    action 'BAR' (noprec):   reduce infix --> function
    action 'BANG' (noprec):   reduce infix --> function
    action 'EQUAL' (noprec):   reduce infix --> function
    action 'COLON_EQUAL' (noprec):   reduce infix --> function
    action 'SEND' (noprec):   reduce infix --> function
    action 'RECEIVE' (noprec):   reduce infix --> function
    action 'ON' (noprec):   reduce infix --> function
    action 'REF' (noprec):   reduce infix --> function
    action 'FUN' (noprec):   reduce infix --> function
    action 'IF' (noprec):   reduce infix --> function
    action 'THEN' (noprec):   reduce infix --> function
    action 'ELSE' (noprec):   reduce infix --> function
    action 'ELIF' (noprec):   reduce infix --> function
    action 'BEGIN' (noprec):   reduce infix --> function
    action 'END' (noprec):   reduce infix --> function
    action 'LET' (noprec):   reduce infix --> function
    action 'REC' (noprec):   reduce infix --> function
    action 'IN' (noprec):   reduce infix --> function
    action 'MATCH' (noprec):   reduce infix --> function
    action 'WITH' (noprec):   reduce infix --> function
    action 'WHEN' (noprec):   reduce infix --> function
    action 'POLICY' (noprec):   reduce infix --> function
    action 'TRY' (noprec):   reduce infix --> function
    action 'FINALLY' (noprec):   reduce infix --> function
    action 'NULL' (noprec):   reduce infix --> function
    action 'COLON' (noprec):   reduce infix --> function
    action 'LBRACKET' (noprec):   reduce infix --> function
    action 'RBRACKET' (noprec):   reduce infix --> function
    action 'LBRACE' (noprec):   reduce infix --> function
    action 'RBRACE' (noprec):   reduce infix --> function
    action 'LPAREN' (noprec):   reduce infix --> function
    action 'RPAREN' (noprec):   reduce infix --> function
    action 'OP_MULTIPLICATION' (noprec):   reduce infix --> function
    action 'OP_ADDITION' (noprec):   reduce infix --> function
    action 'OP_COMPARE' (noprec):   reduce infix --> function
    action 'OP_BOOLEAN' (noprec):   reduce infix --> function
    action 'BOOLEAN' (noprec):   reduce infix --> function
    action 'DOUBLE' (noprec):   reduce infix --> function
    action 'INTEGER' (noprec):   reduce infix --> function
    action 'STRING' (noprec):   reduce infix --> function
    action 'IDENT' (noprec):   reduce infix --> function
    action 'error' (noprec):   reduce infix --> function
    action '#' (noprec):   reduce infix --> function
    action '$$' (noprec):   reduce infix --> function
  immediate action:   reduce infix --> function  gotos:state 17:  items:    function -> 'FUN' . term 'RARROW' function
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 18
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 18:  items:    function -> 'FUN' term . 'RARROW' function
    annotation -> term . 'COLON' 'IDENT'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit left 9992):   shift 19
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 19:  items:    function -> 'FUN' term 'RARROW' . function
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto function: 20
    goto application: 21
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 20:  items:    function -> 'FUN' term 'RARROW' function . 
  actions:    action 'EOF' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'SEMI' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BAR_SEMI' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'COMMA' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BAR_COMMA' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'RARROW' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BAR' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BANG' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'EQUAL' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'COLON_EQUAL' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'SEND' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'RECEIVE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'ON' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'REF' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'FUN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'IF' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'THEN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'ELSE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'ELIF' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BEGIN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'END' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'LET' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'REC' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'IN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'MATCH' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'WITH' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'WHEN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'POLICY' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'TRY' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'FINALLY' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'NULL' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'COLON' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'LBRACKET' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'RBRACKET' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'LBRACE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'RBRACE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'LPAREN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'RPAREN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'OP_ADDITION' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'OP_COMPARE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'OP_BOOLEAN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'BOOLEAN' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'DOUBLE' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'INTEGER' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'STRING' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'IDENT' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action 'error' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action '#' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
    action '$$' (explicit left 9992):   reduce function --> 'FUN' term 'RARROW' function
  immediate action:   reduce function --> 'FUN' term 'RARROW' function  gotos:state 21:  items:    function -> application . 
    application -> application . atomic
  actions:    action 'EOF' (noprec):   reduce function --> application
    action 'SEMI' (noprec):   reduce function --> application
    action 'BAR_SEMI' (noprec):   reduce function --> application
    action 'COMMA' (noprec):   reduce function --> application
    action 'BAR_COMMA' (noprec):   reduce function --> application
    action 'RARROW' (noprec):   reduce function --> application
    action 'BAR' (noprec):   reduce function --> application
    action 'BANG' (noprec):   reduce function --> application
    action 'EQUAL' (noprec):   reduce function --> application
    action 'COLON_EQUAL' (noprec):   reduce function --> application
    action 'SEND' (noprec):   reduce function --> application
    action 'RECEIVE' (noprec):   reduce function --> application
    action 'ON' (noprec):   reduce function --> application
    action 'REF' (noprec):   reduce function --> application
    action 'FUN' (noprec):   reduce function --> application
    action 'IF' (noprec):   reduce function --> application
    action 'THEN' (noprec):   reduce function --> application
    action 'ELSE' (noprec):   reduce function --> application
    action 'ELIF' (noprec):   reduce function --> application
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   reduce function --> application
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   reduce function --> application
    action 'IN' (noprec):   reduce function --> application
    action 'MATCH' (noprec):   reduce function --> application
    action 'WITH' (noprec):   reduce function --> application
    action 'WHEN' (noprec):   reduce function --> application
    action 'POLICY' (noprec):   reduce function --> application
    action 'TRY' (noprec):   reduce function --> application
    action 'FINALLY' (noprec):   reduce function --> application
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   reduce function --> application
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   reduce function --> application
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   reduce function --> application
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   reduce function --> application
    action 'OP_MULTIPLICATION' (noprec):   reduce function --> application
    action 'OP_ADDITION' (noprec):   reduce function --> application
    action 'OP_COMPARE' (noprec):   reduce function --> application
    action 'OP_BOOLEAN' (noprec):   reduce function --> application
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   reduce function --> application
    action '#' (noprec):   reduce function --> application
    action '$$' (noprec):   reduce function --> application
  immediate action: <none>  gotos:    goto atomic: 23
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 22:  items:    application -> atomic . 
  actions:    action 'EOF' (noprec):   reduce application --> atomic
    action 'SEMI' (noprec):   reduce application --> atomic
    action 'BAR_SEMI' (noprec):   reduce application --> atomic
    action 'COMMA' (noprec):   reduce application --> atomic
    action 'BAR_COMMA' (noprec):   reduce application --> atomic
    action 'RARROW' (noprec):   reduce application --> atomic
    action 'BAR' (noprec):   reduce application --> atomic
    action 'BANG' (noprec):   reduce application --> atomic
    action 'EQUAL' (noprec):   reduce application --> atomic
    action 'COLON_EQUAL' (noprec):   reduce application --> atomic
    action 'SEND' (noprec):   reduce application --> atomic
    action 'RECEIVE' (noprec):   reduce application --> atomic
    action 'ON' (noprec):   reduce application --> atomic
    action 'REF' (noprec):   reduce application --> atomic
    action 'FUN' (noprec):   reduce application --> atomic
    action 'IF' (noprec):   reduce application --> atomic
    action 'THEN' (noprec):   reduce application --> atomic
    action 'ELSE' (noprec):   reduce application --> atomic
    action 'ELIF' (noprec):   reduce application --> atomic
    action 'BEGIN' (noprec):   reduce application --> atomic
    action 'END' (noprec):   reduce application --> atomic
    action 'LET' (noprec):   reduce application --> atomic
    action 'REC' (noprec):   reduce application --> atomic
    action 'IN' (noprec):   reduce application --> atomic
    action 'MATCH' (noprec):   reduce application --> atomic
    action 'WITH' (noprec):   reduce application --> atomic
    action 'WHEN' (noprec):   reduce application --> atomic
    action 'POLICY' (noprec):   reduce application --> atomic
    action 'TRY' (noprec):   reduce application --> atomic
    action 'FINALLY' (noprec):   reduce application --> atomic
    action 'NULL' (noprec):   reduce application --> atomic
    action 'COLON' (noprec):   reduce application --> atomic
    action 'LBRACKET' (noprec):   reduce application --> atomic
    action 'RBRACKET' (noprec):   reduce application --> atomic
    action 'LBRACE' (noprec):   reduce application --> atomic
    action 'RBRACE' (noprec):   reduce application --> atomic
    action 'LPAREN' (noprec):   reduce application --> atomic
    action 'RPAREN' (noprec):   reduce application --> atomic
    action 'OP_MULTIPLICATION' (noprec):   reduce application --> atomic
    action 'OP_ADDITION' (noprec):   reduce application --> atomic
    action 'OP_COMPARE' (noprec):   reduce application --> atomic
    action 'OP_BOOLEAN' (noprec):   reduce application --> atomic
    action 'BOOLEAN' (noprec):   reduce application --> atomic
    action 'DOUBLE' (noprec):   reduce application --> atomic
    action 'INTEGER' (noprec):   reduce application --> atomic
    action 'STRING' (noprec):   reduce application --> atomic
    action 'IDENT' (noprec):   reduce application --> atomic
    action 'error' (noprec):   reduce application --> atomic
    action '#' (noprec):   reduce application --> atomic
    action '$$' (noprec):   reduce application --> atomic
  immediate action:   reduce application --> atomic  gotos:state 23:  items:    application -> application atomic . 
  actions:    action 'EOF' (noprec):   reduce application --> application atomic
    action 'SEMI' (noprec):   reduce application --> application atomic
    action 'BAR_SEMI' (noprec):   reduce application --> application atomic
    action 'COMMA' (noprec):   reduce application --> application atomic
    action 'BAR_COMMA' (noprec):   reduce application --> application atomic
    action 'RARROW' (noprec):   reduce application --> application atomic
    action 'BAR' (noprec):   reduce application --> application atomic
    action 'BANG' (noprec):   reduce application --> application atomic
    action 'EQUAL' (noprec):   reduce application --> application atomic
    action 'COLON_EQUAL' (noprec):   reduce application --> application atomic
    action 'SEND' (noprec):   reduce application --> application atomic
    action 'RECEIVE' (noprec):   reduce application --> application atomic
    action 'ON' (noprec):   reduce application --> application atomic
    action 'REF' (noprec):   reduce application --> application atomic
    action 'FUN' (noprec):   reduce application --> application atomic
    action 'IF' (noprec):   reduce application --> application atomic
    action 'THEN' (noprec):   reduce application --> application atomic
    action 'ELSE' (noprec):   reduce application --> application atomic
    action 'ELIF' (noprec):   reduce application --> application atomic
    action 'BEGIN' (noprec):   reduce application --> application atomic
    action 'END' (noprec):   reduce application --> application atomic
    action 'LET' (noprec):   reduce application --> application atomic
    action 'REC' (noprec):   reduce application --> application atomic
    action 'IN' (noprec):   reduce application --> application atomic
    action 'MATCH' (noprec):   reduce application --> application atomic
    action 'WITH' (noprec):   reduce application --> application atomic
    action 'WHEN' (noprec):   reduce application --> application atomic
    action 'POLICY' (noprec):   reduce application --> application atomic
    action 'TRY' (noprec):   reduce application --> application atomic
    action 'FINALLY' (noprec):   reduce application --> application atomic
    action 'NULL' (noprec):   reduce application --> application atomic
    action 'COLON' (noprec):   reduce application --> application atomic
    action 'LBRACKET' (noprec):   reduce application --> application atomic
    action 'RBRACKET' (noprec):   reduce application --> application atomic
    action 'LBRACE' (noprec):   reduce application --> application atomic
    action 'RBRACE' (noprec):   reduce application --> application atomic
    action 'LPAREN' (noprec):   reduce application --> application atomic
    action 'RPAREN' (noprec):   reduce application --> application atomic
    action 'OP_MULTIPLICATION' (noprec):   reduce application --> application atomic
    action 'OP_ADDITION' (noprec):   reduce application --> application atomic
    action 'OP_COMPARE' (noprec):   reduce application --> application atomic
    action 'OP_BOOLEAN' (noprec):   reduce application --> application atomic
    action 'BOOLEAN' (noprec):   reduce application --> application atomic
    action 'DOUBLE' (noprec):   reduce application --> application atomic
    action 'INTEGER' (noprec):   reduce application --> application atomic
    action 'STRING' (noprec):   reduce application --> application atomic
    action 'IDENT' (noprec):   reduce application --> application atomic
    action 'error' (noprec):   reduce application --> application atomic
    action '#' (noprec):   reduce application --> application atomic
    action '$$' (noprec):   reduce application --> application atomic
  immediate action:   reduce application --> application atomic  gotos:state 24:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixAssignment -> infix 'COLON_EQUAL' infix . 
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'SEMI' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'BAR_SEMI' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'COMMA' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'BAR_COMMA' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'RARROW' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'BAR' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'BANG' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'EQUAL' (explicit left 9997):   shift 34
    action 'COLON_EQUAL' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'SEND' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'RECEIVE' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'ON' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'REF' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'FUN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'IF' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'THEN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'ELSE' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'ELIF' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'BEGIN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'END' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'LET' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'REC' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'IN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'MATCH' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'WITH' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'WHEN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'POLICY' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'TRY' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'FINALLY' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'NULL' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'COLON' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'LBRACKET' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'RBRACKET' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'LBRACE' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'RBRACE' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'LPAREN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'RPAREN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   shift 37
    action 'OP_COMPARE' (explicit left 9997):   shift 35
    action 'OP_BOOLEAN' (explicit left 9996):   shift 32
    action 'BOOLEAN' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'DOUBLE' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'INTEGER' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'STRING' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'IDENT' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action 'error' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action '#' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
    action '$$' (explicit left 9995):   reduce infixAssignment --> infix 'COLON_EQUAL' infix
  immediate action: <none>  gotos:state 25:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixBoolean -> infix 'OP_BOOLEAN' infix . 
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'SEMI' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BAR_SEMI' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'COMMA' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BAR_COMMA' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'RARROW' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BAR' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BANG' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'EQUAL' (explicit left 9997):   shift 34
    action 'COLON_EQUAL' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'SEND' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'RECEIVE' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'ON' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'REF' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'FUN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'IF' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'THEN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'ELSE' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'ELIF' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BEGIN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'END' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'LET' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'REC' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'IN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'MATCH' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'WITH' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'WHEN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'POLICY' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'TRY' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'FINALLY' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'NULL' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'COLON' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'LBRACKET' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'RBRACKET' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'LBRACE' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'RBRACE' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'LPAREN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'RPAREN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   shift 37
    action 'OP_COMPARE' (explicit left 9997):   shift 35
    action 'OP_BOOLEAN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'BOOLEAN' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'DOUBLE' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'INTEGER' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'STRING' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'IDENT' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action 'error' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action '#' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
    action '$$' (explicit left 9996):   reduce infixBoolean --> infix 'OP_BOOLEAN' infix
  immediate action: <none>  gotos:state 26:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix 'EQUAL' infix . 
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'SEMI' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BAR_SEMI' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'COMMA' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BAR_COMMA' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'RARROW' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BAR' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BANG' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'EQUAL' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'COLON_EQUAL' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'SEND' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'RECEIVE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'ON' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'REF' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'FUN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'IF' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'THEN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'ELSE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'ELIF' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BEGIN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'END' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'LET' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'REC' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'IN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'MATCH' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'WITH' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'WHEN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'POLICY' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'TRY' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'FINALLY' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'NULL' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'COLON' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'LBRACKET' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'RBRACKET' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'LBRACE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'RBRACE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'LPAREN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'RPAREN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   shift 37
    action 'OP_COMPARE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'OP_BOOLEAN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'BOOLEAN' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'DOUBLE' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'INTEGER' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'STRING' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'IDENT' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action 'error' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action '#' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
    action '$$' (explicit left 9997):   reduce infixCompare --> infix 'EQUAL' infix
  immediate action: <none>  gotos:state 27:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixCompare -> infix 'OP_COMPARE' infix . 
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'SEMI' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BAR_SEMI' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'COMMA' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BAR_COMMA' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'RARROW' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BAR' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BANG' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'EQUAL' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'COLON_EQUAL' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'SEND' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'RECEIVE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'ON' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'REF' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'FUN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'IF' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'THEN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'ELSE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'ELIF' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BEGIN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'END' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'LET' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'REC' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'IN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'MATCH' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'WITH' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'WHEN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'POLICY' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'TRY' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'FINALLY' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'NULL' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'COLON' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'LBRACKET' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'RBRACKET' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'LBRACE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'RBRACE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'LPAREN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'RPAREN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   shift 37
    action 'OP_COMPARE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'OP_BOOLEAN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'BOOLEAN' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'DOUBLE' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'INTEGER' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'STRING' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'IDENT' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action 'error' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action '#' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
    action '$$' (explicit left 9997):   reduce infixCompare --> infix 'OP_COMPARE' infix
  immediate action: <none>  gotos:state 28:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixAddition -> infix 'OP_ADDITION' infix . 
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
  actions:    action 'EOF' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'SEMI' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BAR_SEMI' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'COMMA' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BAR_COMMA' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'RARROW' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BAR' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BANG' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'EQUAL' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'COLON_EQUAL' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'SEND' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'RECEIVE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'ON' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'REF' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'FUN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'IF' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'THEN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'ELSE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'ELIF' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BEGIN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'END' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'LET' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'REC' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'IN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'MATCH' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'WITH' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'WHEN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'POLICY' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'TRY' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'FINALLY' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'NULL' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'COLON' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'LBRACKET' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'RBRACKET' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'LBRACE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'RBRACE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'LPAREN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'RPAREN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   shift 39
    action 'OP_ADDITION' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'OP_COMPARE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'OP_BOOLEAN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'BOOLEAN' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'DOUBLE' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'INTEGER' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'STRING' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'IDENT' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action 'error' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action '#' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
    action '$$' (explicit left 9998):   reduce infixAddition --> infix 'OP_ADDITION' infix
  immediate action: <none>  gotos:state 29:  items:    infixAssignment -> infix . 'COLON_EQUAL' infix
    infixBoolean -> infix . 'OP_BOOLEAN' infix
    infixCompare -> infix . 'EQUAL' infix
    infixCompare -> infix . 'OP_COMPARE' infix
    infixAddition -> infix . 'OP_ADDITION' infix
    infixMultiplication -> infix . 'OP_MULTIPLICATION' infix
    infixMultiplication -> infix 'OP_MULTIPLICATION' infix . 
  actions:    action 'EOF' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'SEMI' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BAR_SEMI' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'COMMA' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BAR_COMMA' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'RARROW' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BAR' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BANG' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'EQUAL' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'COLON_EQUAL' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'SEND' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'RECEIVE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'ON' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'REF' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'FUN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'IF' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'THEN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'ELSE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'ELIF' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BEGIN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'END' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'LET' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'REC' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'IN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'MATCH' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'WITH' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'WHEN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'POLICY' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'TRY' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'FINALLY' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'NULL' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'COLON' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'LBRACKET' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'RBRACKET' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'LBRACE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'RBRACE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'LPAREN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'RPAREN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'OP_MULTIPLICATION' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'OP_ADDITION' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'OP_COMPARE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'OP_BOOLEAN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'BOOLEAN' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'DOUBLE' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'INTEGER' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'STRING' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'IDENT' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action 'error' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action '#' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
    action '$$' (explicit left 9999):   reduce infixMultiplication --> infix 'OP_MULTIPLICATION' infix
  immediate action: <none>  gotos:state 30:  items:    infixAssignment -> infix 'COLON_EQUAL' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 24
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 31:  items:    infixAssignment -> infixBoolean . 
  actions:    action 'EOF' (noprec):   reduce infixAssignment --> infixBoolean
    action 'SEMI' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BAR_SEMI' (noprec):   reduce infixAssignment --> infixBoolean
    action 'COMMA' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BAR_COMMA' (noprec):   reduce infixAssignment --> infixBoolean
    action 'RARROW' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BAR' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BANG' (noprec):   reduce infixAssignment --> infixBoolean
    action 'EQUAL' (noprec):   reduce infixAssignment --> infixBoolean
    action 'COLON_EQUAL' (noprec):   reduce infixAssignment --> infixBoolean
    action 'SEND' (noprec):   reduce infixAssignment --> infixBoolean
    action 'RECEIVE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'ON' (noprec):   reduce infixAssignment --> infixBoolean
    action 'REF' (noprec):   reduce infixAssignment --> infixBoolean
    action 'FUN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'IF' (noprec):   reduce infixAssignment --> infixBoolean
    action 'THEN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'ELSE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'ELIF' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BEGIN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'END' (noprec):   reduce infixAssignment --> infixBoolean
    action 'LET' (noprec):   reduce infixAssignment --> infixBoolean
    action 'REC' (noprec):   reduce infixAssignment --> infixBoolean
    action 'IN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'MATCH' (noprec):   reduce infixAssignment --> infixBoolean
    action 'WITH' (noprec):   reduce infixAssignment --> infixBoolean
    action 'WHEN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'POLICY' (noprec):   reduce infixAssignment --> infixBoolean
    action 'TRY' (noprec):   reduce infixAssignment --> infixBoolean
    action 'FINALLY' (noprec):   reduce infixAssignment --> infixBoolean
    action 'NULL' (noprec):   reduce infixAssignment --> infixBoolean
    action 'COLON' (noprec):   reduce infixAssignment --> infixBoolean
    action 'LBRACKET' (noprec):   reduce infixAssignment --> infixBoolean
    action 'RBRACKET' (noprec):   reduce infixAssignment --> infixBoolean
    action 'LBRACE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'RBRACE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'LPAREN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'RPAREN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'OP_MULTIPLICATION' (noprec):   reduce infixAssignment --> infixBoolean
    action 'OP_ADDITION' (noprec):   reduce infixAssignment --> infixBoolean
    action 'OP_COMPARE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'OP_BOOLEAN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'BOOLEAN' (noprec):   reduce infixAssignment --> infixBoolean
    action 'DOUBLE' (noprec):   reduce infixAssignment --> infixBoolean
    action 'INTEGER' (noprec):   reduce infixAssignment --> infixBoolean
    action 'STRING' (noprec):   reduce infixAssignment --> infixBoolean
    action 'IDENT' (noprec):   reduce infixAssignment --> infixBoolean
    action 'error' (noprec):   reduce infixAssignment --> infixBoolean
    action '#' (noprec):   reduce infixAssignment --> infixBoolean
    action '$$' (noprec):   reduce infixAssignment --> infixBoolean
  immediate action:   reduce infixAssignment --> infixBoolean  gotos:state 32:  items:    infixBoolean -> infix 'OP_BOOLEAN' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 25
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 33:  items:    infixBoolean -> infixCompare . 
  actions:    action 'EOF' (noprec):   reduce infixBoolean --> infixCompare
    action 'SEMI' (noprec):   reduce infixBoolean --> infixCompare
    action 'BAR_SEMI' (noprec):   reduce infixBoolean --> infixCompare
    action 'COMMA' (noprec):   reduce infixBoolean --> infixCompare
    action 'BAR_COMMA' (noprec):   reduce infixBoolean --> infixCompare
    action 'RARROW' (noprec):   reduce infixBoolean --> infixCompare
    action 'BAR' (noprec):   reduce infixBoolean --> infixCompare
    action 'BANG' (noprec):   reduce infixBoolean --> infixCompare
    action 'EQUAL' (noprec):   reduce infixBoolean --> infixCompare
    action 'COLON_EQUAL' (noprec):   reduce infixBoolean --> infixCompare
    action 'SEND' (noprec):   reduce infixBoolean --> infixCompare
    action 'RECEIVE' (noprec):   reduce infixBoolean --> infixCompare
    action 'ON' (noprec):   reduce infixBoolean --> infixCompare
    action 'REF' (noprec):   reduce infixBoolean --> infixCompare
    action 'FUN' (noprec):   reduce infixBoolean --> infixCompare
    action 'IF' (noprec):   reduce infixBoolean --> infixCompare
    action 'THEN' (noprec):   reduce infixBoolean --> infixCompare
    action 'ELSE' (noprec):   reduce infixBoolean --> infixCompare
    action 'ELIF' (noprec):   reduce infixBoolean --> infixCompare
    action 'BEGIN' (noprec):   reduce infixBoolean --> infixCompare
    action 'END' (noprec):   reduce infixBoolean --> infixCompare
    action 'LET' (noprec):   reduce infixBoolean --> infixCompare
    action 'REC' (noprec):   reduce infixBoolean --> infixCompare
    action 'IN' (noprec):   reduce infixBoolean --> infixCompare
    action 'MATCH' (noprec):   reduce infixBoolean --> infixCompare
    action 'WITH' (noprec):   reduce infixBoolean --> infixCompare
    action 'WHEN' (noprec):   reduce infixBoolean --> infixCompare
    action 'POLICY' (noprec):   reduce infixBoolean --> infixCompare
    action 'TRY' (noprec):   reduce infixBoolean --> infixCompare
    action 'FINALLY' (noprec):   reduce infixBoolean --> infixCompare
    action 'NULL' (noprec):   reduce infixBoolean --> infixCompare
    action 'COLON' (noprec):   reduce infixBoolean --> infixCompare
    action 'LBRACKET' (noprec):   reduce infixBoolean --> infixCompare
    action 'RBRACKET' (noprec):   reduce infixBoolean --> infixCompare
    action 'LBRACE' (noprec):   reduce infixBoolean --> infixCompare
    action 'RBRACE' (noprec):   reduce infixBoolean --> infixCompare
    action 'LPAREN' (noprec):   reduce infixBoolean --> infixCompare
    action 'RPAREN' (noprec):   reduce infixBoolean --> infixCompare
    action 'OP_MULTIPLICATION' (noprec):   reduce infixBoolean --> infixCompare
    action 'OP_ADDITION' (noprec):   reduce infixBoolean --> infixCompare
    action 'OP_COMPARE' (noprec):   reduce infixBoolean --> infixCompare
    action 'OP_BOOLEAN' (noprec):   reduce infixBoolean --> infixCompare
    action 'BOOLEAN' (noprec):   reduce infixBoolean --> infixCompare
    action 'DOUBLE' (noprec):   reduce infixBoolean --> infixCompare
    action 'INTEGER' (noprec):   reduce infixBoolean --> infixCompare
    action 'STRING' (noprec):   reduce infixBoolean --> infixCompare
    action 'IDENT' (noprec):   reduce infixBoolean --> infixCompare
    action 'error' (noprec):   reduce infixBoolean --> infixCompare
    action '#' (noprec):   reduce infixBoolean --> infixCompare
    action '$$' (noprec):   reduce infixBoolean --> infixCompare
  immediate action:   reduce infixBoolean --> infixCompare  gotos:state 34:  items:    infixCompare -> infix 'EQUAL' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 26
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 35:  items:    infixCompare -> infix 'OP_COMPARE' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 27
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 36:  items:    infixCompare -> infixAddition . 
  actions:    action 'EOF' (noprec):   reduce infixCompare --> infixAddition
    action 'SEMI' (noprec):   reduce infixCompare --> infixAddition
    action 'BAR_SEMI' (noprec):   reduce infixCompare --> infixAddition
    action 'COMMA' (noprec):   reduce infixCompare --> infixAddition
    action 'BAR_COMMA' (noprec):   reduce infixCompare --> infixAddition
    action 'RARROW' (noprec):   reduce infixCompare --> infixAddition
    action 'BAR' (noprec):   reduce infixCompare --> infixAddition
    action 'BANG' (noprec):   reduce infixCompare --> infixAddition
    action 'EQUAL' (noprec):   reduce infixCompare --> infixAddition
    action 'COLON_EQUAL' (noprec):   reduce infixCompare --> infixAddition
    action 'SEND' (noprec):   reduce infixCompare --> infixAddition
    action 'RECEIVE' (noprec):   reduce infixCompare --> infixAddition
    action 'ON' (noprec):   reduce infixCompare --> infixAddition
    action 'REF' (noprec):   reduce infixCompare --> infixAddition
    action 'FUN' (noprec):   reduce infixCompare --> infixAddition
    action 'IF' (noprec):   reduce infixCompare --> infixAddition
    action 'THEN' (noprec):   reduce infixCompare --> infixAddition
    action 'ELSE' (noprec):   reduce infixCompare --> infixAddition
    action 'ELIF' (noprec):   reduce infixCompare --> infixAddition
    action 'BEGIN' (noprec):   reduce infixCompare --> infixAddition
    action 'END' (noprec):   reduce infixCompare --> infixAddition
    action 'LET' (noprec):   reduce infixCompare --> infixAddition
    action 'REC' (noprec):   reduce infixCompare --> infixAddition
    action 'IN' (noprec):   reduce infixCompare --> infixAddition
    action 'MATCH' (noprec):   reduce infixCompare --> infixAddition
    action 'WITH' (noprec):   reduce infixCompare --> infixAddition
    action 'WHEN' (noprec):   reduce infixCompare --> infixAddition
    action 'POLICY' (noprec):   reduce infixCompare --> infixAddition
    action 'TRY' (noprec):   reduce infixCompare --> infixAddition
    action 'FINALLY' (noprec):   reduce infixCompare --> infixAddition
    action 'NULL' (noprec):   reduce infixCompare --> infixAddition
    action 'COLON' (noprec):   reduce infixCompare --> infixAddition
    action 'LBRACKET' (noprec):   reduce infixCompare --> infixAddition
    action 'RBRACKET' (noprec):   reduce infixCompare --> infixAddition
    action 'LBRACE' (noprec):   reduce infixCompare --> infixAddition
    action 'RBRACE' (noprec):   reduce infixCompare --> infixAddition
    action 'LPAREN' (noprec):   reduce infixCompare --> infixAddition
    action 'RPAREN' (noprec):   reduce infixCompare --> infixAddition
    action 'OP_MULTIPLICATION' (noprec):   reduce infixCompare --> infixAddition
    action 'OP_ADDITION' (noprec):   reduce infixCompare --> infixAddition
    action 'OP_COMPARE' (noprec):   reduce infixCompare --> infixAddition
    action 'OP_BOOLEAN' (noprec):   reduce infixCompare --> infixAddition
    action 'BOOLEAN' (noprec):   reduce infixCompare --> infixAddition
    action 'DOUBLE' (noprec):   reduce infixCompare --> infixAddition
    action 'INTEGER' (noprec):   reduce infixCompare --> infixAddition
    action 'STRING' (noprec):   reduce infixCompare --> infixAddition
    action 'IDENT' (noprec):   reduce infixCompare --> infixAddition
    action 'error' (noprec):   reduce infixCompare --> infixAddition
    action '#' (noprec):   reduce infixCompare --> infixAddition
    action '$$' (noprec):   reduce infixCompare --> infixAddition
  immediate action:   reduce infixCompare --> infixAddition  gotos:state 37:  items:    infixAddition -> infix 'OP_ADDITION' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 28
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 38:  items:    infixAddition -> infixMultiplication . 
  actions:    action 'EOF' (noprec):   reduce infixAddition --> infixMultiplication
    action 'SEMI' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BAR_SEMI' (noprec):   reduce infixAddition --> infixMultiplication
    action 'COMMA' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BAR_COMMA' (noprec):   reduce infixAddition --> infixMultiplication
    action 'RARROW' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BAR' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BANG' (noprec):   reduce infixAddition --> infixMultiplication
    action 'EQUAL' (noprec):   reduce infixAddition --> infixMultiplication
    action 'COLON_EQUAL' (noprec):   reduce infixAddition --> infixMultiplication
    action 'SEND' (noprec):   reduce infixAddition --> infixMultiplication
    action 'RECEIVE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'ON' (noprec):   reduce infixAddition --> infixMultiplication
    action 'REF' (noprec):   reduce infixAddition --> infixMultiplication
    action 'FUN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'IF' (noprec):   reduce infixAddition --> infixMultiplication
    action 'THEN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'ELSE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'ELIF' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BEGIN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'END' (noprec):   reduce infixAddition --> infixMultiplication
    action 'LET' (noprec):   reduce infixAddition --> infixMultiplication
    action 'REC' (noprec):   reduce infixAddition --> infixMultiplication
    action 'IN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'MATCH' (noprec):   reduce infixAddition --> infixMultiplication
    action 'WITH' (noprec):   reduce infixAddition --> infixMultiplication
    action 'WHEN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'POLICY' (noprec):   reduce infixAddition --> infixMultiplication
    action 'TRY' (noprec):   reduce infixAddition --> infixMultiplication
    action 'FINALLY' (noprec):   reduce infixAddition --> infixMultiplication
    action 'NULL' (noprec):   reduce infixAddition --> infixMultiplication
    action 'COLON' (noprec):   reduce infixAddition --> infixMultiplication
    action 'LBRACKET' (noprec):   reduce infixAddition --> infixMultiplication
    action 'RBRACKET' (noprec):   reduce infixAddition --> infixMultiplication
    action 'LBRACE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'RBRACE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'LPAREN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'RPAREN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'OP_MULTIPLICATION' (noprec):   reduce infixAddition --> infixMultiplication
    action 'OP_ADDITION' (noprec):   reduce infixAddition --> infixMultiplication
    action 'OP_COMPARE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'OP_BOOLEAN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'BOOLEAN' (noprec):   reduce infixAddition --> infixMultiplication
    action 'DOUBLE' (noprec):   reduce infixAddition --> infixMultiplication
    action 'INTEGER' (noprec):   reduce infixAddition --> infixMultiplication
    action 'STRING' (noprec):   reduce infixAddition --> infixMultiplication
    action 'IDENT' (noprec):   reduce infixAddition --> infixMultiplication
    action 'error' (noprec):   reduce infixAddition --> infixMultiplication
    action '#' (noprec):   reduce infixAddition --> infixMultiplication
    action '$$' (noprec):   reduce infixAddition --> infixMultiplication
  immediate action:   reduce infixAddition --> infixMultiplication  gotos:state 39:  items:    infixMultiplication -> infix 'OP_MULTIPLICATION' . infix
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix: 29
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 40:  items:    annotation -> term . 'COLON' 'IDENT'
    if -> 'IF' term . 'THEN' term
    if -> 'IF' term . 'THEN' term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   shift 65
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 41:  items:    annotation -> term . 'COLON' 'IDENT'
    if -> 'IF' term 'THEN' term . 
    if -> 'IF' term 'THEN' term . ifElse
  actions:    action 'EOF' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'SEMI' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'BAR_SEMI' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'COMMA' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'BAR_COMMA' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'RARROW' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'BAR' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'BANG' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'EQUAL' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'COLON_EQUAL' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'SEND' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'RECEIVE' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'ON' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'REF' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'FUN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'IF' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'THEN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'ELSE' (explicit nonassoc 9994):   shift 70
    action 'ELIF' (explicit nonassoc 9994):   shift 67
    action 'BEGIN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'END' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'LET' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'REC' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'IN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'MATCH' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'WITH' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'WHEN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'POLICY' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'TRY' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'FINALLY' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'NULL' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'COLON' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'LBRACKET' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'RBRACKET' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'LBRACE' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'RBRACE' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'LPAREN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'RPAREN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'OP_MULTIPLICATION' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'OP_ADDITION' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'OP_COMPARE' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'OP_BOOLEAN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'BOOLEAN' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'DOUBLE' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'INTEGER' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'STRING' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'IDENT' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action 'error' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action '#' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
    action '$$' (explicit nonassoc 9993):   reduce if --> 'IF' term 'THEN' term
  immediate action: <none>  gotos:    goto ifElse: 66
state 42:  items:    annotation -> term . 'COLON' 'IDENT'
    ifElse -> 'ELIF' term . 'THEN' term
    ifElse -> 'ELIF' term . 'THEN' term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   shift 68
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 43:  items:    annotation -> term . 'COLON' 'IDENT'
    ifElse -> 'ELIF' term 'THEN' term . 
    ifElse -> 'ELIF' term 'THEN' term . ifElse
  actions:    action 'EOF' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'SEMI' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'BAR_SEMI' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'COMMA' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'BAR_COMMA' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'RARROW' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'BAR' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'BANG' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'EQUAL' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'COLON_EQUAL' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'SEND' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'RECEIVE' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'ON' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'REF' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'FUN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'IF' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'THEN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'ELSE' (explicit nonassoc 9994):   shift 70
    action 'ELIF' (explicit nonassoc 9994):   shift 67
    action 'BEGIN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'END' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'LET' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'REC' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'IN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'MATCH' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'WITH' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'WHEN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'POLICY' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'TRY' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'FINALLY' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'NULL' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'COLON' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'LBRACKET' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'RBRACKET' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'LBRACE' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'RBRACE' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'LPAREN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'RPAREN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'OP_MULTIPLICATION' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'OP_ADDITION' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'OP_COMPARE' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'OP_BOOLEAN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'BOOLEAN' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'DOUBLE' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'INTEGER' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'STRING' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'IDENT' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action 'error' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action '#' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
    action '$$' (explicit nonassoc 9993):   reduce ifElse --> 'ELIF' term 'THEN' term
  immediate action: <none>  gotos:    goto ifElse: 69
state 44:  items:    annotation -> term . 'COLON' 'IDENT'
    ifElse -> 'ELSE' term . 
  actions:    action 'EOF' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'SEMI' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BAR_SEMI' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'COMMA' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BAR_COMMA' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'RARROW' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BAR' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BANG' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'EQUAL' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'COLON_EQUAL' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'SEND' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'RECEIVE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'ON' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'REF' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'FUN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'IF' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'THEN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'ELSE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'ELIF' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BEGIN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'END' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'LET' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'REC' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'IN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'MATCH' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'WITH' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'WHEN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'POLICY' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'TRY' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'FINALLY' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'NULL' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'COLON' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'LBRACKET' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'RBRACKET' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'LBRACE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'RBRACE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'LPAREN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'RPAREN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'OP_MULTIPLICATION' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'OP_ADDITION' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'OP_COMPARE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'OP_BOOLEAN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'BOOLEAN' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'DOUBLE' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'INTEGER' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'STRING' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'IDENT' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action 'error' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action '#' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
    action '$$' (explicit nonassoc 9994):   reduce ifElse --> 'ELSE' term
  immediate action: <none>  gotos:state 45:  items:    annotation -> term . 'COLON' 'IDENT'
    match -> 'MATCH' term . 'WITH' rules
    match -> 'MATCH' term . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 72
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 46:  items:    annotation -> term . 'COLON' 'IDENT'
    policy -> 'POLICY' term . 'WITH' rules
    policy -> 'POLICY' term . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 77
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 47:  items:    annotation -> term . 'COLON' 'IDENT'
    receive -> 'RECEIVE' 'ON' term . 'WITH' rules
    receive -> 'RECEIVE' 'ON' term . 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 83
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 48:  items:    annotation -> term . 'COLON' 'IDENT'
    send -> 'SEND' term . 'ON' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   shift 88
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 49:  items:    annotation -> term . 'COLON' 'IDENT'
    tryWith -> 'TRY' term . 'WITH' rules
    tryFinally -> 'TRY' term . 'FINALLY' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   shift 91
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   shift 93
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 50:  items:    annotation -> term . 'COLON' 'IDENT'
    rule -> term . 'RARROW' atomic
    rule -> term . 'WHEN' term 'RARROW' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit left 9992):   shift 102
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   shift 104
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 51:  items:    annotation -> term . 'COLON' 'IDENT'
    rule -> term 'WHEN' term . 'RARROW' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (explicit left 9992):   shift 105
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 52:  items:    annotation -> term . 'COLON' 'IDENT'
    let -> 'LET' atomic 'EQUAL' term . 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   shift 121
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 53:  items:    annotation -> term . 'COLON' 'IDENT'
    let -> 'LET' 'REC' atomic 'EQUAL' term . 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   shift 127
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 54:  items:    annotation -> term . 'COLON' 'IDENT'
    keyValuePair -> 'STRING' 'COLON' term . 
  actions:    action 'EOF' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'SEMI' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BAR_SEMI' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'COMMA' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BAR_COMMA' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'RARROW' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BAR' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BANG' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'EQUAL' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'COLON_EQUAL' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'SEND' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'RECEIVE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'ON' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'REF' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'FUN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'IF' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'THEN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'ELSE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'ELIF' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BEGIN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'END' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'LET' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'REC' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'IN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'MATCH' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'WITH' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'WHEN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'POLICY' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'TRY' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'FINALLY' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'NULL' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'RBRACKET' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'LBRACE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'RBRACE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'LPAREN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'RPAREN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'OP_ADDITION' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'OP_COMPARE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'OP_BOOLEAN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'BOOLEAN' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'DOUBLE' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'INTEGER' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'STRING' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'IDENT' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action 'error' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action '#' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
    action '$$' (explicit left 9992):   reduce keyValuePair --> 'STRING' 'COLON' term
  immediate action: <none>  gotos:state 55:  items:    annotation -> term . 'COLON' 'IDENT'
    keyValuePair -> 'IDENT' 'COLON' term . 
  actions:    action 'EOF' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'SEMI' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BAR_SEMI' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'COMMA' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BAR_COMMA' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'RARROW' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BAR' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BANG' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'EQUAL' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'COLON_EQUAL' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'SEND' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'RECEIVE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'ON' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'REF' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'FUN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'IF' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'THEN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'ELSE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'ELIF' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BEGIN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'END' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'LET' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'REC' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'IN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'MATCH' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'WITH' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'WHEN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'POLICY' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'TRY' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'FINALLY' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'NULL' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'RBRACKET' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'LBRACE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'RBRACE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'LPAREN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'RPAREN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'OP_ADDITION' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'OP_COMPARE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'OP_BOOLEAN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'BOOLEAN' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'DOUBLE' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'INTEGER' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'STRING' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'IDENT' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action 'error' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action '#' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
    action '$$' (explicit left 9992):   reduce keyValuePair --> 'IDENT' 'COLON' term
  immediate action: <none>  gotos:state 56:  items:    annotation -> term . 'COLON' 'IDENT'
    commaSepTerms -> term . 
  actions:    action 'EOF' (noprec):   reduce commaSepTerms --> term
    action 'SEMI' (noprec):   reduce commaSepTerms --> term
    action 'BAR_SEMI' (noprec):   reduce commaSepTerms --> term
    action 'COMMA' (noprec):   reduce commaSepTerms --> term
    action 'BAR_COMMA' (noprec):   reduce commaSepTerms --> term
    action 'RARROW' (noprec):   reduce commaSepTerms --> term
    action 'BAR' (noprec):   reduce commaSepTerms --> term
    action 'BANG' (noprec):   reduce commaSepTerms --> term
    action 'EQUAL' (noprec):   reduce commaSepTerms --> term
    action 'COLON_EQUAL' (noprec):   reduce commaSepTerms --> term
    action 'SEND' (noprec):   reduce commaSepTerms --> term
    action 'RECEIVE' (noprec):   reduce commaSepTerms --> term
    action 'ON' (noprec):   reduce commaSepTerms --> term
    action 'REF' (noprec):   reduce commaSepTerms --> term
    action 'FUN' (noprec):   reduce commaSepTerms --> term
    action 'IF' (noprec):   reduce commaSepTerms --> term
    action 'THEN' (noprec):   reduce commaSepTerms --> term
    action 'ELSE' (noprec):   reduce commaSepTerms --> term
    action 'ELIF' (noprec):   reduce commaSepTerms --> term
    action 'BEGIN' (noprec):   reduce commaSepTerms --> term
    action 'END' (noprec):   reduce commaSepTerms --> term
    action 'LET' (noprec):   reduce commaSepTerms --> term
    action 'REC' (noprec):   reduce commaSepTerms --> term
    action 'IN' (noprec):   reduce commaSepTerms --> term
    action 'MATCH' (noprec):   reduce commaSepTerms --> term
    action 'WITH' (noprec):   reduce commaSepTerms --> term
    action 'WHEN' (noprec):   reduce commaSepTerms --> term
    action 'POLICY' (noprec):   reduce commaSepTerms --> term
    action 'TRY' (noprec):   reduce commaSepTerms --> term
    action 'FINALLY' (noprec):   reduce commaSepTerms --> term
    action 'NULL' (noprec):   reduce commaSepTerms --> term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   reduce commaSepTerms --> term
    action 'RBRACKET' (noprec):   reduce commaSepTerms --> term
    action 'LBRACE' (noprec):   reduce commaSepTerms --> term
    action 'RBRACE' (noprec):   reduce commaSepTerms --> term
    action 'LPAREN' (noprec):   reduce commaSepTerms --> term
    action 'RPAREN' (noprec):   reduce commaSepTerms --> term
    action 'OP_MULTIPLICATION' (noprec):   reduce commaSepTerms --> term
    action 'OP_ADDITION' (noprec):   reduce commaSepTerms --> term
    action 'OP_COMPARE' (noprec):   reduce commaSepTerms --> term
    action 'OP_BOOLEAN' (noprec):   reduce commaSepTerms --> term
    action 'BOOLEAN' (noprec):   reduce commaSepTerms --> term
    action 'DOUBLE' (noprec):   reduce commaSepTerms --> term
    action 'INTEGER' (noprec):   reduce commaSepTerms --> term
    action 'STRING' (noprec):   reduce commaSepTerms --> term
    action 'IDENT' (noprec):   reduce commaSepTerms --> term
    action 'error' (noprec):   reduce commaSepTerms --> term
    action '#' (noprec):   reduce commaSepTerms --> term
    action '$$' (noprec):   reduce commaSepTerms --> term
  immediate action: <none>  gotos:state 57:  items:    annotation -> term . 'COLON' 'IDENT'
    commaSepTerms -> commaSepTerms 'COMMA' term . 
  actions:    action 'EOF' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'SEMI' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BAR_SEMI' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'COMMA' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BAR_COMMA' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'RARROW' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BAR' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BANG' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'EQUAL' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'COLON_EQUAL' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'SEND' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'RECEIVE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'ON' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'REF' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'FUN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'IF' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'THEN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'ELSE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'ELIF' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BEGIN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'END' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'LET' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'REC' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'IN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'MATCH' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'WITH' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'WHEN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'POLICY' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'TRY' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'FINALLY' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'NULL' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'RBRACKET' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'LBRACE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'RBRACE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'LPAREN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'RPAREN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'OP_MULTIPLICATION' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'OP_ADDITION' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'OP_COMPARE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'OP_BOOLEAN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'BOOLEAN' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'DOUBLE' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'INTEGER' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'STRING' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'IDENT' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action 'error' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action '#' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
    action '$$' (noprec):   reduce commaSepTerms --> commaSepTerms 'COMMA' term
  immediate action: <none>  gotos:state 58:  items:    annotation -> term . 'COLON' 'IDENT'
    commaSepTerms -> commaSepTerms 'BAR_COMMA' term . 
  actions:    action 'EOF' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'SEMI' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BAR_SEMI' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'COMMA' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BAR_COMMA' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'RARROW' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BAR' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BANG' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'EQUAL' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'COLON_EQUAL' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'SEND' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'RECEIVE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'ON' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'REF' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'FUN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'IF' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'THEN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'ELSE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'ELIF' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BEGIN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'END' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'LET' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'REC' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'IN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'MATCH' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'WITH' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'WHEN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'POLICY' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'TRY' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'FINALLY' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'NULL' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'RBRACKET' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'LBRACE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'RBRACE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'LPAREN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'RPAREN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'OP_MULTIPLICATION' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'OP_ADDITION' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'OP_COMPARE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'OP_BOOLEAN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'BOOLEAN' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'DOUBLE' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'INTEGER' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'STRING' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'IDENT' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action 'error' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action '#' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
    action '$$' (noprec):   reduce commaSepTerms --> commaSepTerms 'BAR_COMMA' term
  immediate action: <none>  gotos:state 59:  items:    annotation -> term . 'COLON' 'IDENT'
    semiSepTerms -> term . 
  actions:    action 'EOF' (noprec):   reduce semiSepTerms --> term
    action 'SEMI' (noprec):   reduce semiSepTerms --> term
    action 'BAR_SEMI' (noprec):   reduce semiSepTerms --> term
    action 'COMMA' (noprec):   reduce semiSepTerms --> term
    action 'BAR_COMMA' (noprec):   reduce semiSepTerms --> term
    action 'RARROW' (noprec):   reduce semiSepTerms --> term
    action 'BAR' (noprec):   reduce semiSepTerms --> term
    action 'BANG' (noprec):   reduce semiSepTerms --> term
    action 'EQUAL' (noprec):   reduce semiSepTerms --> term
    action 'COLON_EQUAL' (noprec):   reduce semiSepTerms --> term
    action 'SEND' (noprec):   reduce semiSepTerms --> term
    action 'RECEIVE' (noprec):   reduce semiSepTerms --> term
    action 'ON' (noprec):   reduce semiSepTerms --> term
    action 'REF' (noprec):   reduce semiSepTerms --> term
    action 'FUN' (noprec):   reduce semiSepTerms --> term
    action 'IF' (noprec):   reduce semiSepTerms --> term
    action 'THEN' (noprec):   reduce semiSepTerms --> term
    action 'ELSE' (noprec):   reduce semiSepTerms --> term
    action 'ELIF' (noprec):   reduce semiSepTerms --> term
    action 'BEGIN' (noprec):   reduce semiSepTerms --> term
    action 'END' (noprec):   reduce semiSepTerms --> term
    action 'LET' (noprec):   reduce semiSepTerms --> term
    action 'REC' (noprec):   reduce semiSepTerms --> term
    action 'IN' (noprec):   reduce semiSepTerms --> term
    action 'MATCH' (noprec):   reduce semiSepTerms --> term
    action 'WITH' (noprec):   reduce semiSepTerms --> term
    action 'WHEN' (noprec):   reduce semiSepTerms --> term
    action 'POLICY' (noprec):   reduce semiSepTerms --> term
    action 'TRY' (noprec):   reduce semiSepTerms --> term
    action 'FINALLY' (noprec):   reduce semiSepTerms --> term
    action 'NULL' (noprec):   reduce semiSepTerms --> term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (noprec):   reduce semiSepTerms --> term
    action 'RBRACKET' (noprec):   reduce semiSepTerms --> term
    action 'LBRACE' (noprec):   reduce semiSepTerms --> term
    action 'RBRACE' (noprec):   reduce semiSepTerms --> term
    action 'LPAREN' (noprec):   reduce semiSepTerms --> term
    action 'RPAREN' (noprec):   reduce semiSepTerms --> term
    action 'OP_MULTIPLICATION' (noprec):   reduce semiSepTerms --> term
    action 'OP_ADDITION' (noprec):   reduce semiSepTerms --> term
    action 'OP_COMPARE' (noprec):   reduce semiSepTerms --> term
    action 'OP_BOOLEAN' (noprec):   reduce semiSepTerms --> term
    action 'BOOLEAN' (noprec):   reduce semiSepTerms --> term
    action 'DOUBLE' (noprec):   reduce semiSepTerms --> term
    action 'INTEGER' (noprec):   reduce semiSepTerms --> term
    action 'STRING' (noprec):   reduce semiSepTerms --> term
    action 'IDENT' (noprec):   reduce semiSepTerms --> term
    action 'error' (noprec):   reduce semiSepTerms --> term
    action '#' (noprec):   reduce semiSepTerms --> term
    action '$$' (noprec):   reduce semiSepTerms --> term
  immediate action: <none>  gotos:state 60:  items:    annotation -> term . 'COLON' 'IDENT'
    semiSepTerms -> semiSepTerms 'SEMI' term . 
  actions:    action 'EOF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'SEMI' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BAR_SEMI' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'COMMA' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BAR_COMMA' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'RARROW' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BAR' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BANG' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'EQUAL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'COLON_EQUAL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'SEND' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'RECEIVE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'ON' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'REF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'FUN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'IF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'THEN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'ELSE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'ELIF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BEGIN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'END' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'LET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'REC' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'IN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'MATCH' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'WITH' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'WHEN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'POLICY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'TRY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'FINALLY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'NULL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'RBRACKET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'LBRACE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'RBRACE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'LPAREN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'RPAREN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'OP_ADDITION' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'OP_COMPARE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'OP_BOOLEAN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'BOOLEAN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'DOUBLE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'INTEGER' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'STRING' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'IDENT' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action 'error' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action '#' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
    action '$$' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'SEMI' term
  immediate action: <none>  gotos:state 61:  items:    annotation -> term . 'COLON' 'IDENT'
    semiSepTerms -> semiSepTerms 'BAR_SEMI' term . 
  actions:    action 'EOF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'SEMI' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BAR_SEMI' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'COMMA' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BAR_COMMA' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'RARROW' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BAR' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BANG' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'EQUAL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'COLON_EQUAL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'SEND' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'RECEIVE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'ON' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'REF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'FUN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'IF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'THEN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'ELSE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'ELIF' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BEGIN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'END' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'LET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'REC' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'IN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'MATCH' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'WITH' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'WHEN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'POLICY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'TRY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'FINALLY' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'NULL' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'COLON' (explicit left 9992):   shift 62
    action 'LBRACKET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'RBRACKET' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'LBRACE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'RBRACE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'LPAREN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'RPAREN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'OP_ADDITION' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'OP_COMPARE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'OP_BOOLEAN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'BOOLEAN' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'DOUBLE' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'INTEGER' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'STRING' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'IDENT' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action 'error' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action '#' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
    action '$$' (explicit left 9992):   reduce semiSepTerms --> semiSepTerms 'BAR_SEMI' term
  immediate action: <none>  gotos:state 62:  items:    annotation -> term 'COLON' . 'IDENT'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   shift 63
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 63:  items:    annotation -> term 'COLON' 'IDENT' . 
  actions:    action 'EOF' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'SEMI' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BAR_SEMI' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'COMMA' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BAR_COMMA' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'RARROW' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BAR' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BANG' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'EQUAL' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'COLON_EQUAL' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'SEND' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'RECEIVE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'ON' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'REF' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'FUN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'IF' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'THEN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'ELSE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'ELIF' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BEGIN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'END' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'LET' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'REC' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'IN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'MATCH' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'WITH' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'WHEN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'POLICY' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'TRY' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'FINALLY' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'NULL' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'COLON' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'LBRACKET' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'RBRACKET' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'LBRACE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'RBRACE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'LPAREN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'RPAREN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'OP_MULTIPLICATION' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'OP_ADDITION' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'OP_COMPARE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'OP_BOOLEAN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'BOOLEAN' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'DOUBLE' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'INTEGER' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'STRING' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'IDENT' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action 'error' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action '#' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
    action '$$' (noprec):   reduce annotation --> term 'COLON' 'IDENT'
  immediate action:   reduce annotation --> term 'COLON' 'IDENT'  gotos:state 64:  items:    if -> 'IF' . term 'THEN' term
    if -> 'IF' . term 'THEN' term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 40
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 65:  items:    if -> 'IF' term 'THEN' . term
    if -> 'IF' term 'THEN' . term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 41
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 66:  items:    if -> 'IF' term 'THEN' term ifElse . 
  actions:    action 'EOF' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'SEMI' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BAR_SEMI' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'COMMA' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BAR_COMMA' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'RARROW' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BAR' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BANG' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'EQUAL' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'COLON_EQUAL' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'SEND' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'RECEIVE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'ON' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'REF' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'FUN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'IF' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'THEN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'ELSE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'ELIF' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BEGIN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'END' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'LET' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'REC' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'IN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'MATCH' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'WITH' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'WHEN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'POLICY' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'TRY' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'FINALLY' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'NULL' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'COLON' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'LBRACKET' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'RBRACKET' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'LBRACE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'RBRACE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'LPAREN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'RPAREN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'OP_MULTIPLICATION' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'OP_ADDITION' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'OP_COMPARE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'OP_BOOLEAN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'BOOLEAN' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'DOUBLE' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'INTEGER' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'STRING' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'IDENT' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action 'error' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action '#' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
    action '$$' (noprec):   reduce if --> 'IF' term 'THEN' term ifElse
  immediate action:   reduce if --> 'IF' term 'THEN' term ifElse  gotos:state 67:  items:    ifElse -> 'ELIF' . term 'THEN' term
    ifElse -> 'ELIF' . term 'THEN' term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 42
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 68:  items:    ifElse -> 'ELIF' term 'THEN' . term
    ifElse -> 'ELIF' term 'THEN' . term ifElse
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 43
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 69:  items:    ifElse -> 'ELIF' term 'THEN' term ifElse . 
  actions:    action 'EOF' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'SEMI' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BAR_SEMI' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'COMMA' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BAR_COMMA' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'RARROW' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BAR' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BANG' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'EQUAL' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'COLON_EQUAL' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'SEND' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'RECEIVE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'ON' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'REF' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'FUN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'IF' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'THEN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'ELSE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'ELIF' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BEGIN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'END' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'LET' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'REC' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'IN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'MATCH' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'WITH' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'WHEN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'POLICY' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'TRY' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'FINALLY' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'NULL' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'COLON' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'LBRACKET' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'RBRACKET' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'LBRACE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'RBRACE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'LPAREN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'RPAREN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'OP_MULTIPLICATION' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'OP_ADDITION' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'OP_COMPARE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'OP_BOOLEAN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'BOOLEAN' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'DOUBLE' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'INTEGER' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'STRING' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'IDENT' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action 'error' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action '#' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
    action '$$' (noprec):   reduce ifElse --> 'ELIF' term 'THEN' term ifElse
  immediate action:   reduce ifElse --> 'ELIF' term 'THEN' term ifElse  gotos:state 70:  items:    ifElse -> 'ELSE' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 44
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 71:  items:    match -> 'MATCH' . term 'WITH' rules
    match -> 'MATCH' . term 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 45
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 72:  items:    match -> 'MATCH' term 'WITH' . rules
    match -> 'MATCH' term 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (explicit left 9992):   shift 74
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 73
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 73:  items:    match -> 'MATCH' term 'WITH' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'SEMI' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'COMMA' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'RARROW' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'EQUAL' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'COLON_EQUAL' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'SEND' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'RECEIVE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'ON' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'REF' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'FUN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'IF' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'THEN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'ELSE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'ELIF' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'BEGIN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'END' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'LET' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'REC' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'IN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'MATCH' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'WITH' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'WHEN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'POLICY' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'TRY' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'FINALLY' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'NULL' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'COLON' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'LBRACKET' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'RBRACKET' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'LBRACE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'RBRACE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'LPAREN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'RPAREN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'OP_MULTIPLICATION' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'OP_ADDITION' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'OP_COMPARE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'OP_BOOLEAN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'DOUBLE' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'INTEGER' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'STRING' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'IDENT' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action 'error' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action '#' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
    action '$$' (noprec):   reduce match --> 'MATCH' term 'WITH' rules
  immediate action: <none>  gotos:state 74:  items:    match -> 'MATCH' term 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 75
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 75:  items:    match -> 'MATCH' term 'WITH' 'BAR' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'SEMI' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'BAR_SEMI' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'COMMA' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'BAR_COMMA' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'RARROW' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'EQUAL' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'COLON_EQUAL' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'SEND' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'RECEIVE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'ON' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'REF' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'FUN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'IF' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'THEN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'ELSE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'ELIF' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'BEGIN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'END' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'LET' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'REC' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'IN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'MATCH' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'WITH' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'WHEN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'POLICY' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'TRY' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'FINALLY' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'NULL' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'COLON' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'LBRACKET' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'RBRACKET' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'LBRACE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'RBRACE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'LPAREN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'RPAREN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'OP_ADDITION' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'OP_COMPARE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'OP_BOOLEAN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'BOOLEAN' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'DOUBLE' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'INTEGER' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'STRING' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'IDENT' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action 'error' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action '#' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
    action '$$' (explicit left 9992):   reduce match --> 'MATCH' term 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 76:  items:    policy -> 'POLICY' . term 'WITH' rules
    policy -> 'POLICY' . term 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 46
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 77:  items:    policy -> 'POLICY' term 'WITH' . rules
    policy -> 'POLICY' term 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (explicit left 9992):   shift 79
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 78
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 78:  items:    policy -> 'POLICY' term 'WITH' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'SEMI' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'COMMA' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'RARROW' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'EQUAL' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'COLON_EQUAL' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'SEND' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'RECEIVE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'ON' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'REF' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'FUN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'IF' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'THEN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'ELSE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'ELIF' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'BEGIN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'END' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'LET' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'REC' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'IN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'MATCH' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'WITH' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'WHEN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'POLICY' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'TRY' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'FINALLY' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'NULL' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'COLON' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'LBRACKET' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'RBRACKET' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'LBRACE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'RBRACE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'LPAREN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'RPAREN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'OP_MULTIPLICATION' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'OP_ADDITION' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'OP_COMPARE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'OP_BOOLEAN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'DOUBLE' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'INTEGER' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'STRING' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'IDENT' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action 'error' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action '#' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
    action '$$' (noprec):   reduce policy --> 'POLICY' term 'WITH' rules
  immediate action: <none>  gotos:state 79:  items:    policy -> 'POLICY' term 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 80
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 80:  items:    policy -> 'POLICY' term 'WITH' 'BAR' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'SEMI' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'BAR_SEMI' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'COMMA' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'BAR_COMMA' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'RARROW' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'EQUAL' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'COLON_EQUAL' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'SEND' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'RECEIVE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'ON' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'REF' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'FUN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'IF' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'THEN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'ELSE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'ELIF' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'BEGIN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'END' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'LET' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'REC' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'IN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'MATCH' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'WITH' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'WHEN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'POLICY' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'TRY' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'FINALLY' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'NULL' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'COLON' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'LBRACKET' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'RBRACKET' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'LBRACE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'RBRACE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'LPAREN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'RPAREN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'OP_ADDITION' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'OP_COMPARE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'OP_BOOLEAN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'BOOLEAN' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'DOUBLE' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'INTEGER' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'STRING' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'IDENT' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action 'error' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action '#' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
    action '$$' (explicit left 9992):   reduce policy --> 'POLICY' term 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 81:  items:    receive -> 'RECEIVE' . 'ON' term 'WITH' rules
    receive -> 'RECEIVE' . 'ON' term 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   shift 82
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 82:  items:    receive -> 'RECEIVE' 'ON' . term 'WITH' rules
    receive -> 'RECEIVE' 'ON' . term 'WITH' 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 47
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 83:  items:    receive -> 'RECEIVE' 'ON' term 'WITH' . rules
    receive -> 'RECEIVE' 'ON' term 'WITH' . 'BAR' rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (explicit left 9992):   shift 85
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 84
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 84:  items:    receive -> 'RECEIVE' 'ON' term 'WITH' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'RARROW' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'COLON_EQUAL' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'SEND' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'RECEIVE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'ON' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'REF' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'FUN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'IF' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'THEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'ELSE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'ELIF' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'BEGIN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'END' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'LET' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'REC' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'IN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'MATCH' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'WITH' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'WHEN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'POLICY' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'TRY' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'FINALLY' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'NULL' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'COLON' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'LBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'RBRACKET' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'LBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'RBRACE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'LPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'RPAREN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'OP_MULTIPLICATION' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'OP_ADDITION' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'OP_COMPARE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'OP_BOOLEAN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'DOUBLE' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'INTEGER' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'STRING' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'IDENT' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action 'error' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action '#' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
    action '$$' (noprec):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' rules
  immediate action: <none>  gotos:state 85:  items:    receive -> 'RECEIVE' 'ON' term 'WITH' 'BAR' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 86
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 86:  items:    receive -> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'SEMI' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'BAR_SEMI' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'COMMA' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'BAR_COMMA' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'RARROW' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'EQUAL' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'COLON_EQUAL' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'SEND' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'RECEIVE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'ON' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'REF' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'FUN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'IF' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'THEN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'ELSE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'ELIF' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'BEGIN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'END' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'LET' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'REC' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'IN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'MATCH' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'WITH' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'WHEN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'POLICY' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'TRY' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'FINALLY' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'NULL' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'COLON' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'LBRACKET' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'RBRACKET' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'LBRACE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'RBRACE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'LPAREN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'RPAREN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'OP_ADDITION' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'OP_COMPARE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'OP_BOOLEAN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'BOOLEAN' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'DOUBLE' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'INTEGER' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'STRING' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'IDENT' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action 'error' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action '#' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
    action '$$' (explicit left 9992):   reduce receive --> 'RECEIVE' 'ON' term 'WITH' 'BAR' rules
  immediate action: <none>  gotos:state 87:  items:    send -> 'SEND' . term 'ON' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 48
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 88:  items:    send -> 'SEND' term 'ON' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 89
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 89:  items:    send -> 'SEND' term 'ON' atomic . 
  actions:    action 'EOF' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'SEMI' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BAR_SEMI' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'COMMA' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BAR_COMMA' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'RARROW' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BAR' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BANG' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'EQUAL' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'COLON_EQUAL' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'SEND' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'RECEIVE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'ON' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'REF' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'FUN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'IF' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'THEN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'ELSE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'ELIF' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BEGIN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'END' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'LET' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'REC' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'IN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'MATCH' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'WITH' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'WHEN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'POLICY' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'TRY' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'FINALLY' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'NULL' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'COLON' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'LBRACKET' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'RBRACKET' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'LBRACE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'RBRACE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'LPAREN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'RPAREN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'OP_MULTIPLICATION' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'OP_ADDITION' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'OP_COMPARE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'OP_BOOLEAN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'BOOLEAN' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'DOUBLE' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'INTEGER' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'STRING' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'IDENT' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action 'error' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action '#' (noprec):   reduce send --> 'SEND' term 'ON' atomic
    action '$$' (noprec):   reduce send --> 'SEND' term 'ON' atomic
  immediate action:   reduce send --> 'SEND' term 'ON' atomic  gotos:state 90:  items:    tryWith -> 'TRY' . term 'WITH' rules
    tryFinally -> 'TRY' . term 'FINALLY' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 49
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 91:  items:    tryWith -> 'TRY' term 'WITH' . rules
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rules: 92
    goto rule: 99
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 92:  items:    tryWith -> 'TRY' term 'WITH' rules . 
    rules -> rules . 'BAR' rule
  actions:    action 'EOF' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'SEMI' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'BAR_SEMI' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'COMMA' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'BAR_COMMA' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'RARROW' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'BAR' (explicit left 9992):   shift 100
    action 'BANG' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'EQUAL' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'COLON_EQUAL' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'SEND' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'RECEIVE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'ON' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'REF' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'FUN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'IF' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'THEN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'ELSE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'ELIF' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'BEGIN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'END' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'LET' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'REC' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'IN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'MATCH' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'WITH' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'WHEN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'POLICY' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'TRY' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'FINALLY' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'NULL' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'COLON' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'LBRACKET' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'RBRACKET' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'LBRACE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'RBRACE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'LPAREN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'RPAREN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'OP_MULTIPLICATION' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'OP_ADDITION' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'OP_COMPARE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'OP_BOOLEAN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'BOOLEAN' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'DOUBLE' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'INTEGER' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'STRING' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'IDENT' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action 'error' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action '#' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
    action '$$' (noprec):   reduce tryWith --> 'TRY' term 'WITH' rules
  immediate action: <none>  gotos:state 93:  items:    tryFinally -> 'TRY' term 'FINALLY' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 94
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 94:  items:    tryFinally -> 'TRY' term 'FINALLY' atomic . 
  actions:    action 'EOF' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'SEMI' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BAR_SEMI' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'COMMA' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BAR_COMMA' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'RARROW' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BAR' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BANG' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'EQUAL' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'COLON_EQUAL' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'SEND' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'RECEIVE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'ON' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'REF' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'FUN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'IF' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'THEN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'ELSE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'ELIF' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BEGIN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'END' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'LET' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'REC' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'IN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'MATCH' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'WITH' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'WHEN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'POLICY' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'TRY' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'FINALLY' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'NULL' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'COLON' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'LBRACKET' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'RBRACKET' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'LBRACE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'RBRACE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'LPAREN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'RPAREN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'OP_MULTIPLICATION' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'OP_ADDITION' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'OP_COMPARE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'OP_BOOLEAN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'BOOLEAN' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'DOUBLE' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'INTEGER' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'STRING' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'IDENT' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action 'error' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action '#' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
    action '$$' (noprec):   reduce tryFinally --> 'TRY' term 'FINALLY' atomic
  immediate action:   reduce tryFinally --> 'TRY' term 'FINALLY' atomic  gotos:state 95:  items:    ref -> 'REF' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 96
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 96:  items:    ref -> 'REF' atomic . 
  actions:    action 'EOF' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'SEMI' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BAR_SEMI' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'COMMA' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BAR_COMMA' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'RARROW' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BAR' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BANG' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'EQUAL' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'COLON_EQUAL' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'SEND' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'RECEIVE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'ON' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'REF' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'FUN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'IF' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'THEN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'ELSE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'ELIF' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BEGIN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'END' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'LET' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'REC' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'IN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'MATCH' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'WITH' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'WHEN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'POLICY' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'TRY' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'FINALLY' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'NULL' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'COLON' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'LBRACKET' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'RBRACKET' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'LBRACE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'RBRACE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'LPAREN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'RPAREN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'OP_MULTIPLICATION' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'OP_ADDITION' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'OP_COMPARE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'OP_BOOLEAN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'BOOLEAN' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'DOUBLE' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'INTEGER' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'STRING' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'IDENT' (explicit right 9991):   reduce ref --> 'REF' atomic
    action 'error' (explicit right 9991):   reduce ref --> 'REF' atomic
    action '#' (explicit right 9991):   reduce ref --> 'REF' atomic
    action '$$' (explicit right 9991):   reduce ref --> 'REF' atomic
  immediate action:   reduce ref --> 'REF' atomic  gotos:state 97:  items:    dereference -> 'BANG' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 98
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 98:  items:    dereference -> 'BANG' atomic . 
  actions:    action 'EOF' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'SEMI' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BAR_SEMI' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'COMMA' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BAR_COMMA' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'RARROW' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BAR' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BANG' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'EQUAL' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'COLON_EQUAL' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'SEND' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'RECEIVE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'ON' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'REF' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'FUN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'IF' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'THEN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'ELSE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'ELIF' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BEGIN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'END' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'LET' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'REC' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'IN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'MATCH' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'WITH' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'WHEN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'POLICY' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'TRY' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'FINALLY' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'NULL' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'COLON' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'LBRACKET' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'RBRACKET' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'LBRACE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'RBRACE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'LPAREN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'RPAREN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'OP_MULTIPLICATION' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'OP_ADDITION' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'OP_COMPARE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'OP_BOOLEAN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'BOOLEAN' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'DOUBLE' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'INTEGER' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'STRING' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'IDENT' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action 'error' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action '#' (explicit right 9991):   reduce dereference --> 'BANG' atomic
    action '$$' (explicit right 9991):   reduce dereference --> 'BANG' atomic
  immediate action:   reduce dereference --> 'BANG' atomic  gotos:state 99:  items:    rules -> rule . 
  actions:    action 'EOF' (noprec):   reduce rules --> rule
    action 'SEMI' (noprec):   reduce rules --> rule
    action 'BAR_SEMI' (noprec):   reduce rules --> rule
    action 'COMMA' (noprec):   reduce rules --> rule
    action 'BAR_COMMA' (noprec):   reduce rules --> rule
    action 'RARROW' (noprec):   reduce rules --> rule
    action 'BAR' (noprec):   reduce rules --> rule
    action 'BANG' (noprec):   reduce rules --> rule
    action 'EQUAL' (noprec):   reduce rules --> rule
    action 'COLON_EQUAL' (noprec):   reduce rules --> rule
    action 'SEND' (noprec):   reduce rules --> rule
    action 'RECEIVE' (noprec):   reduce rules --> rule
    action 'ON' (noprec):   reduce rules --> rule
    action 'REF' (noprec):   reduce rules --> rule
    action 'FUN' (noprec):   reduce rules --> rule
    action 'IF' (noprec):   reduce rules --> rule
    action 'THEN' (noprec):   reduce rules --> rule
    action 'ELSE' (noprec):   reduce rules --> rule
    action 'ELIF' (noprec):   reduce rules --> rule
    action 'BEGIN' (noprec):   reduce rules --> rule
    action 'END' (noprec):   reduce rules --> rule
    action 'LET' (noprec):   reduce rules --> rule
    action 'REC' (noprec):   reduce rules --> rule
    action 'IN' (noprec):   reduce rules --> rule
    action 'MATCH' (noprec):   reduce rules --> rule
    action 'WITH' (noprec):   reduce rules --> rule
    action 'WHEN' (noprec):   reduce rules --> rule
    action 'POLICY' (noprec):   reduce rules --> rule
    action 'TRY' (noprec):   reduce rules --> rule
    action 'FINALLY' (noprec):   reduce rules --> rule
    action 'NULL' (noprec):   reduce rules --> rule
    action 'COLON' (noprec):   reduce rules --> rule
    action 'LBRACKET' (noprec):   reduce rules --> rule
    action 'RBRACKET' (noprec):   reduce rules --> rule
    action 'LBRACE' (noprec):   reduce rules --> rule
    action 'RBRACE' (noprec):   reduce rules --> rule
    action 'LPAREN' (noprec):   reduce rules --> rule
    action 'RPAREN' (noprec):   reduce rules --> rule
    action 'OP_MULTIPLICATION' (noprec):   reduce rules --> rule
    action 'OP_ADDITION' (noprec):   reduce rules --> rule
    action 'OP_COMPARE' (noprec):   reduce rules --> rule
    action 'OP_BOOLEAN' (noprec):   reduce rules --> rule
    action 'BOOLEAN' (noprec):   reduce rules --> rule
    action 'DOUBLE' (noprec):   reduce rules --> rule
    action 'INTEGER' (noprec):   reduce rules --> rule
    action 'STRING' (noprec):   reduce rules --> rule
    action 'IDENT' (noprec):   reduce rules --> rule
    action 'error' (noprec):   reduce rules --> rule
    action '#' (noprec):   reduce rules --> rule
    action '$$' (noprec):   reduce rules --> rule
  immediate action:   reduce rules --> rule  gotos:state 100:  items:    rules -> rules 'BAR' . rule
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 50
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto rule: 101
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 101:  items:    rules -> rules 'BAR' rule . 
  actions:    action 'EOF' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'SEMI' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BAR_SEMI' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'COMMA' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BAR_COMMA' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'RARROW' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BAR' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BANG' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'EQUAL' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'COLON_EQUAL' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'SEND' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'RECEIVE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'ON' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'REF' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'FUN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'IF' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'THEN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'ELSE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'ELIF' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BEGIN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'END' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'LET' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'REC' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'IN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'MATCH' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'WITH' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'WHEN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'POLICY' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'TRY' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'FINALLY' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'NULL' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'COLON' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'LBRACKET' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'RBRACKET' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'LBRACE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'RBRACE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'LPAREN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'RPAREN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'OP_ADDITION' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'OP_COMPARE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'OP_BOOLEAN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'BOOLEAN' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'DOUBLE' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'INTEGER' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'STRING' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'IDENT' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action 'error' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action '#' (explicit left 9992):   reduce rules --> rules 'BAR' rule
    action '$$' (explicit left 9992):   reduce rules --> rules 'BAR' rule
  immediate action:   reduce rules --> rules 'BAR' rule  gotos:state 102:  items:    rule -> term 'RARROW' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 103
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 103:  items:    rule -> term 'RARROW' atomic . 
  actions:    action 'EOF' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'SEMI' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BAR_SEMI' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'COMMA' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BAR_COMMA' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'RARROW' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BAR' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BANG' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'EQUAL' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'COLON_EQUAL' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'SEND' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'RECEIVE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'ON' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'REF' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'FUN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'IF' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'THEN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'ELSE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'ELIF' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BEGIN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'END' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'LET' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'REC' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'IN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'MATCH' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'WITH' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'WHEN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'POLICY' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'TRY' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'FINALLY' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'NULL' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'COLON' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'LBRACKET' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'RBRACKET' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'LBRACE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'RBRACE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'LPAREN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'RPAREN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'OP_ADDITION' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'OP_COMPARE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'OP_BOOLEAN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'BOOLEAN' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'DOUBLE' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'INTEGER' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'STRING' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'IDENT' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action 'error' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action '#' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
    action '$$' (explicit left 9992):   reduce rule --> term 'RARROW' atomic
  immediate action:   reduce rule --> term 'RARROW' atomic  gotos:state 104:  items:    rule -> term 'WHEN' . term 'RARROW' atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 51
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 105:  items:    rule -> term 'WHEN' term 'RARROW' . atomic
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 106
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 106:  items:    rule -> term 'WHEN' term 'RARROW' atomic . 
  actions:    action 'EOF' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'SEMI' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BAR_SEMI' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'COMMA' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BAR_COMMA' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'RARROW' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BAR' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BANG' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'EQUAL' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'COLON_EQUAL' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'SEND' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'RECEIVE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'ON' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'REF' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'FUN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'IF' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'THEN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'ELSE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'ELIF' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BEGIN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'END' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'LET' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'REC' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'IN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'MATCH' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'WITH' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'WHEN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'POLICY' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'TRY' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'FINALLY' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'NULL' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'COLON' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'LBRACKET' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'RBRACKET' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'LBRACE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'RBRACE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'LPAREN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'RPAREN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'OP_MULTIPLICATION' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'OP_ADDITION' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'OP_COMPARE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'OP_BOOLEAN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'BOOLEAN' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'DOUBLE' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'INTEGER' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'STRING' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'IDENT' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action 'error' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action '#' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
    action '$$' (explicit left 9992):   reduce rule --> term 'WHEN' term 'RARROW' atomic
  immediate action:   reduce rule --> term 'WHEN' term 'RARROW' atomic  gotos:state 107:  items:    atomic -> constant . 
  actions:    action 'EOF' (noprec):   reduce atomic --> constant
    action 'SEMI' (noprec):   reduce atomic --> constant
    action 'BAR_SEMI' (noprec):   reduce atomic --> constant
    action 'COMMA' (noprec):   reduce atomic --> constant
    action 'BAR_COMMA' (noprec):   reduce atomic --> constant
    action 'RARROW' (noprec):   reduce atomic --> constant
    action 'BAR' (noprec):   reduce atomic --> constant
    action 'BANG' (noprec):   reduce atomic --> constant
    action 'EQUAL' (noprec):   reduce atomic --> constant
    action 'COLON_EQUAL' (noprec):   reduce atomic --> constant
    action 'SEND' (noprec):   reduce atomic --> constant
    action 'RECEIVE' (noprec):   reduce atomic --> constant
    action 'ON' (noprec):   reduce atomic --> constant
    action 'REF' (noprec):   reduce atomic --> constant
    action 'FUN' (noprec):   reduce atomic --> constant
    action 'IF' (noprec):   reduce atomic --> constant
    action 'THEN' (noprec):   reduce atomic --> constant
    action 'ELSE' (noprec):   reduce atomic --> constant
    action 'ELIF' (noprec):   reduce atomic --> constant
    action 'BEGIN' (noprec):   reduce atomic --> constant
    action 'END' (noprec):   reduce atomic --> constant
    action 'LET' (noprec):   reduce atomic --> constant
    action 'REC' (noprec):   reduce atomic --> constant
    action 'IN' (noprec):   reduce atomic --> constant
    action 'MATCH' (noprec):   reduce atomic --> constant
    action 'WITH' (noprec):   reduce atomic --> constant
    action 'WHEN' (noprec):   reduce atomic --> constant
    action 'POLICY' (noprec):   reduce atomic --> constant
    action 'TRY' (noprec):   reduce atomic --> constant
    action 'FINALLY' (noprec):   reduce atomic --> constant
    action 'NULL' (noprec):   reduce atomic --> constant
    action 'COLON' (noprec):   reduce atomic --> constant
    action 'LBRACKET' (noprec):   reduce atomic --> constant
    action 'RBRACKET' (noprec):   reduce atomic --> constant
    action 'LBRACE' (noprec):   reduce atomic --> constant
    action 'RBRACE' (noprec):   reduce atomic --> constant
    action 'LPAREN' (noprec):   reduce atomic --> constant
    action 'RPAREN' (noprec):   reduce atomic --> constant
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> constant
    action 'OP_ADDITION' (noprec):   reduce atomic --> constant
    action 'OP_COMPARE' (noprec):   reduce atomic --> constant
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> constant
    action 'BOOLEAN' (noprec):   reduce atomic --> constant
    action 'DOUBLE' (noprec):   reduce atomic --> constant
    action 'INTEGER' (noprec):   reduce atomic --> constant
    action 'STRING' (noprec):   reduce atomic --> constant
    action 'IDENT' (noprec):   reduce atomic --> constant
    action 'error' (noprec):   reduce atomic --> constant
    action '#' (noprec):   reduce atomic --> constant
    action '$$' (noprec):   reduce atomic --> constant
  immediate action:   reduce atomic --> constant  gotos:state 108:  items:    atomic -> lookup . 
  actions:    action 'EOF' (noprec):   reduce atomic --> lookup
    action 'SEMI' (noprec):   reduce atomic --> lookup
    action 'BAR_SEMI' (noprec):   reduce atomic --> lookup
    action 'COMMA' (noprec):   reduce atomic --> lookup
    action 'BAR_COMMA' (noprec):   reduce atomic --> lookup
    action 'RARROW' (noprec):   reduce atomic --> lookup
    action 'BAR' (noprec):   reduce atomic --> lookup
    action 'BANG' (noprec):   reduce atomic --> lookup
    action 'EQUAL' (noprec):   reduce atomic --> lookup
    action 'COLON_EQUAL' (noprec):   reduce atomic --> lookup
    action 'SEND' (noprec):   reduce atomic --> lookup
    action 'RECEIVE' (noprec):   reduce atomic --> lookup
    action 'ON' (noprec):   reduce atomic --> lookup
    action 'REF' (noprec):   reduce atomic --> lookup
    action 'FUN' (noprec):   reduce atomic --> lookup
    action 'IF' (noprec):   reduce atomic --> lookup
    action 'THEN' (noprec):   reduce atomic --> lookup
    action 'ELSE' (noprec):   reduce atomic --> lookup
    action 'ELIF' (noprec):   reduce atomic --> lookup
    action 'BEGIN' (noprec):   reduce atomic --> lookup
    action 'END' (noprec):   reduce atomic --> lookup
    action 'LET' (noprec):   reduce atomic --> lookup
    action 'REC' (noprec):   reduce atomic --> lookup
    action 'IN' (noprec):   reduce atomic --> lookup
    action 'MATCH' (noprec):   reduce atomic --> lookup
    action 'WITH' (noprec):   reduce atomic --> lookup
    action 'WHEN' (noprec):   reduce atomic --> lookup
    action 'POLICY' (noprec):   reduce atomic --> lookup
    action 'TRY' (noprec):   reduce atomic --> lookup
    action 'FINALLY' (noprec):   reduce atomic --> lookup
    action 'NULL' (noprec):   reduce atomic --> lookup
    action 'COLON' (noprec):   reduce atomic --> lookup
    action 'LBRACKET' (noprec):   reduce atomic --> lookup
    action 'RBRACKET' (noprec):   reduce atomic --> lookup
    action 'LBRACE' (noprec):   reduce atomic --> lookup
    action 'RBRACE' (noprec):   reduce atomic --> lookup
    action 'LPAREN' (noprec):   reduce atomic --> lookup
    action 'RPAREN' (noprec):   reduce atomic --> lookup
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> lookup
    action 'OP_ADDITION' (noprec):   reduce atomic --> lookup
    action 'OP_COMPARE' (noprec):   reduce atomic --> lookup
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> lookup
    action 'BOOLEAN' (noprec):   reduce atomic --> lookup
    action 'DOUBLE' (noprec):   reduce atomic --> lookup
    action 'INTEGER' (noprec):   reduce atomic --> lookup
    action 'STRING' (noprec):   reduce atomic --> lookup
    action 'IDENT' (noprec):   reduce atomic --> lookup
    action 'error' (noprec):   reduce atomic --> lookup
    action '#' (noprec):   reduce atomic --> lookup
    action '$$' (noprec):   reduce atomic --> lookup
  immediate action:   reduce atomic --> lookup  gotos:state 109:  items:    atomic -> 'LPAREN' . commaSepTerms 'RPAREN'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 56
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto commaSepTerms: 110
    goto lookup: 108
    goto constant: 107
state 110:  items:    atomic -> 'LPAREN' commaSepTerms . 'RPAREN'
    commaSepTerms -> commaSepTerms . 'COMMA' term
    commaSepTerms -> commaSepTerms . 'BAR_COMMA' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   shift 147
    action 'BAR_COMMA' (noprec):   shift 148
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 111
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 111:  items:    atomic -> 'LPAREN' commaSepTerms 'RPAREN' . 
  actions:    action 'EOF' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'SEMI' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BAR_SEMI' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'COMMA' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BAR_COMMA' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'RARROW' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BAR' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BANG' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'EQUAL' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'COLON_EQUAL' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'SEND' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'RECEIVE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'ON' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'REF' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'FUN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'IF' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'THEN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'ELSE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'ELIF' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BEGIN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'END' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'LET' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'REC' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'IN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'MATCH' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'WITH' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'WHEN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'POLICY' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'TRY' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'FINALLY' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'NULL' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'COLON' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'LBRACKET' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'RBRACKET' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'LBRACE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'RBRACE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'LPAREN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'RPAREN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'OP_ADDITION' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'OP_COMPARE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'BOOLEAN' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'DOUBLE' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'INTEGER' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'STRING' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'IDENT' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action 'error' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action '#' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
    action '$$' (noprec):   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'
  immediate action:   reduce atomic --> 'LPAREN' commaSepTerms 'RPAREN'  gotos:state 112:  items:    atomic -> 'BEGIN' . semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 59
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto semiSepTerms: 113
    goto lookup: 108
    goto constant: 107
state 113:  items:    atomic -> 'BEGIN' semiSepTerms . 'END'
    semiSepTerms -> semiSepTerms . 'SEMI' term
    semiSepTerms -> semiSepTerms . 'BAR_SEMI' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (explicit left 9992):   shift 149
    action 'BAR_SEMI' (explicit left 9992):   shift 150
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 114
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 114:  items:    atomic -> 'BEGIN' semiSepTerms 'END' . 
  actions:    action 'EOF' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'SEMI' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BAR_SEMI' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'COMMA' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BAR_COMMA' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'RARROW' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BAR' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BANG' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'EQUAL' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'COLON_EQUAL' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'SEND' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'RECEIVE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'ON' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'REF' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'FUN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'IF' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'THEN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'ELSE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'ELIF' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BEGIN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'END' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'LET' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'REC' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'IN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'MATCH' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'WITH' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'WHEN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'POLICY' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'TRY' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'FINALLY' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'NULL' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'COLON' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'LBRACKET' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'RBRACKET' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'LBRACE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'RBRACE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'LPAREN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'RPAREN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'OP_ADDITION' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'OP_COMPARE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'BOOLEAN' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'DOUBLE' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'INTEGER' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'STRING' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'IDENT' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action 'error' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action '#' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
    action '$$' (noprec):   reduce atomic --> 'BEGIN' semiSepTerms 'END'
  immediate action:   reduce atomic --> 'BEGIN' semiSepTerms 'END'  gotos:state 115:  items:    atomic -> let . 
  actions:    action 'EOF' (noprec):   reduce atomic --> let
    action 'SEMI' (noprec):   reduce atomic --> let
    action 'BAR_SEMI' (noprec):   reduce atomic --> let
    action 'COMMA' (noprec):   reduce atomic --> let
    action 'BAR_COMMA' (noprec):   reduce atomic --> let
    action 'RARROW' (noprec):   reduce atomic --> let
    action 'BAR' (noprec):   reduce atomic --> let
    action 'BANG' (noprec):   reduce atomic --> let
    action 'EQUAL' (noprec):   reduce atomic --> let
    action 'COLON_EQUAL' (noprec):   reduce atomic --> let
    action 'SEND' (noprec):   reduce atomic --> let
    action 'RECEIVE' (noprec):   reduce atomic --> let
    action 'ON' (noprec):   reduce atomic --> let
    action 'REF' (noprec):   reduce atomic --> let
    action 'FUN' (noprec):   reduce atomic --> let
    action 'IF' (noprec):   reduce atomic --> let
    action 'THEN' (noprec):   reduce atomic --> let
    action 'ELSE' (noprec):   reduce atomic --> let
    action 'ELIF' (noprec):   reduce atomic --> let
    action 'BEGIN' (noprec):   reduce atomic --> let
    action 'END' (noprec):   reduce atomic --> let
    action 'LET' (noprec):   reduce atomic --> let
    action 'REC' (noprec):   reduce atomic --> let
    action 'IN' (noprec):   reduce atomic --> let
    action 'MATCH' (noprec):   reduce atomic --> let
    action 'WITH' (noprec):   reduce atomic --> let
    action 'WHEN' (noprec):   reduce atomic --> let
    action 'POLICY' (noprec):   reduce atomic --> let
    action 'TRY' (noprec):   reduce atomic --> let
    action 'FINALLY' (noprec):   reduce atomic --> let
    action 'NULL' (noprec):   reduce atomic --> let
    action 'COLON' (noprec):   reduce atomic --> let
    action 'LBRACKET' (noprec):   reduce atomic --> let
    action 'RBRACKET' (noprec):   reduce atomic --> let
    action 'LBRACE' (noprec):   reduce atomic --> let
    action 'RBRACE' (noprec):   reduce atomic --> let
    action 'LPAREN' (noprec):   reduce atomic --> let
    action 'RPAREN' (noprec):   reduce atomic --> let
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> let
    action 'OP_ADDITION' (noprec):   reduce atomic --> let
    action 'OP_COMPARE' (noprec):   reduce atomic --> let
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> let
    action 'BOOLEAN' (noprec):   reduce atomic --> let
    action 'DOUBLE' (noprec):   reduce atomic --> let
    action 'INTEGER' (noprec):   reduce atomic --> let
    action 'STRING' (noprec):   reduce atomic --> let
    action 'IDENT' (noprec):   reduce atomic --> let
    action 'error' (noprec):   reduce atomic --> let
    action '#' (noprec):   reduce atomic --> let
    action '$$' (noprec):   reduce atomic --> let
  immediate action:   reduce atomic --> let  gotos:state 116:  items:    atomic -> map . 
  actions:    action 'EOF' (noprec):   reduce atomic --> map
    action 'SEMI' (noprec):   reduce atomic --> map
    action 'BAR_SEMI' (noprec):   reduce atomic --> map
    action 'COMMA' (noprec):   reduce atomic --> map
    action 'BAR_COMMA' (noprec):   reduce atomic --> map
    action 'RARROW' (noprec):   reduce atomic --> map
    action 'BAR' (noprec):   reduce atomic --> map
    action 'BANG' (noprec):   reduce atomic --> map
    action 'EQUAL' (noprec):   reduce atomic --> map
    action 'COLON_EQUAL' (noprec):   reduce atomic --> map
    action 'SEND' (noprec):   reduce atomic --> map
    action 'RECEIVE' (noprec):   reduce atomic --> map
    action 'ON' (noprec):   reduce atomic --> map
    action 'REF' (noprec):   reduce atomic --> map
    action 'FUN' (noprec):   reduce atomic --> map
    action 'IF' (noprec):   reduce atomic --> map
    action 'THEN' (noprec):   reduce atomic --> map
    action 'ELSE' (noprec):   reduce atomic --> map
    action 'ELIF' (noprec):   reduce atomic --> map
    action 'BEGIN' (noprec):   reduce atomic --> map
    action 'END' (noprec):   reduce atomic --> map
    action 'LET' (noprec):   reduce atomic --> map
    action 'REC' (noprec):   reduce atomic --> map
    action 'IN' (noprec):   reduce atomic --> map
    action 'MATCH' (noprec):   reduce atomic --> map
    action 'WITH' (noprec):   reduce atomic --> map
    action 'WHEN' (noprec):   reduce atomic --> map
    action 'POLICY' (noprec):   reduce atomic --> map
    action 'TRY' (noprec):   reduce atomic --> map
    action 'FINALLY' (noprec):   reduce atomic --> map
    action 'NULL' (noprec):   reduce atomic --> map
    action 'COLON' (noprec):   reduce atomic --> map
    action 'LBRACKET' (noprec):   reduce atomic --> map
    action 'RBRACKET' (noprec):   reduce atomic --> map
    action 'LBRACE' (noprec):   reduce atomic --> map
    action 'RBRACE' (noprec):   reduce atomic --> map
    action 'LPAREN' (noprec):   reduce atomic --> map
    action 'RPAREN' (noprec):   reduce atomic --> map
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> map
    action 'OP_ADDITION' (noprec):   reduce atomic --> map
    action 'OP_COMPARE' (noprec):   reduce atomic --> map
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> map
    action 'BOOLEAN' (noprec):   reduce atomic --> map
    action 'DOUBLE' (noprec):   reduce atomic --> map
    action 'INTEGER' (noprec):   reduce atomic --> map
    action 'STRING' (noprec):   reduce atomic --> map
    action 'IDENT' (noprec):   reduce atomic --> map
    action 'error' (noprec):   reduce atomic --> map
    action '#' (noprec):   reduce atomic --> map
    action '$$' (noprec):   reduce atomic --> map
  immediate action:   reduce atomic --> map  gotos:state 117:  items:    atomic -> list . 
  actions:    action 'EOF' (noprec):   reduce atomic --> list
    action 'SEMI' (noprec):   reduce atomic --> list
    action 'BAR_SEMI' (noprec):   reduce atomic --> list
    action 'COMMA' (noprec):   reduce atomic --> list
    action 'BAR_COMMA' (noprec):   reduce atomic --> list
    action 'RARROW' (noprec):   reduce atomic --> list
    action 'BAR' (noprec):   reduce atomic --> list
    action 'BANG' (noprec):   reduce atomic --> list
    action 'EQUAL' (noprec):   reduce atomic --> list
    action 'COLON_EQUAL' (noprec):   reduce atomic --> list
    action 'SEND' (noprec):   reduce atomic --> list
    action 'RECEIVE' (noprec):   reduce atomic --> list
    action 'ON' (noprec):   reduce atomic --> list
    action 'REF' (noprec):   reduce atomic --> list
    action 'FUN' (noprec):   reduce atomic --> list
    action 'IF' (noprec):   reduce atomic --> list
    action 'THEN' (noprec):   reduce atomic --> list
    action 'ELSE' (noprec):   reduce atomic --> list
    action 'ELIF' (noprec):   reduce atomic --> list
    action 'BEGIN' (noprec):   reduce atomic --> list
    action 'END' (noprec):   reduce atomic --> list
    action 'LET' (noprec):   reduce atomic --> list
    action 'REC' (noprec):   reduce atomic --> list
    action 'IN' (noprec):   reduce atomic --> list
    action 'MATCH' (noprec):   reduce atomic --> list
    action 'WITH' (noprec):   reduce atomic --> list
    action 'WHEN' (noprec):   reduce atomic --> list
    action 'POLICY' (noprec):   reduce atomic --> list
    action 'TRY' (noprec):   reduce atomic --> list
    action 'FINALLY' (noprec):   reduce atomic --> list
    action 'NULL' (noprec):   reduce atomic --> list
    action 'COLON' (noprec):   reduce atomic --> list
    action 'LBRACKET' (noprec):   reduce atomic --> list
    action 'RBRACKET' (noprec):   reduce atomic --> list
    action 'LBRACE' (noprec):   reduce atomic --> list
    action 'RBRACE' (noprec):   reduce atomic --> list
    action 'LPAREN' (noprec):   reduce atomic --> list
    action 'RPAREN' (noprec):   reduce atomic --> list
    action 'OP_MULTIPLICATION' (noprec):   reduce atomic --> list
    action 'OP_ADDITION' (noprec):   reduce atomic --> list
    action 'OP_COMPARE' (noprec):   reduce atomic --> list
    action 'OP_BOOLEAN' (noprec):   reduce atomic --> list
    action 'BOOLEAN' (noprec):   reduce atomic --> list
    action 'DOUBLE' (noprec):   reduce atomic --> list
    action 'INTEGER' (noprec):   reduce atomic --> list
    action 'STRING' (noprec):   reduce atomic --> list
    action 'IDENT' (noprec):   reduce atomic --> list
    action 'error' (noprec):   reduce atomic --> list
    action '#' (noprec):   reduce atomic --> list
    action '$$' (noprec):   reduce atomic --> list
  immediate action:   reduce atomic --> list  gotos:state 118:  items:    let -> 'LET' . atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    let -> 'LET' . 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   shift 124
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 119
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 119:  items:    let -> 'LET' atomic . 'EQUAL' term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (explicit left 9997):   shift 120
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 120:  items:    let -> 'LET' atomic 'EQUAL' . term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 52
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 121:  items:    let -> 'LET' atomic 'EQUAL' term 'IN' . semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 59
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto semiSepTerms: 122
    goto lookup: 108
    goto constant: 107
state 122:  items:    let -> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms . 'END'
    semiSepTerms -> semiSepTerms . 'SEMI' term
    semiSepTerms -> semiSepTerms . 'BAR_SEMI' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (explicit left 9992):   shift 149
    action 'BAR_SEMI' (explicit left 9992):   shift 150
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 123
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 123:  items:    let -> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END' . 
  actions:    action 'EOF' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'SEMI' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR_SEMI' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COMMA' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR_COMMA' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RARROW' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BANG' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'EQUAL' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COLON_EQUAL' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'SEND' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RECEIVE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ON' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'REF' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'FUN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IF' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'THEN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ELSE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ELIF' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BEGIN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'END' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LET' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'REC' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'MATCH' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'WITH' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'WHEN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'POLICY' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'TRY' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'FINALLY' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'NULL' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COLON' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LBRACKET' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RBRACKET' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LBRACE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RBRACE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LPAREN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RPAREN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_MULTIPLICATION' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_ADDITION' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_COMPARE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_BOOLEAN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BOOLEAN' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'DOUBLE' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'INTEGER' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'STRING' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IDENT' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'error' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action '#' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action '$$' (noprec):   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
  immediate action:   reduce let --> 'LET' atomic 'EQUAL' term 'IN' semiSepTerms 'END'  gotos:state 124:  items:    let -> 'LET' 'REC' . atomic 'EQUAL' term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto atomic: 125
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 125:  items:    let -> 'LET' 'REC' atomic . 'EQUAL' term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (explicit left 9997):   shift 126
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 126:  items:    let -> 'LET' 'REC' atomic 'EQUAL' . term 'IN' semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 53
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 127:  items:    let -> 'LET' 'REC' atomic 'EQUAL' term 'IN' . semiSepTerms 'END'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 59
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto semiSepTerms: 128
    goto lookup: 108
    goto constant: 107
state 128:  items:    let -> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms . 'END'
    semiSepTerms -> semiSepTerms . 'SEMI' term
    semiSepTerms -> semiSepTerms . 'BAR_SEMI' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (explicit left 9992):   shift 149
    action 'BAR_SEMI' (explicit left 9992):   shift 150
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 129
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 129:  items:    let -> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END' . 
  actions:    action 'EOF' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'SEMI' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR_SEMI' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COMMA' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR_COMMA' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RARROW' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BAR' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BANG' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'EQUAL' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COLON_EQUAL' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'SEND' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RECEIVE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ON' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'REF' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'FUN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IF' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'THEN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ELSE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'ELIF' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BEGIN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'END' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LET' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'REC' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'MATCH' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'WITH' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'WHEN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'POLICY' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'TRY' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'FINALLY' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'NULL' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'COLON' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LBRACKET' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RBRACKET' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LBRACE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RBRACE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'LPAREN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'RPAREN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_MULTIPLICATION' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_ADDITION' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_COMPARE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'OP_BOOLEAN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'BOOLEAN' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'DOUBLE' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'INTEGER' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'STRING' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'IDENT' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action 'error' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action '#' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
    action '$$' (noprec):   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'
  immediate action:   reduce let --> 'LET' 'REC' atomic 'EQUAL' term 'IN' semiSepTerms 'END'  gotos:state 130:  items:    map -> 'LBRACE' . 'RBRACE'
    map -> 'LBRACE' . keyValuePairs 'RBRACE'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 131
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   shift 139
    action 'IDENT' (noprec):   shift 141
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto keyValuePairs: 132
    goto keyValuePair: 134
state 131:  items:    map -> 'LBRACE' 'RBRACE' . 
  actions:    action 'EOF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'SEMI' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR_SEMI' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COMMA' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR_COMMA' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RARROW' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BAR' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BANG' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'EQUAL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COLON_EQUAL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'SEND' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RECEIVE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ON' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'REF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'FUN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'THEN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ELSE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'ELIF' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BEGIN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'END' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'REC' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'MATCH' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'WITH' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'WHEN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'POLICY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'TRY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'FINALLY' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'NULL' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'COLON' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LBRACKET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RBRACKET' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LBRACE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RBRACE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'LPAREN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'RPAREN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'OP_MULTIPLICATION' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'OP_ADDITION' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'OP_COMPARE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'OP_BOOLEAN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'BOOLEAN' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'DOUBLE' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'INTEGER' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'STRING' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'IDENT' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action 'error' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action '#' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
    action '$$' (noprec):   reduce map --> 'LBRACE' 'RBRACE'
  immediate action:   reduce map --> 'LBRACE' 'RBRACE'  gotos:state 132:  items:    map -> 'LBRACE' keyValuePairs . 'RBRACE'
    keyValuePairs -> keyValuePairs . 'COMMA' keyValuePair
    keyValuePairs -> keyValuePairs . 'BAR_COMMA' keyValuePair
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   shift 135
    action 'BAR_COMMA' (noprec):   shift 137
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   shift 133
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 133:  items:    map -> 'LBRACE' keyValuePairs 'RBRACE' . 
  actions:    action 'EOF' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'SEMI' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BAR_SEMI' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'COMMA' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BAR_COMMA' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'RARROW' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BAR' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BANG' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'EQUAL' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'COLON_EQUAL' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'SEND' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'RECEIVE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'ON' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'REF' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'FUN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'IF' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'THEN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'ELSE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'ELIF' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BEGIN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'END' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'LET' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'REC' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'IN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'MATCH' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'WITH' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'WHEN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'POLICY' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'TRY' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'FINALLY' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'NULL' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'COLON' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'LBRACKET' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'RBRACKET' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'LBRACE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'RBRACE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'LPAREN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'RPAREN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'OP_MULTIPLICATION' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'OP_ADDITION' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'OP_COMPARE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'OP_BOOLEAN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'BOOLEAN' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'DOUBLE' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'INTEGER' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'STRING' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'IDENT' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action 'error' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action '#' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
    action '$$' (noprec):   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'
  immediate action:   reduce map --> 'LBRACE' keyValuePairs 'RBRACE'  gotos:state 134:  items:    keyValuePairs -> keyValuePair . 
  actions:    action 'EOF' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'SEMI' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BAR_SEMI' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'COMMA' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BAR_COMMA' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'RARROW' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BAR' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BANG' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'EQUAL' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'COLON_EQUAL' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'SEND' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'RECEIVE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'ON' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'REF' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'FUN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'IF' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'THEN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'ELSE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'ELIF' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BEGIN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'END' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'LET' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'REC' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'IN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'MATCH' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'WITH' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'WHEN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'POLICY' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'TRY' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'FINALLY' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'NULL' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'COLON' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'LBRACKET' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'RBRACKET' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'LBRACE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'RBRACE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'LPAREN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'RPAREN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'OP_MULTIPLICATION' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'OP_ADDITION' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'OP_COMPARE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'OP_BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'DOUBLE' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'INTEGER' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'STRING' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'IDENT' (noprec):   reduce keyValuePairs --> keyValuePair
    action 'error' (noprec):   reduce keyValuePairs --> keyValuePair
    action '#' (noprec):   reduce keyValuePairs --> keyValuePair
    action '$$' (noprec):   reduce keyValuePairs --> keyValuePair
  immediate action:   reduce keyValuePairs --> keyValuePair  gotos:state 135:  items:    keyValuePairs -> keyValuePairs 'COMMA' . keyValuePair
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   shift 139
    action 'IDENT' (noprec):   shift 141
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto keyValuePair: 136
state 136:  items:    keyValuePairs -> keyValuePairs 'COMMA' keyValuePair . 
  actions:    action 'EOF' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'SEMI' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BAR_SEMI' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'COMMA' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BAR_COMMA' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'RARROW' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BAR' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BANG' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'EQUAL' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'COLON_EQUAL' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'SEND' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'RECEIVE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'ON' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'REF' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'FUN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'IF' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'THEN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'ELSE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'ELIF' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BEGIN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'END' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'LET' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'REC' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'IN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'MATCH' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'WITH' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'WHEN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'POLICY' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'TRY' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'FINALLY' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'NULL' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'COLON' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'LBRACKET' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'RBRACKET' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'LBRACE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'RBRACE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'LPAREN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'RPAREN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'OP_MULTIPLICATION' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'OP_ADDITION' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'OP_COMPARE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'OP_BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'DOUBLE' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'INTEGER' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'STRING' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'IDENT' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action 'error' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action '#' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
    action '$$' (noprec):   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair
  immediate action:   reduce keyValuePairs --> keyValuePairs 'COMMA' keyValuePair  gotos:state 137:  items:    keyValuePairs -> keyValuePairs 'BAR_COMMA' . keyValuePair
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   shift 139
    action 'IDENT' (noprec):   shift 141
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto keyValuePair: 138
state 138:  items:    keyValuePairs -> keyValuePairs 'BAR_COMMA' keyValuePair . 
  actions:    action 'EOF' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'SEMI' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BAR_SEMI' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'COMMA' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BAR_COMMA' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'RARROW' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BAR' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BANG' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'EQUAL' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'COLON_EQUAL' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'SEND' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'RECEIVE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'ON' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'REF' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'FUN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'IF' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'THEN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'ELSE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'ELIF' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BEGIN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'END' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'LET' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'REC' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'IN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'MATCH' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'WITH' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'WHEN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'POLICY' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'TRY' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'FINALLY' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'NULL' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'COLON' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'LBRACKET' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'RBRACKET' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'LBRACE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'RBRACE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'LPAREN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'RPAREN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'OP_MULTIPLICATION' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'OP_ADDITION' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'OP_COMPARE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'OP_BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'BOOLEAN' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'DOUBLE' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'INTEGER' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'STRING' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'IDENT' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action 'error' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action '#' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
    action '$$' (noprec):   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair
  immediate action:   reduce keyValuePairs --> keyValuePairs 'BAR_COMMA' keyValuePair  gotos:state 139:  items:    keyValuePair -> 'STRING' . 'COLON' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 140
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 140:  items:    keyValuePair -> 'STRING' 'COLON' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 54
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 141:  items:    keyValuePair -> 'IDENT' . 'COLON' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (explicit left 9992):   shift 142
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 142:  items:    keyValuePair -> 'IDENT' 'COLON' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 55
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 143:  items:    list -> 'LBRACKET' . 'RBRACKET'
    list -> 'LBRACKET' . commaSepTerms 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   shift 144
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 56
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto commaSepTerms: 145
    goto lookup: 108
    goto constant: 107
state 144:  items:    list -> 'LBRACKET' 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'SEMI' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR_SEMI' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COMMA' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR_COMMA' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RARROW' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BAR' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BANG' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'EQUAL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COLON_EQUAL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'SEND' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RECEIVE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ON' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'REF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'FUN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'THEN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ELSE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'ELIF' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BEGIN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'END' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'REC' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'MATCH' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'WITH' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'WHEN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'POLICY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'TRY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'FINALLY' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'NULL' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'COLON' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LBRACE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RBRACE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'LPAREN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'RPAREN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'OP_MULTIPLICATION' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'OP_ADDITION' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'OP_COMPARE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'OP_BOOLEAN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'BOOLEAN' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'DOUBLE' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'INTEGER' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'STRING' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'IDENT' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action 'error' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action '#' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
    action '$$' (noprec):   reduce list --> 'LBRACKET' 'RBRACKET'
  immediate action:   reduce list --> 'LBRACKET' 'RBRACKET'  gotos:state 145:  items:    list -> 'LBRACKET' commaSepTerms . 'RBRACKET'
    commaSepTerms -> commaSepTerms . 'COMMA' term
    commaSepTerms -> commaSepTerms . 'BAR_COMMA' term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   shift 147
    action 'BAR_COMMA' (noprec):   shift 148
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   error
    action 'RECEIVE' (noprec):   error
    action 'ON' (noprec):   error
    action 'REF' (noprec):   error
    action 'FUN' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'LET' (noprec):   error
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   error
    action 'TRY' (noprec):   error
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   error
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 146
    action 'LBRACE' (noprec):   error
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   error
    action 'DOUBLE' (noprec):   error
    action 'INTEGER' (noprec):   error
    action 'STRING' (noprec):   error
    action 'IDENT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 146:  items:    list -> 'LBRACKET' commaSepTerms 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'SEMI' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BAR_SEMI' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'COMMA' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BAR_COMMA' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'RARROW' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BAR' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BANG' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'EQUAL' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'COLON_EQUAL' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'SEND' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'RECEIVE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'ON' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'REF' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'FUN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'IF' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'THEN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'ELSE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'ELIF' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BEGIN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'END' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'LET' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'REC' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'IN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'MATCH' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'WITH' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'WHEN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'POLICY' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'TRY' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'FINALLY' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'NULL' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'COLON' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'LBRACE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'RBRACE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'LPAREN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'RPAREN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'OP_MULTIPLICATION' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'OP_ADDITION' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'OP_COMPARE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'OP_BOOLEAN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'BOOLEAN' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'DOUBLE' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'INTEGER' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'STRING' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'IDENT' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action 'error' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action '#' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
    action '$$' (noprec):   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'
  immediate action:   reduce list --> 'LBRACKET' commaSepTerms 'RBRACKET'  gotos:state 147:  items:    commaSepTerms -> commaSepTerms 'COMMA' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 57
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 148:  items:    commaSepTerms -> commaSepTerms 'BAR_COMMA' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 58
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 149:  items:    semiSepTerms -> semiSepTerms 'SEMI' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 60
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 150:  items:    semiSepTerms -> semiSepTerms 'BAR_SEMI' . term
  actions:    action 'EOF' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR_SEMI' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'BAR_COMMA' (noprec):   error
    action 'RARROW' (noprec):   error
    action 'BAR' (noprec):   error
    action 'BANG' (explicit right 9991):   shift 97
    action 'EQUAL' (noprec):   error
    action 'COLON_EQUAL' (noprec):   error
    action 'SEND' (noprec):   shift 87
    action 'RECEIVE' (noprec):   shift 81
    action 'ON' (noprec):   error
    action 'REF' (explicit right 9991):   shift 95
    action 'FUN' (noprec):   shift 17
    action 'IF' (noprec):   shift 64
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'ELIF' (noprec):   error
    action 'BEGIN' (noprec):   shift 112
    action 'END' (noprec):   error
    action 'LET' (noprec):   shift 118
    action 'REC' (noprec):   error
    action 'IN' (noprec):   error
    action 'MATCH' (noprec):   shift 71
    action 'WITH' (noprec):   error
    action 'WHEN' (noprec):   error
    action 'POLICY' (noprec):   shift 76
    action 'TRY' (noprec):   shift 90
    action 'FINALLY' (noprec):   error
    action 'NULL' (noprec):   shift 156
    action 'COLON' (noprec):   error
    action 'LBRACKET' (noprec):   shift 143
    action 'RBRACKET' (noprec):   error
    action 'LBRACE' (noprec):   shift 130
    action 'RBRACE' (noprec):   error
    action 'LPAREN' (noprec):   shift 109
    action 'RPAREN' (noprec):   error
    action 'OP_MULTIPLICATION' (noprec):   error
    action 'OP_ADDITION' (noprec):   error
    action 'OP_COMPARE' (noprec):   error
    action 'OP_BOOLEAN' (noprec):   error
    action 'BOOLEAN' (noprec):   shift 155
    action 'DOUBLE' (noprec):   shift 154
    action 'INTEGER' (noprec):   shift 153
    action 'STRING' (noprec):   shift 152
    action 'IDENT' (noprec):   shift 151
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto term: 61
    goto infix: 4
    goto function: 16
    goto application: 21
    goto infixAssignment: 15
    goto infixBoolean: 31
    goto infixCompare: 33
    goto infixAddition: 36
    goto infixMultiplication: 38
    goto annotation: 5
    goto if: 6
    goto match: 7
    goto policy: 8
    goto receive: 9
    goto send: 10
    goto tryWith: 11
    goto tryFinally: 12
    goto ref: 13
    goto dereference: 14
    goto atomic: 22
    goto let: 115
    goto map: 116
    goto list: 117
    goto lookup: 108
    goto constant: 107
state 151:  items:    lookup -> 'IDENT' . 
  actions:    action 'EOF' (noprec):   reduce lookup --> 'IDENT'
    action 'SEMI' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR_SEMI' (noprec):   reduce lookup --> 'IDENT'
    action 'COMMA' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR_COMMA' (noprec):   reduce lookup --> 'IDENT'
    action 'RARROW' (noprec):   reduce lookup --> 'IDENT'
    action 'BAR' (noprec):   reduce lookup --> 'IDENT'
    action 'BANG' (noprec):   reduce lookup --> 'IDENT'
    action 'EQUAL' (noprec):   reduce lookup --> 'IDENT'
    action 'COLON_EQUAL' (noprec):   reduce lookup --> 'IDENT'
    action 'SEND' (noprec):   reduce lookup --> 'IDENT'
    action 'RECEIVE' (noprec):   reduce lookup --> 'IDENT'
    action 'ON' (noprec):   reduce lookup --> 'IDENT'
    action 'REF' (noprec):   reduce lookup --> 'IDENT'
    action 'FUN' (noprec):   reduce lookup --> 'IDENT'
    action 'IF' (noprec):   reduce lookup --> 'IDENT'
    action 'THEN' (noprec):   reduce lookup --> 'IDENT'
    action 'ELSE' (noprec):   reduce lookup --> 'IDENT'
    action 'ELIF' (noprec):   reduce lookup --> 'IDENT'
    action 'BEGIN' (noprec):   reduce lookup --> 'IDENT'
    action 'END' (noprec):   reduce lookup --> 'IDENT'
    action 'LET' (noprec):   reduce lookup --> 'IDENT'
    action 'REC' (noprec):   reduce lookup --> 'IDENT'
    action 'IN' (noprec):   reduce lookup --> 'IDENT'
    action 'MATCH' (noprec):   reduce lookup --> 'IDENT'
    action 'WITH' (noprec):   reduce lookup --> 'IDENT'
    action 'WHEN' (noprec):   reduce lookup --> 'IDENT'
    action 'POLICY' (noprec):   reduce lookup --> 'IDENT'
    action 'TRY' (noprec):   reduce lookup --> 'IDENT'
    action 'FINALLY' (noprec):   reduce lookup --> 'IDENT'
    action 'NULL' (noprec):   reduce lookup --> 'IDENT'
    action 'COLON' (noprec):   reduce lookup --> 'IDENT'
    action 'LBRACKET' (noprec):   reduce lookup --> 'IDENT'
    action 'RBRACKET' (noprec):   reduce lookup --> 'IDENT'
    action 'LBRACE' (noprec):   reduce lookup --> 'IDENT'
    action 'RBRACE' (noprec):   reduce lookup --> 'IDENT'
    action 'LPAREN' (noprec):   reduce lookup --> 'IDENT'
    action 'RPAREN' (noprec):   reduce lookup --> 'IDENT'
    action 'OP_MULTIPLICATION' (noprec):   reduce lookup --> 'IDENT'
    action 'OP_ADDITION' (noprec):   reduce lookup --> 'IDENT'
    action 'OP_COMPARE' (noprec):   reduce lookup --> 'IDENT'
    action 'OP_BOOLEAN' (noprec):   reduce lookup --> 'IDENT'
    action 'BOOLEAN' (noprec):   reduce lookup --> 'IDENT'
    action 'DOUBLE' (noprec):   reduce lookup --> 'IDENT'
    action 'INTEGER' (noprec):   reduce lookup --> 'IDENT'
    action 'STRING' (noprec):   reduce lookup --> 'IDENT'
    action 'IDENT' (noprec):   reduce lookup --> 'IDENT'
    action 'error' (noprec):   reduce lookup --> 'IDENT'
    action '#' (noprec):   reduce lookup --> 'IDENT'
    action '$$' (noprec):   reduce lookup --> 'IDENT'
  immediate action:   reduce lookup --> 'IDENT'  gotos:state 152:  items:    constant -> 'STRING' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'STRING'
    action 'SEMI' (noprec):   reduce constant --> 'STRING'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'STRING'
    action 'COMMA' (noprec):   reduce constant --> 'STRING'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'STRING'
    action 'RARROW' (noprec):   reduce constant --> 'STRING'
    action 'BAR' (noprec):   reduce constant --> 'STRING'
    action 'BANG' (noprec):   reduce constant --> 'STRING'
    action 'EQUAL' (noprec):   reduce constant --> 'STRING'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'STRING'
    action 'SEND' (noprec):   reduce constant --> 'STRING'
    action 'RECEIVE' (noprec):   reduce constant --> 'STRING'
    action 'ON' (noprec):   reduce constant --> 'STRING'
    action 'REF' (noprec):   reduce constant --> 'STRING'
    action 'FUN' (noprec):   reduce constant --> 'STRING'
    action 'IF' (noprec):   reduce constant --> 'STRING'
    action 'THEN' (noprec):   reduce constant --> 'STRING'
    action 'ELSE' (noprec):   reduce constant --> 'STRING'
    action 'ELIF' (noprec):   reduce constant --> 'STRING'
    action 'BEGIN' (noprec):   reduce constant --> 'STRING'
    action 'END' (noprec):   reduce constant --> 'STRING'
    action 'LET' (noprec):   reduce constant --> 'STRING'
    action 'REC' (noprec):   reduce constant --> 'STRING'
    action 'IN' (noprec):   reduce constant --> 'STRING'
    action 'MATCH' (noprec):   reduce constant --> 'STRING'
    action 'WITH' (noprec):   reduce constant --> 'STRING'
    action 'WHEN' (noprec):   reduce constant --> 'STRING'
    action 'POLICY' (noprec):   reduce constant --> 'STRING'
    action 'TRY' (noprec):   reduce constant --> 'STRING'
    action 'FINALLY' (noprec):   reduce constant --> 'STRING'
    action 'NULL' (noprec):   reduce constant --> 'STRING'
    action 'COLON' (noprec):   reduce constant --> 'STRING'
    action 'LBRACKET' (noprec):   reduce constant --> 'STRING'
    action 'RBRACKET' (noprec):   reduce constant --> 'STRING'
    action 'LBRACE' (noprec):   reduce constant --> 'STRING'
    action 'RBRACE' (noprec):   reduce constant --> 'STRING'
    action 'LPAREN' (noprec):   reduce constant --> 'STRING'
    action 'RPAREN' (noprec):   reduce constant --> 'STRING'
    action 'OP_MULTIPLICATION' (noprec):   reduce constant --> 'STRING'
    action 'OP_ADDITION' (noprec):   reduce constant --> 'STRING'
    action 'OP_COMPARE' (noprec):   reduce constant --> 'STRING'
    action 'OP_BOOLEAN' (noprec):   reduce constant --> 'STRING'
    action 'BOOLEAN' (noprec):   reduce constant --> 'STRING'
    action 'DOUBLE' (noprec):   reduce constant --> 'STRING'
    action 'INTEGER' (noprec):   reduce constant --> 'STRING'
    action 'STRING' (noprec):   reduce constant --> 'STRING'
    action 'IDENT' (noprec):   reduce constant --> 'STRING'
    action 'error' (noprec):   reduce constant --> 'STRING'
    action '#' (noprec):   reduce constant --> 'STRING'
    action '$$' (noprec):   reduce constant --> 'STRING'
  immediate action:   reduce constant --> 'STRING'  gotos:state 153:  items:    constant -> 'INTEGER' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'INTEGER'
    action 'SEMI' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'INTEGER'
    action 'COMMA' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'INTEGER'
    action 'RARROW' (noprec):   reduce constant --> 'INTEGER'
    action 'BAR' (noprec):   reduce constant --> 'INTEGER'
    action 'BANG' (noprec):   reduce constant --> 'INTEGER'
    action 'EQUAL' (noprec):   reduce constant --> 'INTEGER'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'INTEGER'
    action 'SEND' (noprec):   reduce constant --> 'INTEGER'
    action 'RECEIVE' (noprec):   reduce constant --> 'INTEGER'
    action 'ON' (noprec):   reduce constant --> 'INTEGER'
    action 'REF' (noprec):   reduce constant --> 'INTEGER'
    action 'FUN' (noprec):   reduce constant --> 'INTEGER'
    action 'IF' (noprec):   reduce constant --> 'INTEGER'
    action 'THEN' (noprec):   reduce constant --> 'INTEGER'
    action 'ELSE' (noprec):   reduce constant --> 'INTEGER'
    action 'ELIF' (noprec):   reduce constant --> 'INTEGER'
    action 'BEGIN' (noprec):   reduce constant --> 'INTEGER'
    action 'END' (noprec):   reduce constant --> 'INTEGER'
    action 'LET' (noprec):   reduce constant --> 'INTEGER'
    action 'REC' (noprec):   reduce constant --> 'INTEGER'
    action 'IN' (noprec):   reduce constant --> 'INTEGER'
    action 'MATCH' (noprec):   reduce constant --> 'INTEGER'
    action 'WITH' (noprec):   reduce constant --> 'INTEGER'
    action 'WHEN' (noprec):   reduce constant --> 'INTEGER'
    action 'POLICY' (noprec):   reduce constant --> 'INTEGER'
    action 'TRY' (noprec):   reduce constant --> 'INTEGER'
    action 'FINALLY' (noprec):   reduce constant --> 'INTEGER'
    action 'NULL' (noprec):   reduce constant --> 'INTEGER'
    action 'COLON' (noprec):   reduce constant --> 'INTEGER'
    action 'LBRACKET' (noprec):   reduce constant --> 'INTEGER'
    action 'RBRACKET' (noprec):   reduce constant --> 'INTEGER'
    action 'LBRACE' (noprec):   reduce constant --> 'INTEGER'
    action 'RBRACE' (noprec):   reduce constant --> 'INTEGER'
    action 'LPAREN' (noprec):   reduce constant --> 'INTEGER'
    action 'RPAREN' (noprec):   reduce constant --> 'INTEGER'
    action 'OP_MULTIPLICATION' (noprec):   reduce constant --> 'INTEGER'
    action 'OP_ADDITION' (noprec):   reduce constant --> 'INTEGER'
    action 'OP_COMPARE' (noprec):   reduce constant --> 'INTEGER'
    action 'OP_BOOLEAN' (noprec):   reduce constant --> 'INTEGER'
    action 'BOOLEAN' (noprec):   reduce constant --> 'INTEGER'
    action 'DOUBLE' (noprec):   reduce constant --> 'INTEGER'
    action 'INTEGER' (noprec):   reduce constant --> 'INTEGER'
    action 'STRING' (noprec):   reduce constant --> 'INTEGER'
    action 'IDENT' (noprec):   reduce constant --> 'INTEGER'
    action 'error' (noprec):   reduce constant --> 'INTEGER'
    action '#' (noprec):   reduce constant --> 'INTEGER'
    action '$$' (noprec):   reduce constant --> 'INTEGER'
  immediate action:   reduce constant --> 'INTEGER'  gotos:state 154:  items:    constant -> 'DOUBLE' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'DOUBLE'
    action 'SEMI' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'DOUBLE'
    action 'COMMA' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'DOUBLE'
    action 'RARROW' (noprec):   reduce constant --> 'DOUBLE'
    action 'BAR' (noprec):   reduce constant --> 'DOUBLE'
    action 'BANG' (noprec):   reduce constant --> 'DOUBLE'
    action 'EQUAL' (noprec):   reduce constant --> 'DOUBLE'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'DOUBLE'
    action 'SEND' (noprec):   reduce constant --> 'DOUBLE'
    action 'RECEIVE' (noprec):   reduce constant --> 'DOUBLE'
    action 'ON' (noprec):   reduce constant --> 'DOUBLE'
    action 'REF' (noprec):   reduce constant --> 'DOUBLE'
    action 'FUN' (noprec):   reduce constant --> 'DOUBLE'
    action 'IF' (noprec):   reduce constant --> 'DOUBLE'
    action 'THEN' (noprec):   reduce constant --> 'DOUBLE'
    action 'ELSE' (noprec):   reduce constant --> 'DOUBLE'
    action 'ELIF' (noprec):   reduce constant --> 'DOUBLE'
    action 'BEGIN' (noprec):   reduce constant --> 'DOUBLE'
    action 'END' (noprec):   reduce constant --> 'DOUBLE'
    action 'LET' (noprec):   reduce constant --> 'DOUBLE'
    action 'REC' (noprec):   reduce constant --> 'DOUBLE'
    action 'IN' (noprec):   reduce constant --> 'DOUBLE'
    action 'MATCH' (noprec):   reduce constant --> 'DOUBLE'
    action 'WITH' (noprec):   reduce constant --> 'DOUBLE'
    action 'WHEN' (noprec):   reduce constant --> 'DOUBLE'
    action 'POLICY' (noprec):   reduce constant --> 'DOUBLE'
    action 'TRY' (noprec):   reduce constant --> 'DOUBLE'
    action 'FINALLY' (noprec):   reduce constant --> 'DOUBLE'
    action 'NULL' (noprec):   reduce constant --> 'DOUBLE'
    action 'COLON' (noprec):   reduce constant --> 'DOUBLE'
    action 'LBRACKET' (noprec):   reduce constant --> 'DOUBLE'
    action 'RBRACKET' (noprec):   reduce constant --> 'DOUBLE'
    action 'LBRACE' (noprec):   reduce constant --> 'DOUBLE'
    action 'RBRACE' (noprec):   reduce constant --> 'DOUBLE'
    action 'LPAREN' (noprec):   reduce constant --> 'DOUBLE'
    action 'RPAREN' (noprec):   reduce constant --> 'DOUBLE'
    action 'OP_MULTIPLICATION' (noprec):   reduce constant --> 'DOUBLE'
    action 'OP_ADDITION' (noprec):   reduce constant --> 'DOUBLE'
    action 'OP_COMPARE' (noprec):   reduce constant --> 'DOUBLE'
    action 'OP_BOOLEAN' (noprec):   reduce constant --> 'DOUBLE'
    action 'BOOLEAN' (noprec):   reduce constant --> 'DOUBLE'
    action 'DOUBLE' (noprec):   reduce constant --> 'DOUBLE'
    action 'INTEGER' (noprec):   reduce constant --> 'DOUBLE'
    action 'STRING' (noprec):   reduce constant --> 'DOUBLE'
    action 'IDENT' (noprec):   reduce constant --> 'DOUBLE'
    action 'error' (noprec):   reduce constant --> 'DOUBLE'
    action '#' (noprec):   reduce constant --> 'DOUBLE'
    action '$$' (noprec):   reduce constant --> 'DOUBLE'
  immediate action:   reduce constant --> 'DOUBLE'  gotos:state 155:  items:    constant -> 'BOOLEAN' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'SEMI' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COMMA' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RARROW' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BAR' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BANG' (noprec):   reduce constant --> 'BOOLEAN'
    action 'EQUAL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'SEND' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RECEIVE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ON' (noprec):   reduce constant --> 'BOOLEAN'
    action 'REF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'FUN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'THEN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ELSE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'ELIF' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BEGIN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'END' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'REC' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'MATCH' (noprec):   reduce constant --> 'BOOLEAN'
    action 'WITH' (noprec):   reduce constant --> 'BOOLEAN'
    action 'WHEN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'POLICY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'TRY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'FINALLY' (noprec):   reduce constant --> 'BOOLEAN'
    action 'NULL' (noprec):   reduce constant --> 'BOOLEAN'
    action 'COLON' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LBRACKET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RBRACKET' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LBRACE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RBRACE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'LPAREN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'RPAREN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'OP_MULTIPLICATION' (noprec):   reduce constant --> 'BOOLEAN'
    action 'OP_ADDITION' (noprec):   reduce constant --> 'BOOLEAN'
    action 'OP_COMPARE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'OP_BOOLEAN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'BOOLEAN' (noprec):   reduce constant --> 'BOOLEAN'
    action 'DOUBLE' (noprec):   reduce constant --> 'BOOLEAN'
    action 'INTEGER' (noprec):   reduce constant --> 'BOOLEAN'
    action 'STRING' (noprec):   reduce constant --> 'BOOLEAN'
    action 'IDENT' (noprec):   reduce constant --> 'BOOLEAN'
    action 'error' (noprec):   reduce constant --> 'BOOLEAN'
    action '#' (noprec):   reduce constant --> 'BOOLEAN'
    action '$$' (noprec):   reduce constant --> 'BOOLEAN'
  immediate action:   reduce constant --> 'BOOLEAN'  gotos:state 156:  items:    constant -> 'NULL' . 
  actions:    action 'EOF' (noprec):   reduce constant --> 'NULL'
    action 'SEMI' (noprec):   reduce constant --> 'NULL'
    action 'BAR_SEMI' (noprec):   reduce constant --> 'NULL'
    action 'COMMA' (noprec):   reduce constant --> 'NULL'
    action 'BAR_COMMA' (noprec):   reduce constant --> 'NULL'
    action 'RARROW' (noprec):   reduce constant --> 'NULL'
    action 'BAR' (noprec):   reduce constant --> 'NULL'
    action 'BANG' (noprec):   reduce constant --> 'NULL'
    action 'EQUAL' (noprec):   reduce constant --> 'NULL'
    action 'COLON_EQUAL' (noprec):   reduce constant --> 'NULL'
    action 'SEND' (noprec):   reduce constant --> 'NULL'
    action 'RECEIVE' (noprec):   reduce constant --> 'NULL'
    action 'ON' (noprec):   reduce constant --> 'NULL'
    action 'REF' (noprec):   reduce constant --> 'NULL'
    action 'FUN' (noprec):   reduce constant --> 'NULL'
    action 'IF' (noprec):   reduce constant --> 'NULL'
    action 'THEN' (noprec):   reduce constant --> 'NULL'
    action 'ELSE' (noprec):   reduce constant --> 'NULL'
    action 'ELIF' (noprec):   reduce constant --> 'NULL'
    action 'BEGIN' (noprec):   reduce constant --> 'NULL'
    action 'END' (noprec):   reduce constant --> 'NULL'
    action 'LET' (noprec):   reduce constant --> 'NULL'
    action 'REC' (noprec):   reduce constant --> 'NULL'
    action 'IN' (noprec):   reduce constant --> 'NULL'
    action 'MATCH' (noprec):   reduce constant --> 'NULL'
    action 'WITH' (noprec):   reduce constant --> 'NULL'
    action 'WHEN' (noprec):   reduce constant --> 'NULL'
    action 'POLICY' (noprec):   reduce constant --> 'NULL'
    action 'TRY' (noprec):   reduce constant --> 'NULL'
    action 'FINALLY' (noprec):   reduce constant --> 'NULL'
    action 'NULL' (noprec):   reduce constant --> 'NULL'
    action 'COLON' (noprec):   reduce constant --> 'NULL'
    action 'LBRACKET' (noprec):   reduce constant --> 'NULL'
    action 'RBRACKET' (noprec):   reduce constant --> 'NULL'
    action 'LBRACE' (noprec):   reduce constant --> 'NULL'
    action 'RBRACE' (noprec):   reduce constant --> 'NULL'
    action 'LPAREN' (noprec):   reduce constant --> 'NULL'
    action 'RPAREN' (noprec):   reduce constant --> 'NULL'
    action 'OP_MULTIPLICATION' (noprec):   reduce constant --> 'NULL'
    action 'OP_ADDITION' (noprec):   reduce constant --> 'NULL'
    action 'OP_COMPARE' (noprec):   reduce constant --> 'NULL'
    action 'OP_BOOLEAN' (noprec):   reduce constant --> 'NULL'
    action 'BOOLEAN' (noprec):   reduce constant --> 'NULL'
    action 'DOUBLE' (noprec):   reduce constant --> 'NULL'
    action 'INTEGER' (noprec):   reduce constant --> 'NULL'
    action 'STRING' (noprec):   reduce constant --> 'NULL'
    action 'IDENT' (noprec):   reduce constant --> 'NULL'
    action 'error' (noprec):   reduce constant --> 'NULL'
    action '#' (noprec):   reduce constant --> 'NULL'
    action '$$' (noprec):   reduce constant --> 'NULL'
  immediate action:   reduce constant --> 'NULL'  gotos:
startStates = 0
------------------------
        Output file describing compiled parser placed in Grammar.fs and Grammar.fsi
